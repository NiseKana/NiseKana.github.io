<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【开源】基于梁山派的智能窗户</title>
      <link href="/posts/27820.html"/>
      <url>/posts/27820.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote><p>首发链接：<a href="https://oshwhub.com/nisekana/liang-shan-pai-zhi-neng-chaunghu">基于梁山派的智能窗户项目 - 嘉立创EDA开源硬件平台 (oshwhub.com)</a></p></blockquote><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>电子小白第一次参加立创的训练营，也是第一次做拿得出手的电子产品啦，虽然是基础营，但全都是一个人完成的。有不好的地方大家可以提出讨论。</p><h1 id="电路原理图"><a class="markdownIt-Anchor" href="#电路原理图"></a> 电路原理图</h1><p><img src="../images/posts/23101001.png" alt="智能窗户原理图" /></p><h1 id="实物图"><a class="markdownIt-Anchor" href="#实物图"></a> 实物图</h1><p><img src="../images/posts/23101002.jpg" alt="实物图1" /></p><p><img src="../images/posts/23101003.jpg" alt="实物图2" /></p><h1 id="演示"><a class="markdownIt-Anchor" href="#演示"></a> 演示</h1><p><a href="https://www.bilibili.com/video/av534626790/">https://www.bilibili.com/video/av534626790/</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 小练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【开源】USB2.0HUB制作</title>
      <link href="/posts/8977.html"/>
      <url>/posts/8977.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>最近参加了立创电子训练营，得（<s>白嫖</s> 到了50元的优惠卷，把要用的元器件买下来还有十几块没有用完，就做了这个基于 SL2.1A 的 USB2.0 拓展坞；</p><h1 id="作品展示"><a class="markdownIt-Anchor" href="#作品展示"></a> 作品展示</h1><p><img src="../images/posts/23091802.jpg" alt="23091803" /></p><p><img src="../images/posts/23091803.jpg" alt="1697727390759" /></p><p><img src="../images/posts/23091804.jpg" alt="23091802" /></p><h1 id="速度测试"><a class="markdownIt-Anchor" href="#速度测试"></a> 速度测试</h1><p>写入时开始能20MB/s左右，最后平均4.4MB/s。读取平均38MB/s左右。</p><p><img src="../images/posts/23091805.png" alt="23091805" /></p><p><img src="../images/posts/23091806.png" alt="23091806" /></p>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 小练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【开源】合宙Air001核心开发板</title>
      <link href="/posts/60076.html"/>
      <url>/posts/60076.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>前一段时间合宙新出了一个 9.9 的开发板 Air001 加一毛钱就可以得到 10 个Air001 芯片。本人也刚学单片机不久，想着买来玩玩，就下单了。到货之后 → 看官方手册 → 打开 Arduino → 流水灯 → 进盒子 → 吃灰。这段时间正好学习立创 EDA 就想着拿出来画个板来练练手，参考官方手册画了个核心板分享一下。</p><h1 id="原理图"><a class="markdownIt-Anchor" href="#原理图"></a> 原理图</h1><p><img src="../images/posts/23082601.png" alt="屏幕截图 2024-02-01 115057" /></p><h1 id="实物图"><a class="markdownIt-Anchor" href="#实物图"></a> 实物图</h1><p><img src="../images/posts/23082602.png" alt="屏幕截图 2024-02-01 115350" /></p>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 小练习 </tag>
            
            <tag> Air001 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】STM32-TIM定时器</title>
      <link href="/posts/22715.html"/>
      <url>/posts/22715.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="tim定时器"><a class="markdownIt-Anchor" href="#tim定时器"></a> TIM定时器</h1><p>定时器可以对输入的时钟进行计数，并在计数值达到设定值时触发中断。</p><p>16位计数器、预分频器、自动重装寄存器的时基单元，在72MHz计数时钟下可以实现最大59.65s的定时。</p><p>不仅具备基本的定时中断功能，而且还包含内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等多种功能。</p><p>根据复杂度和应用场景分为了高级定时器、通用定时器、基本定时器三种类型。</p><h2 id="定时计数"><a class="markdownIt-Anchor" href="#定时计数"></a> 定时计数</h2><h3 id="定时器中断结构图"><a class="markdownIt-Anchor" href="#定时器中断结构图"></a> 定时器中断结构图</h3><p><img src="../images/posts/23072701.png" alt="" /></p><p>内部时钟模式：由内部的72M时钟给实际单元提供时钟。</p><p>外部时钟模式2：在ETR引脚的时钟通过内部的ETRP电路（极性选择、边缘检测、预分频器、输入滤波，这些电路）可以对外部时钟进行整形。最后滤波后的信号分两路：一路通过ETRF进入触发控制器，紧跟着就可以选择作为时基单元的时钟了，如果你想在ETR引脚提供时钟或对ETR时钟进行计数，就可以配置这一路的电路。</p><p>外部时钟模式1：ETR引脚的时钟可以通过ETRF当时钟输入也可以通过TRGI当时钟输入作为时基单元的时钟。TRGI也可以选择触发从模式实现定时器级联等高级操作。</p><h2 id="配置定时器中断"><a class="markdownIt-Anchor" href="#配置定时器中断"></a> 配置定时器中断</h2><p>第一步：配置RCC。开启定时器的时钟。</p><p>第二步：选择时基单元的时钟源。选择内部时钟为时基单元的时钟。</p><p>第三步：配置时基单元。选择计数模式、配置PSC预分频器、ARR自动重装器。</p><p>第四步：配置中断输出控制。选择中断的响应方式。</p><p>第五步：配置NVIC。中断分组，指定中断通道、抢占优先级、响应优先级。</p><p>第六步：运行控制。CMD使能中断。</p><h3 id="常用函数"><a class="markdownIt-Anchor" href="#常用函数"></a> 常用函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//恢复缺省配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_DeInit</span><span class="params">(TIM_TypeDef* TIMx)</span>;</span><br><span class="line"><span class="comment">//时基单元初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_TimeBaseInit</span><span class="params">(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)</span>;</span><br><span class="line"><span class="comment">//赋给结构体默认值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_TimeBaseStructInit</span><span class="params">(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)</span>;</span><br><span class="line"><span class="comment">//使能计数器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_Cmd</span><span class="params">(TIM_TypeDef* TIMx, FunctionalState NewState)</span>;</span><br><span class="line"><span class="comment">//使能中断输出控制</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ITConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_IT, FunctionalState NewState)</span>;</span><br><span class="line"><span class="comment">/*************时基单元时钟选择*1037-1081************/</span></span><br><span class="line"><span class="comment">//选择内部时钟</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_InternalClockConfig</span><span class="params">(TIM_TypeDef* TIMx)</span>;</span><br><span class="line"><span class="comment">//选择ITRx其他定时器的时钟</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ITRxExternalClockConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_InputTriggerSource)</span>;</span><br><span class="line"><span class="comment">//选择TIx捕获通道的时钟</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_TIxExternalClockConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_TIxExternalCLKSource, <span class="type">uint16_t</span> TIM_ICPolarity, <span class="type">uint16_t</span> ICFilter)</span>;</span><br><span class="line"><span class="comment">//选择ETR通过外部时钟模式1输入的时钟</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ETRClockMode1Config</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ExtTRGPrescaler, <span class="type">uint16_t</span> TIM_ExtTRGPolarity, <span class="type">uint16_t</span> ExtTRGFilter)</span>;</span><br><span class="line"><span class="comment">//选择ETR通过外部时钟模式1输入的时钟</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ETRClockMode2Config</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ExtTRGPrescaler,<span class="type">uint16_t</span> TIM_ExtTRGPolarity, <span class="type">uint16_t</span> ExtTRGFilter)</span>;</span><br><span class="line"><span class="comment">//配置ETR引脚的预分频器、极性、滤波器参数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ETRConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ExtTRGPrescaler, <span class="type">uint16_t</span> TIM_ExtTRGPolarity, <span class="type">uint16_t</span> ExtTRGFilter)</span>;</span><br><span class="line"><span class="comment">/********************************/</span></span><br><span class="line"><span class="comment">//单独修改预分频器（PSC）的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_PrescalerConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> Prescaler, <span class="type">uint16_t</span> TIM_PSCReloadMode)</span>;</span><br><span class="line"><span class="comment">//选择计数器的计数模式</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_CounterModeConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_CounterMode)</span>;</span><br><span class="line"><span class="comment">//自动重装器预装功能配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ARRPreloadConfig</span><span class="params">(TIM_TypeDef* TIMx, FunctionalState NewState)</span>;</span><br><span class="line"><span class="comment">//单独修改计数器（CNT）的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetCounter</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> Counter)</span>;</span><br><span class="line"><span class="comment">//单独修改自动重装器（ARR）的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetAutoreload</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> Autoreload)</span>;</span><br><span class="line"><span class="comment">//获取当前计数器的值</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">TIM_GetCounter</span><span class="params">(TIM_TypeDef* TIMx)</span>;</span><br><span class="line"><span class="comment">//获取当前预分频器的值</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">TIM_GetPrescaler</span><span class="params">(TIM_TypeDef* TIMx)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取标志位状态</span></span><br><span class="line">FlagStatus <span class="title function_">TIM_GetFlagStatus</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_FLAG)</span>;</span><br><span class="line"><span class="comment">//清除标志位</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ClearFlag</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_FLAG)</span>;</span><br><span class="line"><span class="comment">//获取中断标志位状态</span></span><br><span class="line">ITStatus <span class="title function_">TIM_GetITStatus</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_IT)</span>;</span><br><span class="line"><span class="comment">//清除中断标志位</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ClearITPendingBit</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_IT)</span>;</span><br></pre></td></tr></table></figure><h3 id="示例程序"><a class="markdownIt-Anchor" href="#示例程序"></a> 示例程序</h3><h4 id="定时器定时中断"><a class="markdownIt-Anchor" href="#定时器定时中断"></a> 定时器定时中断</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int16_t</span> Num;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*****************初始化定时器***************/</span></span><br><span class="line">    <span class="comment">//开启APB1的时钟</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//选择内部时钟为时基单元的时钟</span></span><br><span class="line">    TIM_InternalClockConfig(TIM2);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定输入时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//选择计数模式：  向上计数/向下计数/中央对齐</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Period = <span class="number">10000</span><span class="number">-1</span>;<span class="comment">//周期 ARR自动重装器</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Prescaler = <span class="number">7200</span><span class="number">-1</span>;<span class="comment">//PSC预分频器</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器-高级定时器</span></span><br><span class="line">    TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStruct);<span class="comment">//预分频对72M进行7200分频就是10,000的计数频率，在10K的频率下计10000个数就是1Hz即1喵</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//手动清除中断标志位避免刚复位进中断</span></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_FLAG_Update);</span><br><span class="line"></span><br><span class="line"><span class="comment">//中断输出配置：更新中断</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//配置中断分组</span></span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStrcut;</span><br><span class="line">NVIC_InitStrcut.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStrcut.NVIC_IRQChannelCmd = ENABLE ;</span><br><span class="line">NVIC_InitStrcut.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStrcut.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStrcut);</span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/****************主程序****************/</span></span><br><span class="line">    OLED_Init();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,Num,<span class="number">5</span>);</span><br><span class="line">Delay_ms (<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/****************中断程序****************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)<span class="comment">//检查中断标志位</span></span><br><span class="line">&#123;</span><br><span class="line">Num ++;</span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);<span class="comment">//清除中断标志位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="定时器外部时钟"><a class="markdownIt-Anchor" href="#定时器外部时钟"></a> 定时器外部时钟</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int16_t</span> Num;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*****************初始化定时器***************/</span></span><br><span class="line">    <span class="comment">//开启APB1的时钟</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置外部时钟引脚的GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//TIM_InternalClockConfig(TIM2);//选择时基单元的时钟内部时钟</span></span><br><span class="line">    <span class="comment">//选择外部时钟为时基单元的时钟,时钟引脚需要用到GPIO所以要先配置GPIO--且必须是ETR引脚--</span></span><br><span class="line">    TIM_ETRClockMode2Config(TIM2 ,TIM_ExtTRGPSC_OFF,TIM_ExtTRGPolarity_NonInverted,<span class="number">0x0F</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//选择计数模式：  向上计数/向下计数/中央对齐</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Period = <span class="number">10</span><span class="number">-1</span>;<span class="comment">//周期 ARR自动重装器</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Prescaler = <span class="number">1</span><span class="number">-1</span>;<span class="comment">//PSC预分频器</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器-高级定时器</span></span><br><span class="line">    TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStruct);<span class="comment">//预分频对72M进行7200分频就是10,000的计数频率，在10K的频率下计10000个数就是1Hz即1喵</span></span><br><span class="line"></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_FLAG_Update);<span class="comment">//手动清除中断标志位避免刚复位进中断</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//中断输出配置：更新中断</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//配置中断分组</span></span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStrcut;</span><br><span class="line">NVIC_InitStrcut.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStrcut.NVIC_IRQChannelCmd = ENABLE ;</span><br><span class="line">NVIC_InitStrcut.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStrcut.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStrcut);</span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/****************主程序****************/</span></span><br><span class="line">    OLED_Init();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Num:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;CNT:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,Num,<span class="number">5</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">5</span>,TIM_GetCounter(TIM2),<span class="number">5</span>);<span class="comment">//获取计数器的值</span></span><br><span class="line">Delay_ms (<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中断处理函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)<span class="comment">//检查中断标志位</span></span><br><span class="line">&#123;</span><br><span class="line">Num ++;</span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);<span class="comment">//清除中断标志位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="输出比较"><a class="markdownIt-Anchor" href="#输出比较"></a> 输出比较</h2><h3 id="输出比较output-compare"><a class="markdownIt-Anchor" href="#输出比较output-compare"></a> 输出比较（Output Compare）</h3><p>输出比较可以通过比较CNT与CCR寄存器值的关系，来对输出电平进行置1、置0或翻转的操作，用于输出一定频率和占空比的PWM波形。</p><p>每个高级定时器和通用定时器都拥有4个输出比较通道。</p><p>高级定时器的前3个通道额外拥有死区生成和互补输出的功能。</p><h3 id="输出比较通道"><a class="markdownIt-Anchor" href="#输出比较通道"></a> 输出比较通道</h3><table><thead><tr><th style="text-align:left"><strong>模式</strong></th><th style="text-align:left"><strong>描述</strong></th></tr></thead><tbody><tr><td style="text-align:left">冻结</td><td style="text-align:left">CNT=CCR时，REF保持为原状态</td></tr><tr><td style="text-align:left">匹配时置有效电平</td><td style="text-align:left">CNT=CCR时，REF置有效电平</td></tr><tr><td style="text-align:left">匹配时置无效电平</td><td style="text-align:left">CNT=CCR时，REF置无效电平</td></tr><tr><td style="text-align:left">匹配时电平翻转</td><td style="text-align:left">CNT=CCR时，REF电平翻转</td></tr><tr><td style="text-align:left">强制为无效电平</td><td style="text-align:left">CNT与CCR无效，REF强制为无效电平</td></tr><tr><td style="text-align:left">强制为有效电平</td><td style="text-align:left">CNT与CCR无效，REF强制为有效电平</td></tr><tr><td style="text-align:left">PWM模式1</td><td style="text-align:left">向上计数：CNT&lt;CCR时，REF置有效电平，CNT≥CCR时，REF置无效电平  向下计数：CNT&gt;CCR时，REF置无效电平，CNT≤CCR时，REF置有效电平</td></tr><tr><td style="text-align:left">PWM模式2</td><td style="text-align:left">向上计数：CNT&lt;CCR时，REF置无效电平，CNT≥CCR时，REF置有效电平  向下计数：CNT&gt;CCR时，REF置有效电平，CNT≤CCR时，REF置无效电平</td></tr></tbody></table><p><img src="../images/posts/23072702.png" alt="" /></p><p><img src="../images/posts/23072703.png" alt="" /></p><h2 id="配置输出比较"><a class="markdownIt-Anchor" href="#配置输出比较"></a> 配置输出比较</h2><p>第一步：配置RCC。开启GPIO和TIM的时钟。</p><p>第二步：配置时基单元。选择时钟源、配置时基单元。</p><p>第三步：配置输出比较单元。配置CCR捕获比较器、输出比较模式、极性选择、输出使能。</p><p>第四步：配置GPIO。初始化GPIO为复用推挽输出。</p><p>第五步：运行控制。</p><h3 id="常用函数-2"><a class="markdownIt-Anchor" href="#常用函数-2"></a> 常用函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出比较初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC1Init</span><span class="params">(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC2Init</span><span class="params">(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC3Init</span><span class="params">(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC4Init</span><span class="params">(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)</span>;</span><br><span class="line"><span class="comment">//赋给输出比较结构体默认值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OCStructInit</span><span class="params">(TIM_OCInitTypeDef* TIM_OCInitStruct)</span>;</span><br><span class="line">    <span class="comment">//配置强制输出模式</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_ForcedOC1Config</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ForcedAction)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_ForcedOC2Config</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ForcedAction)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_ForcedOC3Config</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ForcedAction)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_ForcedOC4Config</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ForcedAction)</span>;</span><br><span class="line">    <span class="comment">//配置CCR寄存器预装功能（影子寄存器）</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_OC1PreloadConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCPreload)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_OC2PreloadConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCPreload)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_OC3PreloadConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCPreload)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_OC4PreloadConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCPreload)</span>;</span><br><span class="line">    <span class="comment">//配置快速使能</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_OC1FastConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCFast)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_OC2FastConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCFast)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_OC3FastConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCFast)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_OC4FastConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCFast)</span>;</span><br><span class="line">    <span class="comment">//外部事件清除REF信号</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_ClearOC1Ref</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCClear)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_ClearOC2Ref</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCClear)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_ClearOC3Ref</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCClear)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">TIM_ClearOC4Ref</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCClear)</span>;</span><br><span class="line"><span class="comment">//单独设置输出比较的极性</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC1PolarityConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCPolarity)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC1NPolarityConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCNPolarity)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC2PolarityConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCPolarity)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC2NPolarityConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCNPolarity)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC3PolarityConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCPolarity)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC3NPolarityConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCNPolarity)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_OC4PolarityConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_OCPolarity)</span>;</span><br><span class="line"><span class="comment">//单独修改输出使能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_CCxCmd</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_Channel, <span class="type">uint16_t</span> TIM_CCx)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_CCxNCmd</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_Channel, <span class="type">uint16_t</span> TIM_CCxN)</span>;</span><br><span class="line"><span class="comment">//单独修改输出比较模式</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SelectOCxM</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_Channel, <span class="type">uint16_t</span> TIM_OCMode)</span>;</span><br><span class="line"><span class="comment">//单独修改CCR寄存器的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetCompare1</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> Compare1)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetCompare2</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> Compare2)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetCompare3</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> Compare3)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetCompare4</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> Compare4)</span>;</span><br><span class="line"><span class="comment">//仅高级定时器使用，在高级定时器输出PWM是必须调用这个函数是能输出，否则PWM将不能正常输出</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_CtrlPWMOutputs</span><span class="params">(TIM_TypeDef* TIMx, FunctionalState NewState)</span>;</span><br></pre></td></tr></table></figure><h3 id="示例程序-2"><a class="markdownIt-Anchor" href="#示例程序-2"></a> 示例程序</h3><h4 id="pwm呼吸灯"><a class="markdownIt-Anchor" href="#pwm呼吸灯"></a> PWM呼吸灯</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*************初始化PWM**************/</span></span><br><span class="line">    <span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimBaseInitStruct;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_Period = <span class="number">100</span><span class="number">-1</span>;<span class="comment">//ARR</span></span><br><span class="line">TIM_TimBaseInitStruct.TIM_Prescaler = <span class="number">720</span><span class="number">-1</span>;<span class="comment">//PSC</span></span><br><span class="line">TIM_TimBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimBaseInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStruct;</span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStruct);<span class="comment">//结构体赋初值，在没把结构体成员全赋值时要先赋初值</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//输出比较模式   PWM1</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//输出比较极性 不翻转</span></span><br><span class="line">TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//输出状态</span></span><br><span class="line">TIM_OCInitStruct.TIM_Pulse = <span class="number">0</span>;<span class="comment">//CCR</span></span><br><span class="line">TIM_OC1Init(TIM2,&amp;TIM_OCInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;<span class="comment">//GPIO_PA0默认复用功能为TIM2_CH1。如果要使用TIM2的OC1也就是CH1通道输出PWM就只能在PA0输出</span></span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*************初始化主程序**************/</span></span><br><span class="line">    OLED_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;CCR:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>;i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2,i);<span class="comment">//单独修改CCR寄存器的值</span></span><br><span class="line">Delay_ms (<span class="number">20</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,i,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">100</span>;i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2,i);</span><br><span class="line">Delay_ms (<span class="number">20</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,i,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h4 id="pwm舵机"><a class="markdownIt-Anchor" href="#pwm舵机"></a> PWM舵机</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">loat Angle;</span><br><span class="line"><span class="type">uint8_t</span> KeyNum;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*************初始化PWM**************/</span></span><br><span class="line">    <span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimBaseInitStruct;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_Period = <span class="number">20000</span><span class="number">-1</span>;<span class="comment">//ARR</span></span><br><span class="line">TIM_TimBaseInitStruct.TIM_Prescaler = <span class="number">72</span><span class="number">-1</span>;<span class="comment">//PSC</span></span><br><span class="line">TIM_TimBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimBaseInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStruct;</span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStruct);<span class="comment">//结构体赋初值，在没把结构体成员全赋值时要先赋初值</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//输出比较模式   PWM1</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//输出比较极性 不翻转</span></span><br><span class="line">TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//输出状态</span></span><br><span class="line">TIM_OCInitStruct.TIM_Pulse = <span class="number">0</span>;<span class="comment">//CCR</span></span><br><span class="line">TIM_OC1Init(TIM2,&amp;TIM_OCInitStruct);</span><br><span class="line"><span class="comment">//可初始化多个比较通道，同一个定时器初始化的多个通道的频率都和相位是一样的，占空比可以有各自的CCR决定。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;<span class="comment">//GPIO_PA0默认复用功能为TIM2_CH1。如果要使用TIM2的OC1也就是CH1通道输出PWM就只能在PA0输出</span></span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*************初始化主程序**************/</span></span><br><span class="line">KEY_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Angle:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">KeyNum = KEY_GetNum();</span><br><span class="line"><span class="keyword">if</span> (KeyNum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay_ms (<span class="number">20</span>);</span><br><span class="line">Angle += <span class="number">30</span>;;</span><br><span class="line"><span class="keyword">if</span> (Angle &gt; <span class="number">180</span>)</span><br><span class="line">&#123;</span><br><span class="line">Angle = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">TIM_SetCompare1(TIM2,Angle/<span class="number">180</span>*<span class="number">2000</span>+<span class="number">500</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">7</span>,Angle,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><h2 id="输入捕获"><a class="markdownIt-Anchor" href="#输入捕获"></a> 输入捕获</h2><p>输入捕获模式下，当通道输入引脚出现指定电平跳变时，当前CNT的值将被锁存到CCR中，可用于测量PWM波形的频率、占空比、脉冲间隔、电平持续时间等参数</p><p>每个高级定时器和通用定时器都拥有4个输入捕获通道</p><p>可配置为PWMI模式，同时测量频率和占空比</p><p>可配合主从触发模式，实现硬件全自动测量</p><h3 id="输入捕获模式"><a class="markdownIt-Anchor" href="#输入捕获模式"></a> 输入捕获模式</h3><p>通过配置边缘检测及性选择对，进行上升沿、下降沿、双边沿检测，信号来时会把CNT的值存储在CCR寄存器里。</p><p><img src="../images/posts/23072704.png" alt="" /></p><h3 id="pwmi模式"><a class="markdownIt-Anchor" href="#pwmi模式"></a> PWMI模式</h3><p>在上图原有的基础上，把上升沿的值存在CCR1寄存器里，把下降沿的值存在CCR2寄存器里，那么从上一个上升沿到下一个下降沿的时间就是高电平的时间，从上一个上升沿到下一个上升沿的时间就是一个周期的时间，它们的比就是占空比</p><p><img src="../images/posts/23072705.png" alt="" /></p><h2 id="配置输入捕获"><a class="markdownIt-Anchor" href="#配置输入捕获"></a> 配置输入捕获</h2><p>第一步：配置 RCC。开启GPIO和TIM的时钟。</p><p>第二步：配置GPIO。GPIO配置为输入上拉模式。</p><p>第三步：配置时基单元：选择时钟源、配置时基单元。</p><p>第四步：配置输入捕获单元。滤波器、极性、通道、分频器。</p><p>第五步：选择从模式的触发源：触发源选择TI1FP1。</p><p>第六步：选择从模式操作：执行Reset复位时基单元。</p><p>第七步：运行控制。</p><h3 id="常用函数-3"><a class="markdownIt-Anchor" href="#常用函数-3"></a> 常用函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入捕获初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ICInit</span><span class="params">(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)</span>;</span><br><span class="line"><span class="comment">//配置PWMI输入模式</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_PWMIConfig</span><span class="params">(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)</span>;</span><br><span class="line"><span class="comment">//赋给输入捕获结构体默认值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_ICStructInit</span><span class="params">(TIM_ICInitTypeDef* TIM_ICInitStruct)</span>;</span><br><span class="line"><span class="comment">//选择输入触发源TRGI（从模式）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SelectInputTrigger</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_InputTriggerSource)</span>;</span><br><span class="line"><span class="comment">//选择输出触发源TRGO（主模式）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SelectOutputTrigger</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_TRGOSource)</span>;</span><br><span class="line"><span class="comment">//选择从模式</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SelectSlaveMode</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_SlaveMode)</span>;</span><br><span class="line"><span class="comment">//单独配置通道1234的分频器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetIC1Prescaler</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ICPSC)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetIC2Prescaler</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ICPSC)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetIC3Prescaler</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ICPSC)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetIC4Prescaler</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_ICPSC)</span>;</span><br><span class="line"><span class="comment">//获取通道的输入捕获寄存器（CCR）</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">TIM_GetCapture1</span><span class="params">(TIM_TypeDef* TIMx)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">TIM_GetCapture2</span><span class="params">(TIM_TypeDef* TIMx)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">TIM_GetCapture3</span><span class="params">(TIM_TypeDef* TIMx)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">TIM_GetCapture4</span><span class="params">(TIM_TypeDef* TIMx)</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="示例程序-3"><a class="markdownIt-Anchor" href="#示例程序-3"></a> 示例程序</h3><h4 id="输入捕获测频率"><a class="markdownIt-Anchor" href="#输入捕获测频率"></a> 输入捕获测频率</h4><p>在PA0引脚产生PWM波形，连接到PA1输入波形</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************PWM产生**************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimBaseInitStruct;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimBaseInitStruct.TIM_Period = <span class="number">100</span><span class="number">-1</span>;<span class="comment">//ARR</span></span><br><span class="line">TIM_TimBaseInitStruct.TIM_Prescaler = <span class="number">720</span><span class="number">-1</span>;<span class="comment">//PSC</span></span><br><span class="line">TIM_TimBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimBaseInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStruct;</span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStruct);<span class="comment">//结构体赋初值，在没把结构体成员全赋值时要先赋初值</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//输出比较模式   PWM1</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//输出比较极性 不翻转</span></span><br><span class="line">TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//输出状态</span></span><br><span class="line">TIM_OCInitStruct.TIM_Pulse = <span class="number">0</span>;<span class="comment">//CCR</span></span><br><span class="line">TIM_OC1Init(TIM2,&amp;TIM_OCInitStruct);</span><br><span class="line"><span class="comment">//可初始化多个比较通道，同一个定时器初始化的多个通道的频率都和相位是一样的，占空比可以有各自的CCR决定。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;<span class="comment">//GPIO_PA0默认复用功能为TIM2_CH1。如果要使用TIM2的OC1也就是CH1通道输出PWM就只能在PA0输出</span></span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*************初始化PWM**************/</span></span><br><span class="line">    PWM_Init();</span><br><span class="line">    <span class="comment">/*************初始化IC输入捕获**************/</span></span><br><span class="line">    <span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_6;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Period = <span class="number">65536</span><span class="number">-1</span>;<span class="comment">//ARR</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Prescaler = <span class="number">72</span><span class="number">-1</span>;<span class="comment">//PSC</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置输入捕获单元</span></span><br><span class="line">TIM_ICInitTypeDef TIM_ICInitStruct;</span><br><span class="line">TIM_ICInitStruct.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStruct.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择滤波器</span></span><br><span class="line">TIM_ICInitStruct.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//极性选择、边沿检测</span></span><br><span class="line">TIM_ICInitStruct.TIM_ICPrescaler = TIM_ICPSC_DIV1;<span class="comment">//触发型号分频器</span></span><br><span class="line">TIM_ICInitStruct.TIM_ICSelection = TIM_ICSelection_DirectTI;<span class="comment">//触发信号引脚通道</span></span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择从模式的触发源</span></span><br><span class="line">TIM_SelectInputTrigger(TIM3,TIM_TS_TI1FP1);<span class="comment">//触发源选择TI1FP1。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//选择从模式</span></span><br><span class="line">TIM_SelectSlaveMode(TIM3,TIM_SlaveMode_Reset);<span class="comment">//配置从模式为Reset</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*************初始化主程序**************/</span></span><br><span class="line">   OLED_Init();</span><br><span class="line"></span><br><span class="line">TIM_PrescalerConfig(TIM2,<span class="number">720</span> - <span class="number">1</span>,TIM_PSCReloadMode_Update);<span class="comment">//修改PSC的值在更新时生效</span></span><br><span class="line">TIM_SetCompare1(TIM2,<span class="number">50</span>);<span class="comment">//CCR</span></span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Freq:00000Hz&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">6</span>, <span class="number">1000000</span> / (TIM_GetCapture1 (TIM3) + <span class="number">1</span>) ,<span class="number">5</span>);<span class="comment">//读取CCR寄存器并计算</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="pwmi模式测频率空占比"><a class="markdownIt-Anchor" href="#pwmi模式测频率空占比"></a> PWMI模式测频率空占比</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line">    <span class="comment">/*************初始化IC输入捕获**************/</span></span><br><span class="line">    <span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_6;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Period = <span class="number">65536</span><span class="number">-1</span>;<span class="comment">//ARR</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Prescaler = <span class="number">72</span><span class="number">-1</span>;<span class="comment">//PSC</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置输入捕获单元</span></span><br><span class="line">TIM_ICInitTypeDef TIM_ICInitStruct;</span><br><span class="line">TIM_ICInitStruct.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStruct.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择滤波器</span></span><br><span class="line">TIM_ICInitStruct.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//极性选择、边沿检测</span></span><br><span class="line">TIM_ICInitStruct.TIM_ICPrescaler = TIM_ICPSC_DIV1;<span class="comment">//触发型号分频器</span></span><br><span class="line">TIM_ICInitStruct.TIM_ICSelection = TIM_ICSelection_DirectTI;<span class="comment">//触发信号引脚通道</span></span><br><span class="line">TIM_PWMIConfig(TIM3,&amp;TIM_ICInitStruct);<span class="comment">//配置PWMI模式及支持前两个通道会自动把另一个通道初始化成相反的配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//选择从模式的触发源</span></span><br><span class="line">TIM_SelectInputTrigger(TIM3,TIM_TS_TI1FP1);<span class="comment">//触发源选择TI1FP1。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//选择从模式</span></span><br><span class="line">TIM_SelectSlaveMode(TIM3,TIM_SlaveMode_Reset);<span class="comment">//配置从模式为Reset</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*************初始化主程序**************/</span></span><br><span class="line">TIM_PrescalerConfig(TIM2,<span class="number">720</span> - <span class="number">1</span>,TIM_PSCReloadMode_Update);<span class="comment">//修改PSC的值在更新时生效</span></span><br><span class="line">TIM_SetCompare1(TIM2,<span class="number">30</span>);<span class="comment">//CCR</span></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Freq:00000Hz&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;Duty:000%&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">6</span>, <span class="number">1000000</span> / (TIM_GetCapture1 (TIM3) + <span class="number">1</span>) ,<span class="number">5</span>);<span class="comment">//频率：</span></span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">6</span>, (TIM_GetCapture2(TIM3) + <span class="number">1</span>) * <span class="number">100</span> / (TIM_GetCapture1(TIM3) + <span class="number">1</span>) ,<span class="number">3</span>);<span class="comment">//占空比：高电平时间/周期时间 = CCR2 / CCR1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编码器接口"><a class="markdownIt-Anchor" href="#编码器接口"></a> 编码器接口</h2><p>编码器接口可接收增量（正交）编码器的信号，根据编码器旋转产生的正交信号脉冲，由编码器接口自动控制CNT自增或自减，从而指示编码器的位置、旋转方向和旋转速度。</p><p>每个高级定时器和通用定时器都拥有1个编码器接口。</p><p>两个输入引脚借用了输入捕获的通道1（CH1）和通道2（CH2）。</p><h4 id="正交编码器"><a class="markdownIt-Anchor" href="#正交编码器"></a> 正交编码器</h4><p>通过相位差来判别编码器的正反转。正转时A相超前B相90度，反之反转时A相滞后B相90度。通过判别A相的边沿和B相的电平就可以得出编码器的正反转。<img src="../images/posts/23072706.png" alt="" /></p><h4 id="编码器接口-2"><a class="markdownIt-Anchor" href="#编码器接口-2"></a> 编码器接口</h4><p>GPIO输入信号经过滤波器滤波，极性选择输入到编码器接口，通过PSC到达CNT进行自动计数。</p><h4 id=""><a class="markdownIt-Anchor" href="#"></a> <img src="../images/posts/23072707.png" alt="" /></h4><h4 id="编码器模式"><a class="markdownIt-Anchor" href="#编码器模式"></a> 编码器模式</h4><p>编码器正转向上计数，防止向下计数。</p><p><img src="../images/posts/23072708.png" alt="" /></p><h2 id="配置编码器接口"><a class="markdownIt-Anchor" href="#配置编码器接口"></a> 配置编码器接口</h2><p>第一步：配置RCC。开启GPIO和TIM的时钟。</p><p>第二步：配置GPIO。配置GPIO为上拉输入模式。</p><p>第三步：配置时基单元。一般配置PSC不分频，ARR为65535。</p><p>第四步：配置输入捕获单元。配置滤波器和选择极性。</p><p>第五步：配置编码器接口模式。</p><p>第六步：控制运行。</p><p>如果要测量编码器的位置，直接读取CNT的值。</p><p>如果要测量编码器的速度，就要每隔固定的一段闸门时间读取一次CNT并把CNT清零。</p><h3 id="常用函数-4"><a class="markdownIt-Anchor" href="#常用函数-4"></a> 常用函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编码器接口配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_EncoderInterfaceConfig</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> TIM_EncoderMode,<span class="type">uint16_t</span> TIM_IC1Polarity, <span class="type">uint16_t</span> TIM_IC2Polarity)</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h3><h4 id="编码器计数"><a class="markdownIt-Anchor" href="#编码器计数"></a> 编码器计数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    OLED_Init();</span><br><span class="line">    <span class="comment">/*************初始化编码器接口**************/</span></span><br><span class="line">    <span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init (GPIOA ,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Period = <span class="number">65536</span><span class="number">-1</span>;<span class="comment">//ARR</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Prescaler = <span class="number">1</span><span class="number">-1</span>;<span class="comment">//PSC</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置输入捕获单元</span></span><br><span class="line">TIM_ICInitTypeDef TIM_ICIntStruct;</span><br><span class="line">TIM_ICStructInit(&amp;TIM_ICIntStruct);</span><br><span class="line">TIM_ICIntStruct.TIM_Channel = TIM_Channel_1;</span><br><span class="line">TIM_ICIntStruct.TIM_ICFilter = <span class="number">0xF</span>;</span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICIntStruct);</span><br><span class="line"></span><br><span class="line">TIM_ICStructInit(&amp;TIM_ICIntStruct);</span><br><span class="line">TIM_ICIntStruct.TIM_Channel = TIM_Channel_2;</span><br><span class="line">TIM_ICIntStruct.TIM_ICFilter = <span class="number">0xF</span>;</span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICIntStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置编码器接口</span></span><br><span class="line">TIM_EncoderInterfaceConfig(TIM3,TIM_EncoderMode_TI12,TIM_ICPolarity_Rising,TIM_ICPolarity_Rising);<span class="comment">//配置 编码器模式，极性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*************初始化主程序**************/</span></span><br><span class="line">    OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;CNT: &quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;NUM: &quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">         OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,TIM_GetCounter (TIM3),<span class="number">6</span>);<span class="comment">//获取CNT的值</span></span><br><span class="line">OLED_ShowSignedNum(<span class="number">2</span>,<span class="number">5</span>,(<span class="type">int16_t</span>)TIM_GetCounter (TIM3),<span class="number">5</span>);<span class="comment">//获取CNT的值强制转换有符号数</span></span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="编码器测速"><a class="markdownIt-Anchor" href="#编码器测速"></a> 编码器测速</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int16_t</span> Speed;</span><br><span class="line">    OLED_Init();</span><br><span class="line">    Timer_Init();</span><br><span class="line">    <span class="comment">/*************初始化编码器接口**************/</span></span><br><span class="line">    <span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init (GPIOA ,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Period = <span class="number">65536</span><span class="number">-1</span>;<span class="comment">//ARR</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Prescaler = <span class="number">1</span><span class="number">-1</span>;<span class="comment">//PSC</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置输入捕获单元</span></span><br><span class="line">TIM_ICInitTypeDef TIM_ICIntStruct;</span><br><span class="line">TIM_ICStructInit(&amp;TIM_ICIntStruct);</span><br><span class="line">TIM_ICIntStruct.TIM_Channel = TIM_Channel_1;</span><br><span class="line">TIM_ICIntStruct.TIM_ICFilter = <span class="number">0xF</span>;</span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICIntStruct);</span><br><span class="line"></span><br><span class="line">TIM_ICIntStruct.TIM_Channel = TIM_Channel_2;</span><br><span class="line">TIM_ICIntStruct.TIM_ICFilter = <span class="number">0xF</span>;</span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICIntStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置编码器接口</span></span><br><span class="line">TIM_EncoderInterfaceConfig(TIM3,TIM_EncoderMode_TI12,TIM_ICPolarity_Rising,TIM_ICPolarity_Rising);<span class="comment">//配置 编码器模式，极性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//运行控制</span></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*************初始化主程序**************/</span></span><br><span class="line">    OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Speed: &quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowSignedNum(<span class="number">1</span>,<span class="number">7</span>,speed,<span class="number">5</span>);<span class="comment">//显示速度n/s</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中断处理函数****每隔1s进入一次中断获取一次速度****</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)<span class="comment">//检查中断标志位</span></span><br><span class="line">&#123;</span><br><span class="line">Speed = TIM_GetCounter (TIM3);<span class="comment">//将CNT的值传给Speed</span></span><br><span class="line">TIM_SetCounter(TIM3,<span class="number">0</span>);     <span class="comment">//将CNT清零</span></span><br><span class="line"></span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);<span class="comment">//清除中断标志位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="引脚重映射"><a class="markdownIt-Anchor" href="#引脚重映射"></a> 引脚重映射</h1><h2 id="引脚定义表"><a class="markdownIt-Anchor" href="#引脚定义表"></a> 引脚定义表</h2><p><img src="../images/posts/23072709.png" alt="" /></p><h2 id="重映射引脚"><a class="markdownIt-Anchor" href="#重映射引脚"></a> 重映射引脚</h2><p>第一步：配置GPIO。开启被映射引脚和AFIO的时钟。</p><p>第二步：配置重映射引脚。解除DeBug引脚，或重映射引脚。</p><p>调试引脚：</p><ul><li>JTRST：PB4</li><li>JTAG：PA5、PB3、PB4</li><li>SWD：PA13、PA14、PA5、PB3、PB4</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line"><span class="comment">//AFIO引脚重映射</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_PinRemapConfig</span><span class="params">(<span class="type">uint32_t</span> GPIO_Remap, FunctionalState NewState)</span>;<span class="comment">//映射方式</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_PinRemapConfig</span><span class="params">(SWJ_JTAGDisable, ENABLE)</span>;<span class="comment">//解除调试引脚</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32F103C8T6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】STM32-EXTI外部中断</title>
      <link href="/posts/53711.html"/>
      <url>/posts/53711.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="exti-外部中断"><a class="markdownIt-Anchor" href="#exti-外部中断"></a> EXTI 外部中断</h1><h2 id="中断系统"><a class="markdownIt-Anchor" href="#中断系统"></a> 中断系统</h2><p>中断：在主程序运行的过程中，出现特定的触发条件，使CPU暂停当前运行的程序去处理中断程序，处理完成后继续原来的工作。</p><p>中断优先级：当有多个中断源同时申请中断时，CPU会根据中断源的轻重缓急进行裁决，优先响应更加紧急的中断源。</p><p>中断嵌套：当一个中断程序正在运行时，又有新的更高优先级的中断源申请中断，CPU再次暂停当前中断程序，转而去处理新的中断程序，处理完成后依次进行返回。</p><p>注意事项：</p><p>1.在中断函数里，尽量不要执行耗时过长的代码。</p><p>2.尽量不要在中断函数和主函数调用相同的函数，或操作同一个硬件。可以在中断里操作变量或标志位作为接口来返回参数。</p><h3 id="nvic中断控制器"><a class="markdownIt-Anchor" href="#nvic中断控制器"></a> NVIC中断控制器</h3><p>NVIC的中断优先级由优先级寄存器的4位（0~15）决定，这4位可以进行切分，分为高n位的抢占优先级和低4-n位的响应优先级。</p><p>抢占优先级高的可以中断嵌套，响应优先级高的可以优先排队，抢占优先级和响应优先级均相同的按中断号排队。</p><table><thead><tr><th><strong>分组方式</strong></th><th><strong>抢占优先级</strong></th><th><strong>响应优先级</strong></th></tr></thead><tbody><tr><td>分组0</td><td>0位，取值为0</td><td>4位，取值为0~15</td></tr><tr><td>分组1</td><td>1位，取值为0~1</td><td>3位，取值为0~7</td></tr><tr><td>分组2</td><td>2位，取值为0~3</td><td>2位，取值为0~3</td></tr><tr><td>分组3</td><td>3位，取值为0~7</td><td>1位，取值为0~1</td></tr><tr><td>分组4</td><td>4位，取值为0~15</td><td>0位，取值为0</td></tr></tbody></table><h3 id="exti-外部中断-2"><a class="markdownIt-Anchor" href="#exti-外部中断-2"></a> EXTI 外部中断</h3><p>EXTI外部中断可以监测指定IO的电平信号向NVRC发出申请中断，支持上升沿、下降沿、双边沿、软件触发，支持所有GPIO但是相同的Pin不能同时触发。</p><p>通道数：16个GPIO_Pin，外加PVD输出、RTC闹钟、USB唤醒、以太网唤醒</p><p>触发响应方式：中断响应（正常执行中断程序），事件响应（中断触发别的外设事件）</p><h3 id="afio复用io口"><a class="markdownIt-Anchor" href="#afio复用io口"></a> AFIO复用IO口</h3><p>AFIO主要用于引脚复用功能的选择和重定义。</p><p>在STM32中，AFIO主要完成两个任务：复用功能引脚重映射、中断引脚选择。</p><h3 id="exti结构图"><a class="markdownIt-Anchor" href="#exti结构图"></a> EXTI结构图</h3><p><img src="../images/posts/23072301.png" alt="image-20230722195521298" /></p><h2 id="配置exti外部中断"><a class="markdownIt-Anchor" href="#配置exti外部中断"></a> 配置EXTI外部中断</h2><p>第一步：配置RCC。使能GPIO、AFIO的时钟。</p><p>第二步：配置GPIO。浮空/上拉/下拉输出。</p><p>第三步：配置AFIO。指定AFIO的中断原和中断线。</p><p>第四步：配置EXTI。指定EXTI的中断线、响应方式、触发方式。</p><p>第五步：配置NVIC。中断分组，指定中断通道、抢占优先级、响应优先级。</p><p>第六步：配置中断函数。一般先进行中断标志位判断，在写中断程序，最后清除中断标志位。</p><h3 id="常用函数"><a class="markdownIt-Anchor" href="#常用函数"></a> 常用函数</h3><h4 id="afio"><a class="markdownIt-Anchor" href="#afio"></a> AFIO</h4><p>AFIO和GPIO的库函数在同一个文件内。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复位AFIO外设</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_AFIODeInit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="comment">//锁定GPIO配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_PinLockConfig</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pin)</span>;</span><br><span class="line"><span class="comment">//配置AFIO事件输出功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_EventOutputConfig</span><span class="params">(<span class="type">uint8_t</span> GPIO_PortSource, <span class="type">uint8_t</span> GPIO_PinSource)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_EventOutputCmd</span><span class="params">(FunctionalState NewState)</span>;</span><br><span class="line"><span class="comment">//配置AFIO引脚重映射</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_PinRemapConfig</span><span class="params">(<span class="type">uint32_t</span> GPIO_Remap, FunctionalState NewState)</span>;</span><br><span class="line"><span class="comment">//配置AFIO中断引脚选择</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_EXTILineConfig</span><span class="params">(<span class="type">uint8_t</span> GPIO_PortSource, <span class="type">uint8_t</span> GPIO_PinSource)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_ETH_MediaInterfaceConfig</span><span class="params">(<span class="type">uint32_t</span> GPIO_ETH_MediaInterface)</span>;</span><br></pre></td></tr></table></figure><h4 id="exti"><a class="markdownIt-Anchor" href="#exti"></a> EXTI</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复位EXTI外设</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI_DeInit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="comment">//初始化EXTI</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI_Init</span><span class="params">(EXTI_InitTypeDef* EXTI_InitStruct)</span>;</span><br><span class="line"><span class="comment">//付给结构体默认值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI_StructInit</span><span class="params">(EXTI_InitTypeDef* EXTI_InitStruct)</span>;</span><br><span class="line"><span class="comment">//软件触发外部中断</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI_GenerateSWInterrupt</span><span class="params">(<span class="type">uint32_t</span> EXTI_Line)</span>;</span><br><span class="line"><span class="comment">//获取标志位状态</span></span><br><span class="line">FlagStatus <span class="title function_">EXTI_GetFlagStatus</span><span class="params">(<span class="type">uint32_t</span> EXTI_Line)</span>;</span><br><span class="line"><span class="comment">//清除标志位</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI_ClearFlag</span><span class="params">(<span class="type">uint32_t</span> EXTI_Line)</span>;</span><br><span class="line"><span class="comment">//获取中断标志位状态</span></span><br><span class="line">ITStatus <span class="title function_">EXTI_GetITStatus</span><span class="params">(<span class="type">uint32_t</span> EXTI_Line)</span>;</span><br><span class="line"><span class="comment">//清除中断标志位</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI_ClearITPendingBit</span><span class="params">(<span class="type">uint32_t</span> EXTI_Line)</span>;</span><br></pre></td></tr></table></figure><h4 id="nvic"><a class="markdownIt-Anchor" href="#nvic"></a> NVIC</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//中断分组方式</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">NVIC_PriorityGroupConfig</span><span class="params">(<span class="type">uint32_t</span> NVIC_PriorityGroup)</span>;</span><br><span class="line"><span class="comment">//初始化NVIC</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">NVIC_Init</span><span class="params">(NVIC_InitTypeDef* NVIC_InitStruct)</span>;</span><br><span class="line"><span class="comment">//设置中断向量表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">NVIC_SetVectorTable</span><span class="params">(<span class="type">uint32_t</span> NVIC_VectTab, <span class="type">uint32_t</span> Offset)</span>;</span><br><span class="line"><span class="comment">//系统低功耗配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">NVIC_SystemLPConfig</span><span class="params">(<span class="type">uint8_t</span> LowPowerMode, FunctionalState NewState)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_CLKSourceConfig</span><span class="params">(<span class="type">uint32_t</span> SysTick_CLKSource)</span>;</span><br></pre></td></tr></table></figure><h4 id="中断函数"><a class="markdownIt-Anchor" href="#中断函数"></a> 中断函数</h4><p>在STM32中中断函数的名字都是固定的，每个中断通道都对应一个中断函数，中断函数见启动文件。<code>IRQHandler</code>类。</p><p>一般先进行中断标志位判断，在写中断程序，最后清除中断标志位。如果不清除中断标志位就会一至申请中断，影响主程序运行。</p><p>中断函数无参无返回值,不需要进行声明。</p><h3 id="示例程序"><a class="markdownIt-Anchor" href="#示例程序"></a> 示例程序</h3><h4 id="按键计次"><a class="markdownIt-Anchor" href="#按键计次"></a> 按键计次</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint16_t</span> CountSensor_count;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/**************初始化中断**************/</span></span><br><span class="line">    <span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_14;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置AFIO</span></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOB,GPIO_PinSource14);<span class="comment">//指定中断源为外部GPIOB、中断线为14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置EXTI</span></span><br><span class="line">EXTI_InitTypeDef EXTI_InitStruct;</span><br><span class="line">EXTI_InitStruct.EXTI_Line = EXTI_Line14;<span class="comment">//指定中断线</span></span><br><span class="line">EXTI_InitStruct.EXTI_LineCmd = ENABLE;<span class="comment">//使能中断线</span></span><br><span class="line">EXTI_InitStruct.EXTI_Mode = EXTI_Mode_Interrupt;<span class="comment">//响应方式：中断响应、事件响应</span></span><br><span class="line">EXTI_InitStruct.EXTI_Trigger = EXTI_Trigger_Falling;<span class="comment">//触发边沿：上升沿、下降沿、双边沿</span></span><br><span class="line">EXTI_Init(&amp;EXTI_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NIVC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//中断分组方式：两位抢占两位响应一个工程只能使用一次</span></span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStruct;</span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannel = EXTI15_10_IRQn;<span class="comment">//指定中断通道</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//使能中断通道</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;<span class="comment">//指定抢占优先级</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelSubPriority = <span class="number">1</span>;<span class="comment">//指定响应优先级</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStruct);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**************初始化程序**************/</span></span><br><span class="line">    OLED_Init();</span><br><span class="line">    OLED_Clear();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Count:&quot;</span>);</span><br><span class="line">    <span class="comment">/**************循环程序**************/</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">         OLED_ShowNum(<span class="number">1</span>,<span class="number">7</span>,CountSensor_count(),<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**************中断程序**************/</span></span><br><span class="line"><span class="comment">//在STM32中中断函数的名字都是固定的，每个中断通道都对应一个中断函数，中断函数见启动文件</span></span><br><span class="line"><span class="comment">//一般先进行中断标志位判断，在写中断程序，最后清除中断标志位。如果不清除中断标志位就会一至申请中断，影响主程序运行。</span></span><br><span class="line"><span class="comment">//中断函数无参无返回值,不需要进行声明。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI15_10_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line14) == SET)<span class="comment">//判断中断标志位</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*如果出现数据乱跳的现象，可再次判断引脚电平，以避免抖动*/</span></span><br><span class="line">        Delay_ms (<span class="number">20</span>);</span><br><span class="line"><span class="keyword">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_14) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">CountSensor_count ++;</span><br><span class="line">&#125;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line14);<span class="comment">//清除中断标志位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="正交编码器计次"><a class="markdownIt-Anchor" href="#正交编码器计次"></a> 正交编码器计次</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint16_t</span> CountSensor_count;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/**************初始化中断**************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置RCC</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置AFIO</span></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOB,GPIO_PinSource0);<span class="comment">//指定中断源为外部GPIOB、中断线为14</span></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOB,GPIO_PinSource1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置EXTI</span></span><br><span class="line">EXTI_InitTypeDef EXTI_InitStruct;</span><br><span class="line">EXTI_InitStruct.EXTI_Line = EXTI_Line0 | EXTI_Line1;<span class="comment">//指定中断线</span></span><br><span class="line">EXTI_InitStruct.EXTI_LineCmd = ENABLE;<span class="comment">//使能中断线</span></span><br><span class="line">EXTI_InitStruct.EXTI_Mode = EXTI_Mode_Interrupt;<span class="comment">//响应方式：中断响应、事件响应</span></span><br><span class="line">EXTI_InitStruct.EXTI_Trigger = EXTI_Trigger_Falling;<span class="comment">//触发边沿：上升沿、下降沿、双边沿</span></span><br><span class="line">EXTI_Init(&amp;EXTI_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NIVC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//中断分组方式：两位抢占两位响应一个工程只能使用一次</span></span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStruct;</span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannel = EXTI0_IRQn;<span class="comment">//指定中断通道</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//使能中断通道</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;<span class="comment">//指定抢占优先级</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelSubPriority = <span class="number">1</span>;<span class="comment">//指定响应优先级</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStruct);</span><br><span class="line"></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannel = EXTI1_IRQn;<span class="comment">//指定中断通道</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//使能中断通道</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;<span class="comment">//指定抢占优先级</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelSubPriority = <span class="number">2</span>;<span class="comment">//指定响应优先级</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStruct);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**************初始化程序**************/</span></span><br><span class="line">    OLED_Init();</span><br><span class="line">    OLED_Clear();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Count:&quot;</span>);</span><br><span class="line">    <span class="comment">/**************循环程序**************/</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int16_t</span> Num = <span class="number">0</span>;</span><br><span class="line">        OLED_ShowNum(<span class="number">1</span>,<span class="number">7</span>,Num + CountSensor_Get(),<span class="number">5</span>);</span><br><span class="line">    Delay_ms (<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int16_t</span> <span class="title function_">CountSensor_Get</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int16_t</span> Temp;</span><br><span class="line">Temp = CountSensor_count;</span><br><span class="line"><span class="keyword">return</span> Temp ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在STM32中中断函数的名字都是固定的，每个中断通道都对应一个中断函数，中断函数见启动文件</span></span><br><span class="line"><span class="comment">//一般先进行中断标志位判断，在写中断程序，最后清除中断标志位。如果不清除中断标志位就会一至申请中断，影响主程序运行。</span></span><br><span class="line"><span class="comment">//中断函数无参无返回值,不需要进行声明。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line0) == SET)<span class="comment">//判断中断标志位</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadInputDataBit(GPIOB ,GPIO_Pin_1) == <span class="number">0</span>)<span class="comment">//当PB0下降时进入中断通道0，读取PB1的电平，如果是低电平那木就--</span></span><br><span class="line">&#123;</span><br><span class="line">CountSensor_count --;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line0);<span class="comment">//清除中断标志位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line0) == SET)<span class="comment">//判断中断标志位</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadInputDataBit(GPIOB ,GPIO_Pin_0) == <span class="number">0</span>)<span class="comment">//当PB1下降时进入中断通道1，读取PB0的电平，如果是低电平那木就++</span></span><br><span class="line">&#123;</span><br><span class="line">CountSensor_count ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line1);<span class="comment">//清除中断标志位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32F103C8T6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】基于STM32的CV键盘</title>
      <link href="/posts/58398.html"/>
      <url>/posts/58398.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>使用STM32F103C8T6MCU做键盘主控。</p><p>软件环境：Keil5 MDK，STM32CubeMX</p><p>基本硬件：STM32最小系统板，SWDLink/STLink，USB连接线</p><h2 id="小知识"><a class="markdownIt-Anchor" href="#小知识"></a> 小知识</h2><h3 id="什么是usb-hid"><a class="markdownIt-Anchor" href="#什么是usb-hid"></a> 什么是USB-HID</h3><p>USB-HID（Universal Serial Bus-Human Interface Device）中文名为 通用串行总线人机交互设备，比如USB键盘，USB鼠标等等。USB-HID设备将要发送接收的数据封装成标准的USB_HID报告，并发送给计算机，计算机可以解析这些报告并作出相应的响应。简单的说就是这些设备无需驱动就可以和计算机交互。更多介绍可查看<a href="https://usbzh.com/article/detail-76.html">HID 简介 - USB中文网 (usbzh.com)</a>。</p><h3 id="什么是hid描述符"><a class="markdownIt-Anchor" href="#什么是hid描述符"></a> 什么是HID描述符</h3><p>HID描述符是USB-HID设备中定义设备的特性和功能的数据结构，用于告诉计算机有关设设备的信息，比如设备类型，功能等等。当设备插入计算机时通过读取HID描述符来了解设备的功能等。等多介绍可查看<a href="https://usbzh.com/article/detail-21.html">HID设备的描述符 - USB中文网 (usbzh.com)</a></p><h1 id="教程"><a class="markdownIt-Anchor" href="#教程"></a> 教程</h1><h2 id="配置usb-hid"><a class="markdownIt-Anchor" href="#配置usb-hid"></a> 配置USB-HID</h2><p>当然，我也不可能手搓HID驱动，我也不会，哈哈。这里就要用到STM32CubeMX把STM32配置成HID设备。</p><p>打开CudeMX新建工程，选择STM32F103C8T6，开始新建工程。</p><p><img src="../images/posts/23072001.png" alt="23072001" /></p><p>根据自己的下载器选择，SWD就选Serial Wire，不选择的话下次下载时就不能用WSD下载，除非用串口下载一个开启WSD下载的程序。</p><p><img src="../images/posts/23072002.png" alt="23072002" /></p><p>在RCC这里选择使用外部晶振。</p><p><img src="../images/posts/23072003.png" alt="23072003" /></p><p>启用USB设备。</p><p><img src="../images/posts/23072004.png" alt="23072004" /></p><p>在这里选择HID设备，可以更改设备厂商和型号满足自定义的需求。</p><p><img src="../images/posts/23072006.png" alt="23072005" /></p><p>按提示配置GPIO引脚为上拉输入模式，也可以暂时不配置，事后在keil里配置。确保图中框着的几个引脚已配置好。</p><p><img src="../images/posts/23072006.png" alt="23072006" /></p><p>时钟配置页选择自动配置时钟。</p><p><img src="../images/posts/23072007.png" alt="23072007" /></p><p>进入工程管理，配置好工程名字，工程路径，开发环境选择MDK-ARM，把最小堆大小设置0x600。</p><p><img src="../images/posts/23072008.png" alt="23072008" /></p><p>勾选生成单独的.C/.H文件，生成工程。</p><p><img src="../images/posts/23072009.png" alt="23072009" /></p><h2 id="keil配置工程"><a class="markdownIt-Anchor" href="#keil配置工程"></a> Keil配置工程</h2><p>找到刚生成的工程，先添加启动文件，操作如下。</p><p><img src="../images/posts/23072010.png" alt="23072010" /></p><h2 id="描述文件配置"><a class="markdownIt-Anchor" href="#描述文件配置"></a> 描述文件配置</h2><h3 id="usb描述文件"><a class="markdownIt-Anchor" href="#usb描述文件"></a> USB描述文件</h3><p>在<code>usbd-desc.c</code>文件里面就是有关USB设备的描述文件，比如前面配置的设备品牌，型号等。</p><p><img src="../images/posts/23072011.png" alt="23072011" /></p><h3 id="hid描述文件"><a class="markdownIt-Anchor" href="#hid描述文件"></a> HID描述文件</h3><p>在<code>usbd-hid.c</code>文件里配置HID描述文件，找到<code>/* USB HID device FS Configuration Descriptor */</code>根据需求修改。</p><p>USB最大功率：<code>0x32</code> 表示为该口提供的最大输出电流。（0x32换算十进制即50，再×2 即100）即这里提供最大100ma输出电流。USB2.0最大提供输出500ma电流，即最大设置为 <code>0xFA</code>。</p><p>设备类型：<code>0x02</code> 表示该设备为鼠标，<code>0x01</code> 表示该设备为键盘，即修改为 `0x01 。</p><p><img src="../images/posts/23072012.png" alt="23072012" /></p><h3 id="键盘报告描述符"><a class="markdownIt-Anchor" href="#键盘报告描述符"></a> 键盘报告描述符</h3><p>继续在<code>usbd_hid.c</code>文件修改<code>HID_MOUSE_ReportDesc[HID_MOUSE_REPORT_DESC_SIZE]</code>这个数组内容为以下内容。</p><p>这里使用的是USB中文网的报告描述符。</p><p>相关资料请查看<a href="https://www.usbzh.com/article/detail-877.html">HID报表描述符原理解释 - USB中文网 (usbzh.com)</a> <a href="https://usbzh.com/article/detail-326.html">USB键盘报告描述符数据格式分析 - USB中文网 (usbzh.com)</a>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x05</span>,<span class="number">0x01</span>,<span class="comment">// Global Generic Desktop</span></span><br><span class="line"><span class="number">0x09</span>,<span class="number">0x06</span>,<span class="comment">// Local KeyBoard </span></span><br><span class="line"><span class="number">0xA1</span>,<span class="number">0x01</span>,<span class="comment">// Main app collection</span></span><br><span class="line"><span class="number">0x05</span>,<span class="number">0x07</span>,<span class="comment">// Global KeyBoard</span></span><br><span class="line"><span class="comment">//第1字节</span></span><br><span class="line"><span class="number">0x19</span>,<span class="number">0xe0</span>,<span class="comment">// Local Usage Min (KeyBoard LeftControl)</span></span><br><span class="line"><span class="number">0x29</span>,<span class="number">0xe7</span>,<span class="comment">// Local Usage Max (KeyBoard Right GUI)</span></span><br><span class="line"><span class="number">0x15</span>,<span class="number">0x00</span>,<span class="comment">// Global Logical Min</span></span><br><span class="line"><span class="number">0x25</span>,<span class="number">0x01</span>,<span class="comment">// Global Logical Max </span></span><br><span class="line"><span class="number">0x95</span>,<span class="number">0x08</span>,<span class="comment">// Global ReportCount</span></span><br><span class="line"><span class="number">0x75</span>,<span class="number">0x01</span>,<span class="comment">// Global ReportSize</span></span><br><span class="line"><span class="number">0x81</span>,<span class="number">0x02</span>,<span class="comment">// Main Input(Data,Var,Abs)</span></span><br><span class="line"><span class="comment">//第2字节</span></span><br><span class="line"><span class="number">0x95</span>,<span class="number">0x01</span>,<span class="comment">// Global ReportCount</span></span><br><span class="line"><span class="number">0x75</span>,<span class="number">0x08</span>,<span class="comment">// Global ReportSize</span></span><br><span class="line"><span class="number">0x81</span>,<span class="number">0x03</span>,<span class="comment">// Main Input(Cnst,Var,Abs)</span></span><br><span class="line"><span class="comment">//第3-8字节</span></span><br><span class="line"><span class="number">0x95</span>,<span class="number">0x06</span>,<span class="comment">// Global ReportCount</span></span><br><span class="line"><span class="number">0x75</span>,<span class="number">0x08</span>,<span class="comment">// Global ReportSize</span></span><br><span class="line"><span class="number">0x15</span>,<span class="number">0x00</span>,<span class="comment">// Global Logical Min</span></span><br><span class="line"><span class="number">0x26</span>,<span class="number">0xff</span>,<span class="number">0x00</span>,<span class="comment">//Global Logical Max</span></span><br><span class="line"><span class="number">0x19</span>,<span class="number">0x00</span>,<span class="comment">// Local Usage Min</span></span><br><span class="line"><span class="number">0x29</span>,<span class="number">0x65</span>,<span class="comment">// Local Usage Max</span></span><br><span class="line"><span class="number">0x81</span>,<span class="number">0x00</span>,<span class="comment">// Main Output(Data,Ary,Abs)</span></span><br><span class="line"><span class="comment">//1字节输出报告</span></span><br><span class="line"><span class="number">0x15</span>,<span class="number">0x00</span>,<span class="comment">// Global Logical Min</span></span><br><span class="line"><span class="number">0x25</span>,<span class="number">0x01</span>,<span class="comment">// Global Logical Max</span></span><br><span class="line"><span class="number">0x95</span>,<span class="number">0x05</span>,<span class="comment">// Global ReportCount</span></span><br><span class="line"><span class="number">0x75</span>,<span class="number">0x01</span>,<span class="comment">// Global ReportSize</span></span><br><span class="line"><span class="number">0x05</span>,<span class="number">0x08</span>,<span class="comment">// Global LED</span></span><br><span class="line"><span class="number">0x19</span>,<span class="number">0x01</span>,<span class="comment">// Local Usage Min</span></span><br><span class="line"><span class="number">0x29</span>,<span class="number">0x05</span>,<span class="comment">// Local Usage Max</span></span><br><span class="line"><span class="number">0x91</span>,<span class="number">0x02</span>,<span class="comment">// Main Output(Data,Var,Abs)</span></span><br><span class="line"><span class="comment">//补足上面变成1个字节</span></span><br><span class="line"><span class="number">0x95</span>,<span class="number">0x01</span>,<span class="comment">// Global ReportCount</span></span><br><span class="line"><span class="number">0x75</span>,<span class="number">0x03</span>,<span class="comment">// Global ReportSize</span></span><br><span class="line"><span class="number">0x91</span>,<span class="number">0x03</span>,<span class="comment">// Main Output(Cnst,Var,Abs)</span></span><br><span class="line"><span class="number">0xc0</span>      <span class="comment">// Main End collection</span></span><br><span class="line">    <span class="comment">// 66 betys</span></span><br></pre></td></tr></table></figure><p><img src="../images/posts/23072013.png" alt="23072013" /></p><p>在<code>usbd_hid.h</code>这个文件修改<code>HID_EPIN_SIZE</code> 为<code>0x08U</code>即，<code>HID_MOUSE_REPORT_DESC_SIZE</code>为<code>66U</code>。</p><p><code>HID_EPIN_SIZE</code> 定义HID设备的输入端点缓冲区的大小。这个常量值可以告诉代码在接收HID数据时需要分配多大的缓冲区空间，通常鼠标为4，键盘为8。</p><p><code>HID_MOUSE_REPORT_DESC_SIZE</code> 定义HID鼠标设备的报告描述符的大小。这个常量值可以告诉代码在分配缓冲区时需要为报告描述符预留多大的空间。</p><p><img src="../images/posts/23072014.png" alt="23072014" /></p><h2 id="键盘发送文报"><a class="markdownIt-Anchor" href="#键盘发送文报"></a> 键盘发送文报</h2><h3 id="键盘数据结构"><a class="markdownIt-Anchor" href="#键盘数据结构"></a> 键盘数据结构</h3><p>键盘的描述符共有8字节的输入报告和1字节的输出报告。</p><p>1字节输出报告：</p><ul><li>这1个字节总共用了5bits使用3bits常量来补足成1个字节。5bits用来点亮特殊键盘上的Led灯，比如键盘的大小写，数字键，小键盘的LED灯。</li></ul><p>8字节的输入报告：</p><ul><li>Byte0各位则表示左右GUI(win),alt，shift，control键是否按下，按下为1。</li><li>Byte1是保留字节。</li><li>其6个字节表示此时按下的其他所有键盘按键的键码，从低到高填充，没按就是0x00.如果同时按下的键超过允许，则显示0xff。</li></ul><p>参考-<a href="https://usbzh.com/article/detail-1086.html">USB键盘的数据结构 - USB中文网 (usbzh.com)</a>   <a href="https://usbzh.com/article/detail-326.html">USB键盘报告描述符数据格式分析 - USB中文网 (usbzh.com)</a>。</p><h3 id="键盘发报代码"><a class="markdownIt-Anchor" href="#键盘发报代码"></a> 键盘发报代码</h3><p>前面在CubeMX配置HID时已经把PB13，PB14，PB15引脚初始化过了，这里就直接配置发报函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> hidbuffer[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">extern</span> USBD_HandleTypeDef hUsbDeviceFS;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ... ...</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">memset</span>(hidbuffer,<span class="number">0</span>,<span class="number">8</span>);<span class="comment">//将hidbuffer数组全部设置为0</span></span><br><span class="line">    </span><br><span class="line"> <span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_RESET)</span><br><span class="line">    &#123;</span><br><span class="line">     HAL_Delay(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_RESET)</span><br><span class="line">hidbuffer[<span class="number">0</span>] = <span class="number">0x01</span>;<span class="comment">//Ctrl</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_14) == GPIO_PIN_RESET)</span><br><span class="line">    &#123;</span><br><span class="line">     HAL_Delay(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_14) == GPIO_PIN_RESET)</span><br><span class="line">hidbuffer[<span class="number">2</span>] = <span class="number">0x06</span>;<span class="comment">//C</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_15) == GPIO_PIN_RESET)</span><br><span class="line">    &#123;</span><br><span class="line">     HAL_Delay(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_15) == GPIO_PIN_RESET)</span><br><span class="line">hidbuffer[<span class="number">2</span>] = <span class="number">0x19</span>;<span class="comment">//V</span></span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">    USBD_CUSTOM_HID_SendReport(&amp;hUsbDeviceFS,hidbuffer,<span class="keyword">sizeof</span> (hidbuffer) / <span class="keyword">sizeof</span> (hidbuffer [<span class="number">0</span>]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完成后编译，下载。</p><h1 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h1><p>好了，现在一个属于自己的CV键盘就制作完成了。</p><p><img src="../images/posts/23072015.gif" alt="23072015" /></p>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 小练习 </tag>
            
            <tag> STM32F103C8T6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>恭喜啊鹿Bilibili粉丝200W达成</title>
      <link href="/posts/32756.html"/>
      <url>/posts/32756.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="../images/posts/23070801.png" alt="23070801" /></p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
            <tag> 鹿乃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【开箱】三维猴3D打印和合宙Air001开箱</title>
      <link href="/posts/16716.html"/>
      <url>/posts/16716.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>记录自己第一次3D打印的帖子。事情是这样的，前一段时间看了这个帖子-<a href="https://blog.csdn.net/qq_66813359/article/details/130633027?app_version=5.15.4&amp;code=app_1562916241&amp;csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22130633027%22%2C%22source%22%3A%22qq_66813359%22%7D&amp;uLinkId=usr1mkqgl919blen&amp;utm_source=app"> 60元成本打造esp8266四足机器人_esp8266 机器人_达闻西Vinci的博客-CSDN博客</a> 后，一时心血来潮也想做一个这样的机器人，正好博主也发了3D模型文件，在拼多多淘宝店问了一下，最便宜的就要50刀，Woc我上初中时一周生活费都没有这么多。后来在B站看到有人推三维猴，查了一下居然是嘉立创的，以前正好用嘉立创打过板，那就试试他家的3D打印怎么样吧，最后就选择了三维猴。顺便再开箱一个合宙Air001开发板。</p><h1 id="开箱"><a class="markdownIt-Anchor" href="#开箱"></a> 开箱</h1><h2 id="三维猴打印"><a class="markdownIt-Anchor" href="#三维猴打印"></a> 三维猴打印</h2><p>一共打印了九个零件，加上新人包邮券，30元到手。</p><p><img src="../images/posts/23070701.jpg" alt="九个零件" /></p><p>下单的时猴选了抛光，效果还是不错的。</p><p><img src="../images/posts/23070702.jpg" alt="" /></p><p><img src="../images/posts/23070703.jpg" alt="" /></p><h2 id="合宙air001"><a class="markdownIt-Anchor" href="#合宙air001"></a> 合宙Air001</h2><p>这个盒子还是很炸裂的，什么包装效果。</p><p>9.9的开发板加0.1送10个芯片，32位ARM®Cortex®-M0+内核，内置32Kbytes的Flash和4Kbytes的RAM。芯片集 成多路USART、IIC、SPI等通讯外设，5个16bit定时器以及1路12bit ADC和2路比较器，支持Keil和Arduino IDE编程，还是很划算的</p><p><img src="../images/posts/23070704.jpg" alt="包装盒正面" /></p><p><img src="../images/posts/23070705.jpg" alt="包装盒后面" /></p><p>板子是白色的，很好看就是光秃秃的。</p><p><img src="../images/posts/23070706.jpg" alt="Air001开发板" /></p><p>送的10个芯片。</p><p><img src="../images/posts/23070707.jpg" alt="Air001芯片" /></p>]]></content>
      
      
      <categories>
          
          <category> 开箱测评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开箱 </tag>
            
            <tag> 3D打印 </tag>
            
            <tag> Air001 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Magisk】MIUI13震动优化模块</title>
      <link href="/posts/422.html"/>
      <url>/posts/422.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>发一个以前制作的震动模块吧。</p><p>虽然MIUI13已经是去年发布了的，照顾某些钉子户吧，比如我( •̀ ω •́ )✧</p><p>修改了返回，进入多任务，通知清理的震动（把嗡嗡嗡改成了清脆震动）以及全局增强。</p><p>截至今天已经近千人使用，感谢支持o(〃＾▽＾〃)o。</p><p><img src="../images/posts/23062601.png" alt="23062601" /></p><p>下载链接：<a href="https://iqn.lanzoub.com/i4lEk08d9ooj">v1.0</a>、<a href="https://iqn.lanzoub.com/it8T008d9n0j">v2.0</a>、<a href="https://iqn.lanzoub.com/iCfrS08d6ere">v3.0</a>，（版本越大震动越强）</p><p>测试机型：Redmi K40s</p><p>设备系统：MIUI 13.0.6，MIUI 13.0.7 ，MIUI 13.2.5</p><p>安卓版本：安卓12（MIUI 13.0.6，MIUI 13.0.7 ），安卓13（MIUI 13.2.5）</p><p>⚠️联发科CPU未经测试请不要使用，安卓13震动有被削弱推荐安卓12使用。</p><blockquote><p>其他平台发布链接：<a href="https://www.coolapk.com/feed/37807119?shareKey=NWEyYWM4YTdiNzMwNjQ5OTMzMGQ~&amp;shareUid=3633462&amp;shareFrom=com.coolapk.market_13.1.5">来自 NiseKana - 酷安 (coolapk.com)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Magisk模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Magisk </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】CW32学习笔记</title>
      <link href="/posts/23639.html"/>
      <url>/posts/23639.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="gpio基本控制"><a class="markdownIt-Anchor" href="#gpio基本控制"></a> GPIO基本控制</h1><h2 id="配置gpio步骤"><a class="markdownIt-Anchor" href="#配置gpio步骤"></a> 配置GPIO步骤</h2><p>第一步：配置系统时钟</p><p>第二步：使能GPIOx口的时钟</p><p>第三步：选择GPIOx的端口，设置模式</p><p>第四笔：设置GPIOx的端口</p><h3 id="配置系统时钟"><a class="markdownIt-Anchor" href="#配置系统时钟"></a> 配置系统时钟</h3><p>输出速度可以限制输出引脚的最大翻转速度，作用是降低功耗、提高稳定性。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">RCC_Configuration</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 0. HSI使能并校准</span></span><br><span class="line">  RCC_HSI_Enable(RCC_HSIOSC_DIV6);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 设置HCLK和PCLK的分频系数　</span></span><br><span class="line">  RCC_HCLKPRS_Config(RCC_HCLK_DIV1);</span><br><span class="line">  RCC_PCLKPRS_Config(RCC_PCLK_DIV1);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 2. 使能PLL，通过PLL倍频到64MHz </span></span><br><span class="line">  RCC_PLL_Enable(RCC_PLLSOURCE_HSI, <span class="number">8000000</span>, <span class="number">8</span>);     <span class="comment">// HSI 默认输出频率8MHz</span></span><br><span class="line"> <span class="comment">// RCC_PLL_OUT();  //PC13脚输出PLL时钟</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">///&lt; 当使用的时钟源HCLK大于24M,小于等于48MHz：设置FLASH 读等待周期为2 cycle</span></span><br><span class="line">  <span class="comment">///&lt; 当使用的时钟源HCLK大于48MHz：设置FLASH 读等待周期为3 cycle</span></span><br><span class="line">  __RCC_FLASH_CLK_ENABLE();</span><br><span class="line">  FLASH_SetLatency(FLASH_Latency_3);   </span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 3. 时钟切换到PLL</span></span><br><span class="line">  RCC_SysClk_Switch(RCC_SYSCLKSRC_PLL);</span><br><span class="line">  RCC_SystemCoreClockUpdate(<span class="number">64000000</span>);</span><br><span class="line"><span class="comment">//..............................</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使能gpiox口的时钟"><a class="markdownIt-Anchor" href="#使能gpiox口的时钟"></a> 使能GPIOx口的时钟</h3><p>在RCC时钟控制的函数库中，最经常用到的三个函数：<br />可用按位或(|)来选择多个外设。<br />第二个参数为选择使能或失能，选择：ENABLE or DISABLE。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @brief AHB外设时钟设置</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param Periph  ：RCC_AHB_PERIPH_GPIOF   RCC_AHB_PERIPH_GPIOC</span></span><br><span class="line"><span class="comment"> *                  RCC_AHB_PERIPH_GPIOB   RCC_AHB_PERIPH_GPIOA</span></span><br><span class="line"><span class="comment"> *                  RCC_AHB_PERIPH_CRC     RCC_AHB_PERIPH_FLASH</span></span><br><span class="line"><span class="comment"> *                  RCC_AHB_PERIPH_DMA</span></span><br><span class="line"><span class="comment"> * @param NewState  ENABLE  DISABLE</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">RCC_AHBPeriphClk_Enable</span><span class="params">(<span class="type">uint32_t</span> Periph,FunctionalState NewState)</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @brief APB外设时钟设置1</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param Periph   ：  RCC_APB1_PERIPH_I2C2   RCC_APB1_PERIPH_I2C1</span></span><br><span class="line"><span class="comment"> *                     RCC_APB1_PERIPH_UART3  RCC_APB1_PERIPH_UART2</span></span><br><span class="line"><span class="comment"> *                     RCC_APB1_PERIPH_SPI2   RCC_APB1_PERIPH_IWDT</span></span><br><span class="line"><span class="comment"> *                     RCC_APB1_PERIPH_WWDT   RCC_APB1_PERIPH_RTC</span></span><br><span class="line"><span class="comment"> *                     RCC_APB1_PERIPH_GTIM2  RCC_APB1_PERIPH_GTIM1</span></span><br><span class="line"><span class="comment"> * @param NewState  ENABLE  DISABLE</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">RCC_APBPeriphClk_Enable1</span><span class="params">(<span class="type">uint32_t</span> Periph,FunctionalState NewState)</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @brief APB外设时钟设置2</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param Periph ：  RCC_APB2_PERIPH_AWT       RCC_APB2_PERIPH_BTIM</span></span><br><span class="line"><span class="comment"> *                   RCC_APB2_PERIPH_GTIM4     RCC_APB2_PERIPH_GTIM3</span></span><br><span class="line"><span class="comment"> *                   RCC_APB2_PERIPH_UART1     RCC_APB2_PERIPH_SPI1</span></span><br><span class="line"><span class="comment"> *                   RCC_APB2_PERIPH_ATIM      RCC_APB2_PERIPH_VC</span></span><br><span class="line"><span class="comment"> *                   RCC_APB2_PERIPH_ADC</span></span><br><span class="line"><span class="comment"> * @param NewState :  ENABLE  DISABLE</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">RCC_APBPeriphClk_Enable2</span><span class="params">(<span class="type">uint32_t</span> Periph,FunctionalState NewState)</span>;</span><br></pre></td></tr></table></figure><h3 id="设置gpiox的端口及模式"><a class="markdownIt-Anchor" href="#设置gpiox的端口及模式"></a> 设置GPIOx的端口及模式</h3><p>在GPIO通用IO口的函数库中，最常用到的函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_SWD2GPIO</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_GPIO2SWD</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_LockPin</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint16_t</span> GPIO_Pins)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_DeInit</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint32_t</span> GPIO_Pins)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_Init</span><span class="params">(GPIO_TypeDef *GPIOx, GPIO_InitTypeDef *GPIO_Init)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_ConfigFilter</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint16_t</span> GPIO_Pins, <span class="type">uint32_t</span> FltClk)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_WritePin</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint16_t</span> GPIO_Pins, GPIO_PinState PinState)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_HighByte_Write</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint8_t</span> Value)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_LowByte_Write</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint8_t</span> Value)</span>;</span><br><span class="line">  <span class="type">void</span> <span class="title function_">GPIO_TogglePin</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint16_t</span> GPIO_Pins)</span>;</span><br><span class="line">  GPIO_PinState <span class="title function_">GPIO_ReadPin</span><span class="params">(GPIO_TypeDef *GPIOx, <span class="type">uint16_t</span> GPIO_Pin)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//GPIO 初始化，多个引脚</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief GPIO 初始化，可同时设置多个引脚或单个引脚</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx 参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOC CW_GPIOF</span></span><br><span class="line"><span class="comment"> * @param GPIO_Init 参见GPIO_InitTypeDef的定义</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_Init</span><span class="params">(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)</span></span><br><span class="line">    </span><br><span class="line">GPIO_InitTypeDef:</span><br><span class="line">Pins ,Mode ,IT ,Speed</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_PIN_0</span></span><br><span class="line">        ......</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_PIN_15</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_PIN_All </span></span><br><span class="line">        </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_MODE_ANALOG                                  (0X00)模拟输入</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_MODE_INPUT                                   (0x10)浮空输入</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_MODE_INPUT_PULLUP                            (0x11)上拉输入</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_MODE_INPUT_PULLDOWN                          (0x12)下拉输入</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_MODE_OUTPUT_PP                               (0x20)推挽输出</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_MODE_OUTPUT_OD                               (0x21)开漏输出</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_IT_NONE                                      (0x80)无</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_IT_RISING                                    (0x81)上升</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_IT_FALLING                                   (0x82)下降</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_IT_HIGH                                      (0x84)高</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_IT_LOW                                       (0x88)低</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_SPEED_LOW                                    (0x0000)低</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_SPEED_HIGH                                   (0xFFFF)高</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//GPIO 反初始化， 多个引脚</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief GPIO 去初始化，可同时设置多个引脚或单个引脚</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx 参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOC CW_GPIOF</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIO_Pins 参数取值如下</span></span><br><span class="line"><span class="comment"> *        @arg GPIO_PIN_0/1/2.../15/ALL 可通过与运算同时操作多个引脚</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_DeInit</span><span class="params">(GPIO_TypeDef  *GPIOx, <span class="type">uint32_t</span> GPIO_Pins)</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//获取指定引脚电平，一个引脚</span></span><br><span class="line"><span class="comment">//注意：建议采用宏函数来获取引脚电平，例PA00_GETVALUE()</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 获取一个引脚的电平</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx 参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOC CW_GPIOF</span></span><br><span class="line"><span class="comment"> * @param GPIO_Pin 参数取值如下</span></span><br><span class="line"><span class="comment"> *        @arg GPIO_PIN_0/1/2.../15</span></span><br><span class="line"><span class="comment"> * @return GPIO_PinState 取值如下:</span></span><br><span class="line"><span class="comment"> *        @arg GPIO_Pin_SET</span></span><br><span class="line"><span class="comment"> *        @arg GPIO_Pin_RESET</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">GPIO_PinState <span class="title function_">GPIO_ReadPin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pin)</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//设置指定引脚电平，多个引脚</span></span><br><span class="line"><span class="comment">//注意：如只操作一只引脚，建议采用宏函数，例PA00_SETHIGH(), PA00_SETLOW()</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 设置指定引脚电平，可同时设置多个引脚</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx GPIOx 参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOC CW_GPIOF</span></span><br><span class="line"><span class="comment"> * @param GPIO_Pins 参数取值如下</span></span><br><span class="line"><span class="comment"> *        @arg GPIO_PIN_0/1/2.../15/ALL;</span></span><br><span class="line"><span class="comment"> * @param PinState 取值如下:</span></span><br><span class="line"><span class="comment"> *        @arg GPIO_Pin_SET</span></span><br><span class="line"><span class="comment"> *        @arg GPIO_Pin_RESET</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_WritePin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pins, GPIO_PinState PinState)</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//设置端口低字节（B0-B7）引脚电平</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 设置端口低字节（B0-B7）引脚电平</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx 参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOF</span></span><br><span class="line"><span class="comment"> * @param Value 取值范围：0x00~0xFF</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_LowByte_Write</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint8_t</span> Value )</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//设置端口高字节（B8-B15）引脚电平</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 设置端口高字节（B8-B15）引脚电平</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx 参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOC</span></span><br><span class="line"><span class="comment"> * @param Value 取值范围：0x00~0xFF</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_HighByte_Write</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint8_t</span> Value )</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//翻转指定引脚电平，多个引脚</span></span><br><span class="line"><span class="comment">//注意：如只操作一只引脚，建议采用宏函数，例PA00_TOG()</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 翻转指定引脚电平，可同时设置多个引脚</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx 参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOC CW_GPIOF</span></span><br><span class="line"><span class="comment"> * @param GPIO_Pins </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_TogglePin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pins)</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//锁定指定引脚配置项，多个引脚</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 锁定指定引脚配置项，可同时设置多个引脚</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx  参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOC CW_GPIOF</span></span><br><span class="line"><span class="comment"> * @param GPIO_Pins </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_LockPin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pins)</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//将PA13/PA14设置成GPIO</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 将PA13/PA14设置成GPIO</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_SWD2GPIO</span><span class="params">( <span class="type">void</span> )</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//将PA13/PA14设置成SWD</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 将PA13/PA14设置成SWD，PA13/SWDIO PA14/SWCLK</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_GPIO2SWD</span><span class="params">( <span class="type">void</span> )</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//配置端口滤波</span></span><br><span class="line"><span class="comment">// FltClk 只能是宏定义中定义的参数</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 配置端口滤波</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param GPIOx 参数为下列参数之一：</span></span><br><span class="line"><span class="comment"> *        @arg CW_GPIOA CW_GPIOB CW_GPIOC CW_GPIOF</span></span><br><span class="line"><span class="comment"> * @param GPIO_Pins </span></span><br><span class="line"><span class="comment"> * @param FltClk 只能是宏定义中定义的参数 GPIO_FLTCLK_xxx</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GPIO_ConfigFilter</span><span class="params">( GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pins, <span class="type">uint32_t</span> FltClk )</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//配置端口辅助功能</span></span><br><span class="line"><span class="comment">//请使用CW32f030_gpio.h中的宏定义来配置每个端口的辅助功能</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="示例程序"><a class="markdownIt-Anchor" href="#示例程序"></a> 示例程序</h2><p>在CW32大学计划开发板中，有三个可编程LED灯，分别连着开发板的PA7、PA8、PC13，低电平点亮。</p><ol><li>配置系统时钟</li><li>使用RCC开启GPIO时钟</li><li>使用GPIO_Init初始化GPIO</li><li>使用输出或输入函数控制GPIO</li></ol><h3 id="点亮一个led"><a class="markdownIt-Anchor" href="#点亮一个led"></a> 点亮一个LED</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">//1、配置系统时钟64M</span></span><br><span class="line">  RCC_HSI_Enable(RCC_HSIOSC_DIV6);</span><br><span class="line">  RCC_HCLKPRS_Config(RCC_HCLK_DIV1);</span><br><span class="line">  RCC_PCLKPRS_Config(RCC_PCLK_DIV1);</span><br><span class="line">  RCC_PLL_Enable(RCC_PLLSOURCE_HSI, <span class="number">8000000</span>, <span class="number">8</span>);</span><br><span class="line">  FLASH_SetLatency(FLASH_Latency_3);</span><br><span class="line">  RCC_SysClk_Switch(RCC_SYSCLKSRC_PLL);</span><br><span class="line">  RCC_SystemCoreClockUpdate(<span class="number">64000000</span>);</span><br><span class="line"><span class="comment">//2、使用RCC开启GPIO时钟，GPIO连接在AHB总线上则函数为：</span></span><br><span class="line">  RCC_AHBPeriphClk_Enable(RCC_AHB_PERIPH_GPIOC ,ENABLE );</span><br><span class="line">  <span class="comment">//定义结构体变量，变量名为GPIO_InitStructure</span></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">  GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStructure.IT = GPIO_IT_NONE;</span><br><span class="line">  GPIO_InitStructure.Pins = GPIO_PIN_13;</span><br><span class="line">  GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;</span><br><span class="line"><span class="comment">//3、使用GPIO_Init初始化GPIO</span></span><br><span class="line">  GPIO_Init(CW_GPIOC ,&amp;GPIO_InitStructure);</span><br><span class="line"><span class="comment">//4、使用输出或输入函数控制GPIO，只控制一个引脚可以使用宏函数，如：PA00_SETHIGH();失能 PA00_SETLOW();使能</span></span><br><span class="line"> PC13_SETLOW();</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="点亮多个led"><a class="markdownIt-Anchor" href="#点亮多个led"></a> 点亮多个LED</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">//1、配置系统时钟64M</span></span><br><span class="line">  RCC_HSI_Enable(RCC_HSIOSC_DIV6);</span><br><span class="line">  RCC_HCLKPRS_Config(RCC_HCLK_DIV1);</span><br><span class="line">  RCC_PCLKPRS_Config(RCC_PCLK_DIV1);</span><br><span class="line">  RCC_PLL_Enable(RCC_PLLSOURCE_HSI, <span class="number">8000000</span>, <span class="number">8</span>);</span><br><span class="line">  FLASH_SetLatency(FLASH_Latency_3);</span><br><span class="line">  RCC_SysClk_Switch(RCC_SYSCLKSRC_PLL);</span><br><span class="line">  RCC_SystemCoreClockUpdate(<span class="number">64000000</span>);</span><br><span class="line"><span class="comment">//2、使用RCC开启GPIO时钟，GPIO连接在AHB总线上则函数为：</span></span><br><span class="line">  RCC_AHBPeriphClk_Enable(RCC_AHB_PERIPH_GPIOC ,ENABLE );</span><br><span class="line">  RCC_AHBPeriphClk_Enable(RCC_AHB_PERIPH_GPIOA ,ENABLE );</span><br><span class="line">  <span class="comment">//定义结构体变量，变量名为GPIO_InitStructure</span></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">  GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStructure.IT = GPIO_IT_NONE;</span><br><span class="line">  GPIO_InitStructure.Pins = GPIO_PIN_13 | GPIO_PIN_7 | GPIO_PIN_8;</span><br><span class="line">  GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;</span><br><span class="line"><span class="comment">//3、使用GPIO_Init初始化GPIO</span></span><br><span class="line">  GPIO_Init(CW_GPIOA ,&amp;GPIO_InitStructure);</span><br><span class="line">  GPIO_Init(CW_GPIOC ,&amp;GPIO_InitStructure);</span><br><span class="line"><span class="comment">//4、使用输出或输入函数控制GPIO，控制多个引脚可以用按位或(|)</span></span><br><span class="line">  GPIO_WritePin(CW_GPIOA ,GPIO_PIN_7 | GPIO_PIN_8 ,GPIO_Pin_RESET);</span><br><span class="line">  GPIO_WritePin(CW_GPIOC ,GPIO_PIN_13 ,GPIO_Pin_RESET);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输入开关信号"><a class="markdownIt-Anchor" href="#输入开关信号"></a> 输入开关信号</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1、配置系统时钟64M</span></span><br><span class="line">    RCC_Configuration()</span><br><span class="line">    <span class="comment">//2、按键初始化</span></span><br><span class="line">    <span class="comment">//开启时钟</span></span><br><span class="line">RCC_AHBPeriphClk_Enable(RCC_AHB_PERIPH_GPIOB,ENABLE);</span><br><span class="line"><span class="comment">//配置GPIO端口模式</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.IT = GPIO_IT_NONE;</span><br><span class="line">GPIO_InitStructure.Mode = GPIO_MODE_INPUT_PULLUP;</span><br><span class="line">GPIO_InitStructure.Pins = GPIO_PIN_13;</span><br><span class="line">GPIO_Init(CW_GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">    <span class="comment">//3、LED初始化</span></span><br><span class="line">    <span class="comment">//开启GPIOA的时钟</span></span><br><span class="line">RCC_AHBPeriphClk_Enable(RCC_AHB_PERIPH_GPIOC,ENABLE);</span><br><span class="line">GPIO_InitStructure.IT = GPIO_IT_NONE;</span><br><span class="line">GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">GPIO_InitStructure.Pins = GPIO_PIN_13;</span><br><span class="line">GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;</span><br><span class="line">GPIO_Init(CW_GPIOC,&amp;GPIO_InitStructure);</span><br><span class="line"><span class="comment">//初始化后灯的状态</span></span><br><span class="line">PA07_SETHIGH();PA08_SETHIGH();PC13_SETHIGH();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">if</span> (GPIO_ReadPin(CW_GPIOB,GPIO_PIN_13) == <span class="number">0</span>)<span class="comment">//检测按键按下</span></span><br><span class="line">         &#123;</span><br><span class="line">delay1ms(<span class="number">10</span>);<span class="comment">//消抖</span></span><br><span class="line"><span class="keyword">if</span> (GPIO_ReadPin(CW_GPIOB,GPIO_PIN_13) == <span class="number">0</span>);</span><br><span class="line">PC13_SETLOW();</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">RCC_Configuration</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 0. HSI使能并校准</span></span><br><span class="line">  RCC_HSI_Enable(RCC_HSIOSC_DIV6);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 设置HCLK和PCLK的分频系数　</span></span><br><span class="line">  RCC_HCLKPRS_Config(RCC_HCLK_DIV1);</span><br><span class="line">  RCC_PCLKPRS_Config(RCC_PCLK_DIV1);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 2. 使能PLL，通过PLL倍频到64MHz </span></span><br><span class="line">  RCC_PLL_Enable(RCC_PLLSOURCE_HSI, <span class="number">8000000</span>, <span class="number">8</span>);     <span class="comment">// HSI 默认输出频率8MHz</span></span><br><span class="line"> <span class="comment">// RCC_PLL_OUT();  //PC13脚输出PLL时钟</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">///&lt; 当使用的时钟源HCLK大于24M,小于等于48MHz：设置FLASH 读等待周期为2 cycle</span></span><br><span class="line">  <span class="comment">///&lt; 当使用的时钟源HCLK大于48MHz：设置FLASH 读等待周期为3 cycle</span></span><br><span class="line">  __RCC_FLASH_CLK_ENABLE();</span><br><span class="line">  FLASH_SetLatency(FLASH_Latency_3);   </span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 3. 时钟切换到PLL</span></span><br><span class="line">  RCC_SysClk_Switch(RCC_SYSCLKSRC_PLL);</span><br><span class="line">  RCC_SystemCoreClockUpdate(<span class="number">64000000</span>);</span><br><span class="line"><span class="comment">//..............................</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CW32F030C8T6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【开箱】CW32-48F大学计划版开箱</title>
      <link href="/posts/59371.html"/>
      <url>/posts/59371.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h1><p>五月初申请的CW32大学计划版终于到了啊啊啊——。没有到的日子里每天都在期待着，看看群里的发货清单有没有轮到自己，菜鸟里有没有新的快递，不知不觉一个月已经过去了。在六月初突然收到一条快递信息。激动的心，颤抖的手，奔着向快递站去，开发板终于到了。</p><p><img src="../images/posts/23060301.jpg" alt="开箱开箱" /></p><h1 id="开箱"><a class="markdownIt-Anchor" href="#开箱"></a> 开箱</h1><p>不过是散件，CW32官方为了加快发货有些插件没有焊接（忘了拍图了😥），正好可以练练自己的焊工。顺便提一下有个好工具对新手来说非常重要，在家用的是6块的外热烙铁和10块的锡丝，对比学校的T12差别很大。</p><p><img src="../images/posts/23060303.jpg" alt="这个焊的还是可以的( •̀ ω •́ )✧" /></p><p>不过还是有些地方没焊好（又不是不能用.jpg）。</p><p><img src="../images/posts/23060302.jpg" alt="又不是不能用.jpg" /></p><p><img src="../images/posts/23060304.jpg" alt="CW32大学计划开放板" /></p><p>下面是全家桶，WCH-LINK仿真器、CW32F030C8核心板、扩展开发板、1.77寸TF屏幕。</p><p><img src="../images/posts/23060305.jpg" alt="全家桶" /></p><h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1><p>以前只在社团里玩过几次51单片机，跟着B站官方教程把这几个示例程序跑了一遍q(≧▽≦q)。</p><p><img src="../images/posts/23060306.png" alt="官方示例程序" /></p><p>最后照猫画虎成功的在屏幕上显示了一张图片，鹿乃好耶ヽ（≧□≦）ノ。</p><p><img src="../images/posts/23060307.jpg" alt="鹿乃好耶ヽ（≧□≦）ノ" /></p>]]></content>
      
      
      <categories>
          
          <category> 开箱测评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CW32F030C8T6 </tag>
            
            <tag> 开箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】小米妙享NFC标签制作</title>
      <link href="/posts/62827.html"/>
      <url>/posts/62827.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>小米平板6发布时也带来了新品—小米智能触控键盘。其中键盘支持NFC一碰秒传，无需配对，快速传文件、屏幕扭转等（官方介绍），除过这个键盘还有Redmi Book14 2023支持就没有其他的了¯\ (°_o)/¯。</p><p><img src="../images/posts/23052301.png" alt="官方介绍" /></p><p>当然办法总比困难多，按照酷安大佬@星逝之殇的<a href="https://www.coolapk.com/feed/45816956?shareKey=MDUzYmMxZmY3NTAxNjQ1ZTZjNDI~">教程</a>已经在第三方NFC标签上可以使用。</p><h1 id="教程开始"><a class="markdownIt-Anchor" href="#教程开始"></a> 教程开始</h1><ol><li><p>首先：要有NFC标签纸，213、215、216、小米碰碰贴都可以哦，213内存刚好够用，建议买215、216的可玩性更大，以后可以做音乐标签等。</p></li><li><p>第一步：按win+r打开运行，输入<code>cmd</code>打开终端，再输入<code>ipconfig /all</code>划到最下面复制蓝牙MAC地址。</p><p><img src="../images/posts/23052302.png" alt="" /></p></li><li><p>第二步：将MAC地址中的<code>-</code>换成英文的<code>:</code>用<a href="https://www.sojson.com/hexadecimal.html">《16进制转换工具》</a>转换成16进制。</p></li><li><p>第三步：新建文本文件，把下面的代码复制进去，其中把<code>蓝牙MAC地址</code>改成上一步转换好的16进制代码，保存把文件重命名为<code>nfc.ndef</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;NdefMessage&gt;d42a4d636f6d2e7869616f6d692e6d695f636f6e6e6563745f736572766963653a65787465726e616c747970650a4b0801100d2201032a094d492d4e4643544147380f4a31271700000008000e5441475f444953434f564552454465064d4952524f520111蓝牙MAC地址6a02fa7f&lt;/NdefMessage&gt;</span><br></pre></td></tr></table></figure></li><li><p>第四步：下载《<a href="https://iqn.lanzoub.com/iNa2S0sjrlde">TagWrIter</a>密码：2m4m》软件，先将NFC标签擦除一遍，然后写入上一步制作的文件。</p></li></ol><h1 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h1><p>NFC贴纸就制作完成了，如果转流失败应该大多数就是第二步和第三步的问题。记得把 小米妙享、投屏、小米互联通信服务 更到最新版本。（电脑文件互传要把小米妙享更新到v3.3.0.529版本以上，且电脑为Redmi Book2023。如果不是可以下载<a href="https://iqn.lanzoub.com/iagd80x88hjg">小米妙享破解补丁改型号</a>解压放在小米妙享安装路径里）。</p><p>下面是成功的效果图。</p><p><img src="../images/posts/23052303.gif" alt="小米妙享效果图" /></p>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> NFC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【开源】NFC卡片</title>
      <link href="/posts/28320.html"/>
      <url>/posts/28320.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>前段时间看B站嘉立创EDA的教程忍不住先动手实践时间，不知道画什么就随便搞个NFC卡片吧。同时这也是新人第一次PCB打样哦。</p><h1 id="作品"><a class="markdownIt-Anchor" href="#作品"></a> 作品</h1><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>使用嘉立创EDA专业版绘图，板子尺寸：55.082mm x 35.053mm，双层板设计，可复制IC卡。</p><h2 id="pcb图片"><a class="markdownIt-Anchor" href="#pcb图片"></a> PCB图片</h2><p>正面：</p><p><img src="../images/posts/23050301.png" alt="23050301" /></p><p>反面：</p><p><img src="../images/posts/23050302.png" alt="23050302" /></p><h2 id="3d模型"><a class="markdownIt-Anchor" href="#3d模型"></a> 3D模型</h2><p>正面：</p><p><img src="../images/posts/23050303.png" alt="23050303" /></p><p>反面：</p><p><img src="../images/posts/23050304.png" alt="23050304" /></p><h2 id="实物图"><a class="markdownIt-Anchor" href="#实物图"></a> 实物图</h2><p>正面：</p><p><img src="../images/posts/23050305.jpg" alt="23050305" /></p><p>反面：</p><p><img src="../images/posts/23050306.jpg" alt="23050306" /></p><h1 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h1><p>下载链接：<a href="https://iqn.lanzoub.com/i9DVk135zr3a">Gerber_NFC卡.zip - 蓝奏云 (lanzoub.com)</a></p><p>可直接在嘉立创进行PCB下单，搭配白嫖券赶紧嫖起来吧。</p>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小练习 </tag>
            
            <tag> NFC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【二改】桌面天气小电视</title>
      <link href="/posts/45861.html"/>
      <url>/posts/45861.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>修改了一下B站大佬<a href="https://space.bilibili.com/361778729?share_medium=android&amp;share_source=copy_link&amp;bbid=XX34DD537771BC0984429C5030BD7491599AD&amp;ts=1682573268071">@_铁甲依旧在_</a>的作品<a href="https://www.bilibili.com/video/av889642696">《ESP8266+OLED桌面气象小电视》</a>。删除了哔哩哔哩视频播放量代码，解决了视频播放量显示-1的问题§(<em>￣▽￣</em>)§，并修改了字体大小和屏幕线序使连接更方便。</p><h2 id="主要功能"><a class="markdownIt-Anchor" href="#主要功能"></a> 主要功能</h2><p>智能配网、网络授时、获取知心天气信息（当前天气、预报天气）、获取b站up主信息（粉丝数）</p><h2 id="代码修改"><a class="markdownIt-Anchor" href="#代码修改"></a> 代码修改</h2><h3 id="final_projectino文件中"><a class="markdownIt-Anchor" href="#final_projectino文件中"></a> /final_project.ino文件中</h3><p>26行<code>#include &lt;SSD1306Wire.h&gt;</code>0.96存屏幕，<code>#include &quot;SH1106Wire.h&quot;</code>1.3寸屏幕。</p><p>36行<code>String reqUserKey = &quot;*****&quot;;</code>将*****替换成<a href="https://www.seniverse.com">知心天气</a>私匙。</p><p>37行<code>String reqLocation = &quot;xian&quot;;</code>替换成城市拼音。</p><p>46和47行<code>String mid = &quot;********&quot;;</code> <code>UpInfo upInfo(&quot;********&quot;);</code>将*****改成<a href="https://bilibili.com/">哔哩哔哩</a>的UID。</p><h2 id="硬件连接"><a class="markdownIt-Anchor" href="#硬件连接"></a> 硬件连接</h2><h3 id="esp8266和屏幕"><a class="markdownIt-Anchor" href="#esp8266和屏幕"></a> ESP8266和屏幕</h3><table><thead><tr><th style="text-align:center">ESP8266</th><th style="text-align:center">屏幕</th></tr></thead><tbody><tr><td style="text-align:center">GND</td><td style="text-align:center">GND</td></tr><tr><td style="text-align:center">3V3</td><td style="text-align:center">VCC</td></tr><tr><td style="text-align:center">GPIO2（D4）</td><td style="text-align:center">SCL</td></tr><tr><td style="text-align:center">GPIO0（D3）</td><td style="text-align:center">SAD</td></tr></tbody></table><h3 id="按键"><a class="markdownIt-Anchor" href="#按键"></a> 按键</h3><table><thead><tr><th style="text-align:center">GPIO5（D1）</th><th style="text-align:center">GND</th></tr></thead><tbody></tbody></table><h2 id="程序下载"><a class="markdownIt-Anchor" href="#程序下载"></a> 程序下载</h2><p>二改链接：<a href="https://iqn.lanzoub.com/iaxma0u3rqhe">https://iqn.lanzoub.com/iaxma0u3rqhe</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Esp8266 </tag>
            
            <tag> Arduino </tag>
            
            <tag> 小练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【小练习】ESP8266舵机测试程序</title>
      <link href="/posts/39246.html"/>
      <url>/posts/39246.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>最近在学习ESP8266，使用ESP8266创建一个服务器，用网页控制舵机的角度。</p><h1 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h1><h3 id="软件"><a class="markdownIt-Anchor" href="#软件"></a> 软件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Servo.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// WiFi网络名称和密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;********&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;********&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建服务器对象</span></span><br><span class="line">WiFiServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建舵机对象</span></span><br><span class="line">Servo servo;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// 串口调试</span></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 连接WiFi网络</span></span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;Connecting to WiFi...&quot;</span>);</span><br><span class="line">  <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED)&#123;</span><br><span class="line">    delay (<span class="number">1000</span>);</span><br><span class="line">    Serial.print(i++);Serial.print(<span class="string">&quot; &quot;</span>);&#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;WiFi connected.&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Your IP = &quot;</span>);</span><br><span class="line">  Serial.println(WiFi.localIP());</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 启动服务器</span></span><br><span class="line">  server.begin();</span><br><span class="line">  Serial.println(<span class="string">&quot;Server started.&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置舵机引脚</span></span><br><span class="line">  servo.attach(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// 等待客户端连接</span></span><br><span class="line">  WiFiClient client = server.available();</span><br><span class="line">  <span class="keyword">if</span> (client) &#123;</span><br><span class="line">    <span class="comment">// 客户端连接成功，显示连接信息</span></span><br><span class="line">    Serial.println(<span class="string">&quot;New client connected.&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (client.connected()) &#123;</span><br><span class="line">      <span class="comment">// 读取客户端发来的数据</span></span><br><span class="line">      String request = client.readStringUntil(<span class="string">&#x27;\r&#x27;</span>);</span><br><span class="line">      Serial.println(request);</span><br><span class="line">      client.flush();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果请求中含有&quot;GET /?value=&quot;，说明是滑块发送的数据</span></span><br><span class="line">      <span class="keyword">if</span> (request.indexOf(<span class="string">&quot;GET /?value=&quot;</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">// 从请求中提取滑块值</span></span><br><span class="line">        <span class="type">int</span> valueStart = request.indexOf(<span class="string">&quot;=&quot;</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> valueEnd = request.indexOf(<span class="string">&quot; HTTP&quot;</span>);</span><br><span class="line">        String valueString = request.substring(valueStart, valueEnd);</span><br><span class="line">        <span class="type">int</span> value = valueString.toInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将滑块值转化为舵机角度</span></span><br><span class="line">        <span class="type">int</span> angle = <span class="built_in">map</span>(value, <span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>, <span class="number">180</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 控制舵机转动</span></span><br><span class="line">        servo.write(angle);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 发送HTTP响应</span></span><br><span class="line">      client.println(<span class="string">&quot;HTTP/1.1 200 OK&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;Content-Type: text/html&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;!DOCTYPE HTML&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;html&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;head&gt;&lt;title&gt;ESP8266 Servo Control&lt;/title&gt;&lt;/head&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;style&gt;body&#123;font-family:Arial,sans-serif;background-color:#f0f0f0;margin:20px;&#125;h1&#123;color:#333333;text-align:center;&#125;input[type=range]&#123;width:80%;margin:10px auto;display:block;&#125;p&#123;text-align:center;font-size:20px;&#125;span&#123;color:#ff0000;font-weight:bold;&#125;&lt;/style&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;body&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;h1&gt;ESP8266 Servo Control&lt;/h1&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;input type=\&quot;range\&quot; min=\&quot;0\&quot; max=\&quot;180\&quot; value=\&quot;90\&quot; &quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;oninput=\&quot;updateValue(this.value)\&quot;&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;p&gt;Value: &lt;span id=\&quot;value\&quot;&gt;&lt;/span&gt;&lt;/p&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;script&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;function updateValue(newValue) &#123;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;document.getElementById(\&quot;value\&quot;).innerHTML = newValue;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;var xmlhttp = new XMLHttpRequest();&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;xmlhttp.open(\&quot;GET\&quot;, \&quot;?value=\&quot; + newValue, true);&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;xmlhttp.send(); &#125;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;/script&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">      client.println(<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 等待连接关闭</span></span><br><span class="line">    client.stop();</span><br><span class="line">    Serial.println(<span class="string">&quot;Client disconnected.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要再这里把SSID和PASSWORD修改成你WIFI的名字和密码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// WiFi网络名称和密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;*********&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;********&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="硬件"><a class="markdownIt-Anchor" href="#硬件"></a> 硬件</h3><p>打开Arduino添加库文件&lt;ESP8266WiFi.h&gt;和&lt;Servo.h&gt;，上传EPS8266，打开串口监视器波特率选择9600，不出意外的话就会看到一下内容，如果没有就按ESP8266的RST键。</p><p><img src="../images/posts/23041502.png" alt="" /></p><table><thead><tr><th style="text-align:center">ESP8266</th><th style="text-align:center">舵机</th></tr></thead><tbody><tr><td style="text-align:center">G</td><td style="text-align:center">棕</td></tr><tr><td style="text-align:center">3V</td><td style="text-align:center">红</td></tr><tr><td style="text-align:center">D4</td><td style="text-align:center">黄</td></tr></tbody></table><p>连接同一WiFi在浏览器地址栏输入ESP8266的IP地址，拖动滑块舵机就会跟着动啦🎉。</p><p><img src="../images/posts/23041503.png" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Esp8266 </tag>
            
            <tag> Arduino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大臣、好き</title>
      <link href="/posts/3142.html"/>
      <url>/posts/3142.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>＃ダイジンといっいよ、大好きたよ~<br />没想到真的可以看见大臣呀！！！<br /><img src="../images/posts/23032601.png" alt=" " /><br /><img src="../images/posts/23032602.png" alt=" " /><br /><img src="../images/posts/23032603.png" alt=" " /></p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Magisk】RedmiK40s前置猫猫模块</title>
      <link href="/posts/53112.html"/>
      <url>/posts/53112.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>看了<a href="https://www.coolapk.com/feed/44220174?shareKey=Y2I4MWYyMGI4MjBiNjQxM2YxZDM~&amp;shareUid=3633462&amp;shareFrom=com.coolapk.market_10.5">yanbo92大佬的动态</a>二改的Magisk模块<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_32_heiha.png" alt="嘿哈" />自己想要其他图案样式可以参考大佬的动态改。<br />由于截屏接不到，下图是我ps的，可以看看效果<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_3_ciya.png" alt="呲牙" /><br />下载链接：<a href="https://iqn.lanzoub.com/iScB80qay5bc">下载</a><br />测试机型：红米k40s<br />设备系统：MIUI 13.2.5<br />安卓版本：安卓13<br />⚠️联发科CPU未经测试请不要使用，按道理应该兼容k40（未测试<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽" />)</p><p><img src="../images/posts/23031701.jpg" alt="23031701" /></p><blockquote><p>其他平台发布链接：[虽然有点丑<a href="https://www.coolapk.com/feed/44247570?shareKey=MDMwNDFkZWMxMmRjNjQ5OTI5NWY~&amp;shareUid=3633462&amp;shareFrom=com.coolapk.market_13.1.5">受虐滑稽]… 来自 NiseKana - 酷安 (coolapk.com)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Magisk模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Magisk </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小记录</title>
      <link href="/posts/53499.html"/>
      <url>/posts/53499.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>救命 awsl<br /><a href="https://www.coolapk.com/feed/44000662?shareKey=MzA5NWIwMjM1MmM3NjQwOTlmY2U~&amp;shareUid=3633462&amp;shareFrom=com.coolapk.market_10.5">查看链接</a><br />居然有人夸我温柔呜呜呜🥹<br /><img src="../images/posts/23030901.png" alt="萌系黑客会遇到物理panic吗" /></p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】关于VisualStudio中‘scanf’返回值被忽略的解决方法</title>
      <link href="/posts/16445.html"/>
      <url>/posts/16445.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在用VisualStudio初学c语言中，使用‘scanf’遇到了返回值被忽略的问题，上网摸索了一下找到了一下解决方法。</p><h1 id="原因"><a class="markdownIt-Anchor" href="#原因"></a> 原因</h1><p>在ANSI C中只有scanf()，没有scanf_s()，但是scanf()在读取时不检查边界，所以可能会造成内存泄漏。于是Microsoft公司在VS编译器中提供了scanf_s()，如果想继续使用scanf这个不安全的函数，可以通过以下方法解决。</p><h1 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h1><h3 id="方法1"><a class="markdownIt-Anchor" href="#方法1"></a> 方法①</h3><p><mark> 把<code>scanf</code> 改为 <code>scanf_s</code> </mark><br />在vs编译器中，scanf的值被重新定义了把<code>scanf</code> 改为 <code>scanf_s</code>即可决绝。但这种方法从在着一个问题，只能在vs中运行，其他编译器无法运行。</p><h3 id="方法2"><a class="markdownIt-Anchor" href="#方法2"></a> 方法②</h3><p><mark> 关闭安全检查 </mark><br />打开一个项目，在（项目—属性—C/C++—常规—SDL检查——选择否）或（项目—属性—C/C++—代码生成—安全检查——选择禁用安全检查）。</p><h3 id="方法3"><a class="markdownIt-Anchor" href="#方法3"></a> 方法③</h3><p><mark> 在C语言程序开头添加代码：<code>#pragma warning(disable:4996)</code> </mark><br />关闭<br /><mark> 在C语言程序开头添加代码：<code>#pragma warning(once:4996)</code> </mark><br />仅显示一个<br /><mark> 在C语言程序开头添加代码：<code>#define _CRT_SECURE_NO_WARNINGS</code> </mark><br />关闭安全检查</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】HTML学习笔记（三）</title>
      <link href="/posts/21700.html"/>
      <url>/posts/21700.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="表单"><a class="markdownIt-Anchor" href="#表单"></a> 表单：</h3><ul><li>在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。表单目的是为了收集用户信息。</li></ul><ol><li><p>表单域</p><ul><li>&lt;form&gt;&lt;/form&gt;表单域标签，它相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span>&gt;</span></span><br><span class="line">    各种表单控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>action</th><th>url地址</th><th>用于指定接收并处理表单数据的服务器程序的url地址。</th></tr></thead><tbody><tr><td>method</td><td>get/post</td><td>用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td>name</td><td>名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单。</td></tr></tbody></table></li><li><p>表单控件</p><ul><li>包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</li></ul><ol><li><p>&lt;input&gt;&lt;/input&gt;表单控件，在&lt;form&gt;&lt;/form&gt;标签内。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span> <span class="attr">value</span>=<span class="string">&quot;你好&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input 输入的意思</li><li>&lt;input /&gt;标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型</li><li>除了type属性还有别的属性</li></ul><p>type 属性值</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>text</td><td>单行文本输入框</td></tr><tr><td>password</td><td>密码输入框</td></tr><tr><td>radio</td><td>单选按钮  可多选</td></tr><tr><td>checkbox</td><td>复选框  多选框</td></tr><tr><td>button</td><td>普通按钮</td></tr><tr><td>submit</td><td>提交按钮  提交数据</td></tr><tr><td>reset</td><td>重置按钮  清除数据</td></tr><tr><td>image</td><td>图像形式的提交按钮</td></tr><tr><td>file</td><td>文件域</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别：男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> 女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：一<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;一&quot;</span>&gt;</span> 二<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;二&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取验证码&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="comment">&lt;!--普通按钮--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="comment">&lt;!--提交表单数据--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="comment">&lt;!--清除表单数据--&gt;</span></span><br><span class="line">    上传图片<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="comment">&lt;!--文件域，上传文件使用--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>value 默认的文本值。有些表单想刚打开页面就默认显示几个文字，就可以通过这个value 来设置。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure><ul><li>name表单的名字， 这样，后台可以通过这个name属性找到这个表单。 页面中的表单很多，name主要作用就是用于区别不同的表单。</li><li>name属性后面的值，是我们自己定义的。</li><li>radio  如果是一组，我们必须给他们命名相同的名字 name   这样就可以多个选其中的一个啦。</li><li>name属性，我们现在用的较少，但是，当我们学ajax 和后台的时候，是必须的。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><ul><li>checked属性，表示默认选中状态。 较常见于 单选按钮和复选按钮。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性    别:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> /&gt;</span>女 </span><br></pre></td></tr></table></figure><ul><li>maxlength属性，正整数，控件允许输入的最多字符数。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input 属性小结</li></ul><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">说明</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">type</td><td style="text-align:left">表单类型</td><td style="text-align:left">用来指定不同的控件类型</td></tr><tr><td style="text-align:left">value</td><td style="text-align:left">表单值</td><td style="text-align:left">表单里面默认显示的文本</td></tr><tr><td style="text-align:left">name</td><td style="text-align:left">表单名字</td><td style="text-align:left">页面中的表单很多，name主要作用就是用于区别不同的表单。</td></tr><tr><td style="text-align:left">checked</td><td style="text-align:left">默认选中</td><td style="text-align:left">表示那个单选或者复选按钮一开始就被选中了</td></tr><tr><td style="text-align:left">maxlength</td><td style="text-align:left">允许输入的字符数</td><td style="text-align:left">用来控制密码等控件允许输入的最多字符数</td></tr></tbody></table><p>label标签</p><ul><li>label 标签为 input 元素定义标注（标签）用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点。</li><li>第一种用法就是用label标签直接包含input表单， 适合单个表单选择。</li><li>第二种用法 for 属性规定 label 与哪个表单元素绑定(通过id)。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">第一种</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span> 用户名： </span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">第二种</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>select下拉列表</p><ul><li><p>如果有多个选项让用户选择，为了节约空间，我们可以使用select控件定义下拉列表。</p></li><li><p>在option 中定义selected =&quot; selected &quot;时，当前项即为默认选中项。</p></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">选项：</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span> =<span class="string">&quot;selected&quot;</span>&gt;</span>答案一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span>&gt;</span>答案二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span>&gt;</span>答案三<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>label标签<ul><li>通过textarea控件可以轻松地创建多行文本输入框。</li><li>cols=“每行中的字符数” rows=“显示的行数”  我们实际开发不用。</li><li>默认内容直接写在标签中间。</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cows</span>=<span class="string">&quot;50&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line"> 文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记：</h3><blockquote><p>该笔记是看哔哩哔哩<a href="https://www.bilibili.com/video/av80149248?p=1">pink老师</a>HTML入门视频所写，请经过<a href="https://nisekana.github.io/">Nisekana</a>允许后转裁，禁止用于商业用途。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】HTML学习笔记（二）</title>
      <link href="/posts/22717.html"/>
      <url>/posts/22717.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="html表格标签"><a class="markdownIt-Anchor" href="#html表格标签"></a> HTML表格标签：</h2><h4 id="表格标签"><a class="markdownIt-Anchor" href="#表格标签"></a> 表格标签：</h4><ol><li><p>表格的基本语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>第一列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    ···</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&lt;table&gt;&lt;/table&gt;：定义表格的标签。</p><p>&lt;caption&gt;：表格标题。caption 标签必须紧随 table 标签之后，通常这个标题会被居中且显示于表格之上。</p><p>&lt;tr&gt;&lt;/tr&gt;：用于定义表格的行，必须嵌套在&lt;table&gt;&lt;/table&gt;标签中。</p><p>&lt;th&gt;&lt;/th&gt;：表头单元格，会加粗居中显示，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中。</p><p>&lt;tb&gt;&lt;/tb&gt;：用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中。</p><p>&lt;td&gt;&lt;/td&gt;：指表格数据（table data），即数据单元格的内容。</p></li><li><p>表格属性</p><ul><li>写在表格标签&lt;table&gt;&lt;/table&gt;中。</li><li>可以省略，在css中设置。</li></ul><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">属性值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">align</td><td style="text-align:center">align=“left，center，right”</td><td style="text-align:center">表格在网页中的对齐方式</td></tr><tr><td style="text-align:center">border</td><td style="text-align:center">border=“0”(无边框)</td><td style="text-align:center">设置表格的边框</td></tr><tr><td style="text-align:center">width</td><td style="text-align:center">width=“500”</td><td style="text-align:center">设置表格的宽度</td></tr><tr><td style="text-align:center">height</td><td style="text-align:center">height=“500”</td><td style="text-align:center">设置表格的高度</td></tr><tr><td style="text-align:center">cellspacing</td><td style="text-align:center">cellspacing=“0”</td><td style="text-align:center">设置单元格与单元格之间的间距</td></tr><tr><td style="text-align:center">cellpadding</td><td style="text-align:center">cellpadding=“0”</td><td style="text-align:center">设置单元格内容与单元格边框之间的间距</td></tr></tbody></table></li><li><p>表格划分结构</p><ul><li><p>写在表格标签&lt;table&gt;&lt;/table&gt;中。</p></li><li><p>将表格分割成三个部分：题头、正文和脚注。而这三部分分别用:thead,tbody,tfoot来标注， 这样更好的分清表格结构。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span> <span class="comment">&lt;!--用于定义表格的头部,用来放标题之类的东西,内部必须拥有&lt;tr&gt; 标签！--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>第一列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span> <span class="comment">&lt;!--用于定义表格的主体。放数据本体--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span>这是表格的脚注<span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&lt;thead&gt;&lt;/thead&gt;：用于定义表格的头部。用来放标题之类的东西。&lt;thead&gt; 内部必须拥有&lt;tr&gt; 标签！</p><p>&lt;tbody&gt;&lt;/tbody&gt;：用于定义表格的主体。放数据本体 。</p><p>&lt;tfoot&gt;&lt;/tfoot&gt;：放表格的脚注之类。</p></li><li><p>合并单元格</p><ul><li><p>合并的顺序我们按照  先上 后下，先左  后右 的顺序 。</p></li><li><p>合并完之后需要删除多余的单元格。</p></li><li><p>跨行合并：rowspan=“合并单元格的个数”</p></li><li><p>跨列合并：colspan=“合并单元格的个数”</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>第一列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>第二跨列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>第二行的第一跨行格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span>这是表格的脚注<span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="列表标签"><a class="markdownIt-Anchor" href="#列表标签"></a> 列表标签：</h4><ul><li>容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表。</li></ul><ol><li><p>无序列表</p><ul><li>&lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字的做法是不被允许的。</li><li>&lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    ···</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>有序列表</p><ul><li><p>&lt;ol&gt;标签中的type属性值为排序的序列号，不添加type属性时，有序列表默认从数字1开始排序。</p></li><li><p>常用的type属性值分别为是1，a，A，i，I</p></li><li><p>&lt;ol reversed=“reversed”&gt;中的reversed属性能够让有序列表中的序列倒序排列。</p></li><li><p>&lt;ol start=“3”&gt;中的start属性值为3，有序列表中的第一个序列号将从3开始排列。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>自定义列表</p><ul><li><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。</p></li><li><p>&lt;dl&gt;为自定义列表标签。且&lt;dl&gt;&lt;/dl&gt;中只能嵌套&lt;dt&gt;&lt;/dt&gt;和&lt;dd&gt;&lt;/dd&gt;。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">...   </span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记：</h2><blockquote><p>该笔记是看哔哩哔哩<a href="https://www.bilibili.com/video/av80149248?p=1">pink老师</a>HTML入门视频所写，请经过<a href="https://nisekana.github.io">Nisekana</a>允许后转裁，禁止用于商业用途。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】HTML学习笔记（一）</title>
      <link href="/posts/51399.html"/>
      <url>/posts/51399.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="什么是html"><a class="markdownIt-Anchor" href="#什么是html"></a> 什么是HTML：</h2><ul><li><p>HTML：(Hyper Text Markup Language) 超文本标记语言。</p></li><li><p>可以加入图片、声音、动画、多媒体、链接等内容（超越文本限制 ）。</p></li></ul><h2 id="html基本架构"><a class="markdownIt-Anchor" href="#html基本架构"></a> HTML基本架构：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> <span class="comment">&lt;!--文档类型声明--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> <span class="comment">&lt;!--根标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span> <span class="comment">&lt;!--语言--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> <span class="comment">&lt;!--头部标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> <span class="comment">&lt;!--utf-8编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>这是一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span> <span class="comment">&lt;!--网页标题--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> <span class="comment">&lt;!--文本主题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第二个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="html常用标签"><a class="markdownIt-Anchor" href="#html常用标签"></a> HTML常用标签：</h2><h4 id="标题标签"><a class="markdownIt-Anchor" href="#标题标签"></a> 标题标签:</h4><p>&lt;h1&gt; - &lt;h6&gt; 共六级。每个标题独占一行。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">、···</span><br></pre></td></tr></table></figure><h4 id="段落和换行标签"><a class="markdownIt-Anchor" href="#段落和换行标签"></a> 段落和换行标签：</h4><p>&lt;p&gt; - &lt;/p&gt;，&lt;br /&gt;。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">段落标签：</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">换行标签：</span><br><span class="line">这是一个换行标签<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="文本格式标签"><a class="markdownIt-Anchor" href="#文本格式标签"></a> 文本格式标签：</h4><p>突出强调文字。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="分区布局标签"><a class="markdownIt-Anchor" href="#分区布局标签"></a> 分区布局标签：</h4><p>&lt;div&gt;和&lt;span&gt;</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>布局标签，一行只能放一个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>布局标签，一行可以放多个<span class="tag">&lt;/<span class="name">sapn</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="图像标签和路径"><a class="markdownIt-Anchor" href="#图像标签和路径"></a> 图像标签和路径：</h4><ol><li>图像标签</li></ol>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片标题&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片标题&quot;</span> <span class="attr">widt</span>=<span class="string">&quot;22&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片标题&quot;</span> <span class="attr">height</span>=<span class="string">&quot;33&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片标题&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>src：图像路径，图像的相对路径，必须写。</p><p>alt：替换文本 ，当图像显示不出来时显示文本替换。</p><p>title：图像标题，当光标移动在图像上时显示图像标题。</p><p>widt：图像宽度。</p><p>height：图像高度。</p><p>border:图像边框。</p><p>图像标签注意事项：</p><ul><li><p>图像标签可以使用多个属性，必须写在标签名的后面。</p></li><li><p>属性之间不分顺序，之间要用空格分开。</p></li><li><p>属性采取键值对的格式，key= &quot;value&quot;格式。</p></li></ul><ol start="2"><li>路径</li></ol><p>同级路径：图像和html文件在同一目录。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>相对路径：图像相对于html文件的位置。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/img.jpg&quot;</span>/&gt;</span> <span class="comment">&lt;!--下一级路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../img.jpg&quot;</span>/&gt;</span> <span class="comment">&lt;!--上级路径--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="超链接标签"><a class="markdownIt-Anchor" href="#超链接标签"></a> 超链接标签：</h4><ol><li>语法格式</li></ol>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接地址&quot;</span> <span class="attr">target</span>=<span class="string">&quot;打开方式&quot;</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>href：链接地址，必须有。</p><p>target：打开页面方式。_self：默认值  在当前页面打开，_blank ：在新窗口打开。</p><ol start="2"><li>链接分类</li></ol><ul><li>外部链接：网站外的链接。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://nisekana.github.io&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>NiseKanaの巣<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>内部链接：网站内部页面之间的相互链接。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;nisekana.github.io.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>NiseKanaの巣<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--nisekana.github.io.html与当前页面在同级路径--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>空链接：#</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>NiseKanaの巣<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>下载链接：地址链接是zip等压缩包形式。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img.zip&quot;</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>元素链接：网页中的各种元素。如文本，图像，表格，音频，视频等添加超链接。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://nisekana.github.io&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;NiseKanaの巣.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>锚点链接：点击链接时快速定位到页面中锚点的位置。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#233&quot;</span>&gt;</span>点击快速定位<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--href的值加#号，#号后加id属性--&gt;</span></span><br><span class="line">&lt;id=&quot;233&quot;&gt;这是一个锚点<span class="tag">&lt;/<span class="name">id</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span>  //单独添加</span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;233&quot;</span>&gt;</span>这是一个描点<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>  //在标题中添加</span><br></pre></td></tr></table></figure><h4 id="注释标签"><a class="markdownIt-Anchor" href="#注释标签"></a> 注释标签：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--这是一个注释标签--&gt;</span>，快捷键：CTRL+/。</span><br></pre></td></tr></table></figure><h2 id="特殊字符"><a class="markdownIt-Anchor" href="#特殊字符"></a> 特殊字符：</h2><table><thead><tr><th style="text-align:center">特殊字符</th><th style="text-align:center">描述</th><th style="text-align:center">代码</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">空格</td><td style="text-align:center">&amp;nbsp;</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td><td style="text-align:center">&amp;lt;</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">大于</td><td style="text-align:center">&amp;gt;</td></tr><tr><td style="text-align:center">&amp;</td><td style="text-align:center">和号</td><td style="text-align:center">&amp;amp;</td></tr><tr><td style="text-align:center">￥</td><td style="text-align:center">人民币</td><td style="text-align:center">&amp;yen;</td></tr><tr><td style="text-align:center">©</td><td style="text-align:center">版权</td><td style="text-align:center">&amp;copy;</td></tr><tr><td style="text-align:center">®</td><td style="text-align:center">商标</td><td style="text-align:center">&amp;reg;</td></tr><tr><td style="text-align:center">°</td><td style="text-align:center">摄氏度</td><td style="text-align:center">&amp;deg;</td></tr><tr><td style="text-align:center">²</td><td style="text-align:center">上标号</td><td style="text-align:center">&amp;sup2;</td></tr></tbody></table><h2 id="写html代码时应注意什么"><a class="markdownIt-Anchor" href="#写html代码时应注意什么"></a> 写HTML代码时应注意什么：</h2><ul><li><p>尽可能少的使用无语义的标签div和span。</p></li><li><p>在语义不明显时，既可以使用div或者p时，尽量用p, 因为p在默认情况下有上下间距，对兼容特殊终端有利。</p></li><li><p>不要使用纯样式标签，如：b、font、u等，改用css设置。</p></li><li><p>需要强调的文本，可以包含在strong或者em标签中（浏览器预设样式，能用CSS指定就不用他们），strong默认样式是加粗（不要用b），em是斜体（不用i）。</p></li><li><p>使用表格时，标题要用caption，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td。</p></li><li><p>表单域要用fieldset标签包起来，并用legend标签说明表单的用途。</p></li><li><p>每个input标签对应的说明文本都需要使用label标签，并且通过为input设置id属性，在lable标签中设置for来让说明文本和相对应的input关联起来。</p></li></ul><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记：</h2><blockquote><p>该笔记是看哔哩哔哩<a href="https://www.bilibili.com/video/av80149248?p=1">pink老师</a>HTML入门视频所写，请经过<a href="https://nisekana.github.io">Nisekana</a>允许后转裁，禁止用于商业用途。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多邻国连胜365天记录</title>
      <link href="/posts/32408.html"/>
      <url>/posts/32408.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>多邻国连胜365天了，就在这里悄悄的记录一下吧ヾ(≧▽≦*)o（好耶ヽ(✿ﾟ▽ﾟ)ノ！<br /><img src="../images/posts/23021401.png" alt="多邻国连胜365天" /></p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】电视优化分享</title>
      <link href="/posts/45214.html"/>
      <url>/posts/45214.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面：</h1><p>这几天闲的没事干，准备看看电视§(<em>￣▽￣</em>)§，发现已经被广告占领╰（‵□′）╯，开机广告 首页弹窗广告 屏保广告 看视频前的的广告…。离谱的是看一个本地视频也有弹窗广告？？？，正好趁这时间吧电视优化一下。电视配置下如图，已经是非常的伊拉克了(ノへ￣、)，0.5+8G  双核1.6GHz的CPU   安卓4.4 720P屏幕  可以说营运商送的电视盒子都比这个配置高(＠_＠😉。</p><p><img src="../images/posts/23020402.jpg" alt="上古配置的电视¯(°_o)/¯" /></p><h1 id="优化思路"><a class="markdownIt-Anchor" href="#优化思路"></a> 优化思路：</h1><p>优化方向大致梳理一下：</p><ul><li><p>冻结/卸载无用APP，保持电视有足够的运行和存储空间。</p></li><li><p>换一个清爽一点的桌面，原来的桌面是瀑布流形式，基本上全是VIP推广，广告等。</p></li><li><p>替换/修改广告文件，可以去除开机广告等（root）。</p></li></ul><h1 id="开始优化"><a class="markdownIt-Anchor" href="#开始优化"></a> 开始优化：</h1><h2 id="冻结卸载应用软件"><a class="markdownIt-Anchor" href="#冻结卸载应用软件"></a> 冻结/卸载应用软件</h2><p>最先想到的就是wifiadb，不用修改系统就能冻结应用。在设置看了一圈没有找到版本号什么隐藏接口，于是安装 <a href="http://www.coolapk.com/apk/com.x7890.shortcutcreator">【创建快捷方式】</a> 找到设置的活动点击，成功进入&quot;设置&quot;。</p><p><img src="../images/posts/23020403.jpg" alt="电视的原生设置" /></p><p>快速点击版本号即可开启开发者设置。</p><p><img src="../images/posts/23020404.jpg" alt="原生设置的开发者选项" /></p><p>很遗憾，没有wifi adb，也对 这才安卓4.4。</p><p>既然不能adb就只能root了下载360root 安装 成功root!可用自带的冷藏室来冻结无用app。</p><p><img src="../images/posts/23020405.jpg" alt="360root" /></p><p>像一些自带的无用app、 bug 日志收集app、 广告app、 系统升级，这些东西全部冻结当然要根据实际情况自己决定。（冻结前请百度自己的电视型号，看看有没有优化教程，以免冻结系统进程卡开机）</p><p>这里推荐个冻结软件<a href="https://iqn.lanzoub.com/iiKm001qy7kj">FreezeYOU-冻住你</a>密码：cn08，支持安卓4~9.0，可用遥控器操作，要root!</p><p><img src="../images/posts/23020406.jpg" alt="FreezeYou" /></p><p>也可以用re管理器在：根目录/system/app路径直接删除app，最好先复制再删除以免出现不必要的麻烦。</p><p><img src="../images/posts/23020407.jpg" alt="在这个目录下/system/app" /></p><h2 id="换一个清爽一点的桌面"><a class="markdownIt-Anchor" href="#换一个清爽一点的桌面"></a> 换一个清爽一点的桌面</h2><p>一定要先安装新桌面再冻结原来的桌面，否则就会变大黑板，如果你的电视配置好我推荐当贝桌面4.0去广版。颜值高，还有高斯模糊。不好的话每次进出软件的时候桌面就会重新加载。</p><p><img src="../images/posts/23020408.jpg" alt="当贝桌面" /></p><p>由于这辣鸡电视设置没有单独的APP入口，是从主屏幕应用调相关的API接口来设置。导致其他启动器无法打开设置。所以要设置好相关内容后冻结桌面。</p><h2 id="替换修改广告文件"><a class="markdownIt-Anchor" href="#替换修改广告文件"></a> 替换/修改广告文件</h2><p>可以先百度&quot;电视名字+去广告&quot;看看例案，系统不一样方法就这里也不好讲。</p><p>想花里胡哨的还可以改开机动画，把开机广告替换成自己喜欢的图片视频，开机动画和手机一样都是在/system/media/bootanimation.zip里，由于系统不能自定义壁纸，随便就加了一些壁纸，没想到没鸟用，桌面还是原来样子。</p><p><img src="../images/posts/23020409.jpg" alt="换了些壁纸" /></p><p>改完一定要把360毒瘤删了用的时候再下回来。那家伙太占内存和CPU了，而且还把自己弄成系统应用。</p><p><img src="../images/posts/23020410.jpg" alt="占用97%的内存" /></p><p><img src="../images/posts/23020411.jpg" alt="后台一直运行着" /></p><h1 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后：</h1><p>最后还发现了一个好玩的——自带的<a href="https://iqn.lanzoub.com/iMV0n01t4xsb">投屏</a> 密码：asdf，没想到它是一个APP。提取出来安装在手机上也能完美运行，可以屏幕镜像，视频投屏，只有10m。</p><p><img src="../images/posts/23020412.jpg" alt="电视上的投屏软件" /></p><blockquote><p>其他平台发布链接：<a href="https://www.coolapk.com/feed/34415405?shareKey=M2FmNDUzNTcxNjk1NjQ1OTBkZTU~">上古电视优化分享 来自 NiseKana - 酷安 (coolapk.com)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程·DIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 电视 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
