<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>「学习笔记」CSS基础</title>
      <link href="/posts/49965.html"/>
      <url>/posts/49965.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="学习笔记css基础"><a class="markdownIt-Anchor" href="#学习笔记css基础"></a> 「学习笔记」CSS基础</h1><p>原创 饭老板 [数据fan](javascript:void(0)😉 <em>2020-09-14 16:30</em></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bbR15tNSZ1yJyAEDlN79yVia3G1a50u7S6uToLgN9VCQiaoXYO2xXGFbA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><p><strong>「学习笔记」CSS基础</strong></p><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>拖延了一周的CSS学习笔记终于利用周末去补齐了，本篇文章着重梳理之前所学的CSS知识点，查漏补缺。同时，试着用git将重点案例存放到远程仓库中，更近一步贴近公司流程。💪💪</p><h2 id="css构造块"><a class="markdownIt-Anchor" href="#css构造块"></a> CSS构造块</h2><p><strong>「1. HTML的局限性」</strong></p><ul><li>HTML满足不了设计者的需求，可以将网页结构与样式相分离，这样就可以在不更改网页结构的前提下，更换网站的样式。</li><li>操作html属性不方便</li><li>HTML里面添加样式带来的是无尽的臃肿和繁琐</li></ul><p><strong>「2. CSS网页的美容师」</strong></p><ul><li>让我们的网页更加丰富多彩，布局更加灵活自如。</li><li>CSS最大的贡献：让HTML从样式中脱离，实现了HTML专注去做结构呈现，样式交给CSS</li></ul><p>**「3. CSS」**CSS(Cascading Style Sheets)通常称为CSS样式表或层叠样式表(级联样式表)。</p><ul><li><p><strong>作用</strong></p></li><li><ul><li>主要用于设置HTML页面中的文本内容(字体、大小、对齐方式等)\图片的外形(宽高、边框样式、边距等)以及版面的布局和外观显示样式。</li><li>CSS以HTML为基础，提供了丰富的功能，如字体、样式、背景的控制及整体排版等，而且可以针对不同的浏览器设置不同的样式。</li></ul></li></ul><p><strong>「4. CSS注释」</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 这是注释 */</span></span><br></pre></td></tr></table></figure><h3 id="引入css样式表"><a class="markdownIt-Anchor" href="#引入css样式表"></a> 引入CSS样式表</h3><p><strong>「1.行内式(内联样式)」</strong></p><p>通过标签的style属性来设置元素的样式</p><ul><li>style其实就是标签的属性</li><li>样式属性和值中间是:</li><li>多组属性值直接用;隔开</li><li>只能控制当前的标签和以及嵌套在其中的字标签，造成代码冗余。</li><li>**缺点:**没有实现样式和结构相分离。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 style=&quot;属性<span class="number">1</span>:属性值<span class="number">1</span>; 属性<span class="number">2</span>:属性值<span class="number">2</span>; 属性<span class="number">3</span>:属性值<span class="number">3</span>;&quot;&gt; 内容 &lt;/标签名&gt;</span><br><span class="line">例如：</span><br><span class="line">&lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">color</span>: red; <span class="attribute">font-size</span>: <span class="number">12px</span>;&quot;&gt;青春不常在，抓紧谈恋爱&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>「2.内部样式表(内嵌样式表)」</strong></p><p>也称为内嵌式，将CSS代码集中写在HTML文档的head头部标签中，并且用style标签定义。</p><ul><li>style标签一般位于head标签中，当然理论上他可以放在HTML文档的任何地方。</li><li>type=“text/css”  在html5中可以省略。</li><li>只能控制当前的页面</li><li>**缺点:**没有彻底分离结构与样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/CSS&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    选择器（选择的标签） &#123; </span></span><br><span class="line"><span class="language-css">      属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">      属性<span class="number">2</span>: 属性值<span class="number">2</span>; </span></span><br><span class="line"><span class="language-css">      属性<span class="number">3</span>: 属性值<span class="number">3</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>「3.外部样式表(外链式)」</strong></p><p>也称链入式，是将所有的样式放在一个或多个以.css为扩展名的外部样式表文件中，通过link标签将外部样式表文件链接到HTML文档中。</p><ul><li><code>rel</code>:定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件。</li><li><code>href</code>:定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>「4.团队约定-代码风格」</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.紧凑格式 (Compact)*/</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink;<span class="attribute">font-size</span>: <span class="number">20px</span>;&#125;</span><br><span class="line">// <span class="number">2</span>.一种是展开格式（推荐）</span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: deeppink;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 团队约定-代码大小写*/</span></span><br><span class="line"><span class="comment">/* 样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写。*/</span></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">h3</span>&#123;</span><br><span class="line"> <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">H3</span>&#123;</span><br><span class="line"> <span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="css基础选择器"><a class="markdownIt-Anchor" href="#css基础选择器"></a> CSS基础选择器</h2><h4 id="css选择器作用"><a class="markdownIt-Anchor" href="#css选择器作用"></a> CSS选择器作用</h4><p>找到指定的HTML页面元素，选择标签。</p><h3 id="css基础选择器-2"><a class="markdownIt-Anchor" href="#css基础选择器-2"></a> CSS基础选择器</h3><p><strong>「1. 标签选择器」</strong></p><ul><li>标签选择器（元素选择器）是指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。</li><li>作用：可以把某一类标签全部选择出来。</li><li>优点：快速为网页中同类型的标签统一样式</li><li>缺点：不能设计差异化样式。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标签名&#123;属性<span class="number">1</span>:属性值<span class="number">1</span>; 属性<span class="number">2</span>:属性值<span class="number">2</span>; 属性<span class="number">3</span>:属性值<span class="number">3</span>; &#125; </span><br></pre></td></tr></table></figure><p><strong>「2. 类选择器」</strong></p><ul><li>类选择器使用&quot;.&quot;(英文点号)进行标识，后面紧跟类名。</li><li>语法：类名选择器</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.类名  &#123;   </span><br><span class="line">    属性<span class="number">1</span>:属性值<span class="number">1</span>; </span><br><span class="line">    属性<span class="number">2</span>:属性值<span class="number">2</span>; </span><br><span class="line">    属性<span class="number">3</span>:属性值<span class="number">3</span>;     </span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&#x27;类名&#x27;&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><ul><li><p><code>优点</code>：可以为元素对象定义单独或相同的样式。可以选择一个或者多个标签。</p></li><li><p><code>注意</code>：类选择器使用“.”（英文点号）进行标识，后面紧跟类名(自定义，我们自己命名的)</p></li><li><ul><li>长名称或词组可以使用中横线来为选择器命名。</li><li>不要纯数字、中文等命名， 尽量使用英文字母来表示。</li><li>多类名选择器：各个类名中间用空格隔开。</li></ul></li></ul><p>**「3. id选择器」**id选择器使用<code>#</code>进行标识，后面紧跟id名</p><ul><li>元素的id值是唯一的，只能对应于文档中某一个具体的元素。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>名 &#123;属性<span class="number">1</span>:属性值<span class="number">1</span>; 属性<span class="number">2</span>:属性值<span class="number">2</span>; 属性<span class="number">3</span>:属性值<span class="number">3</span>; &#125;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;id名&quot;&gt;&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>「4. 通配符选择器」</strong></p><p>通配符选择器用<code>*</code>号表示，<code>*</code> 就是选择所有的标签。它是所有选择器中作用范围最广的，能匹配页面中所有的元素。</p><ul><li><code>注意</code>：会匹配页面所有的元素，降低页面响应速度，不建议随便使用</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* &#123; 属性<span class="number">1</span>:属性值<span class="number">1</span>; 属性<span class="number">2</span>:属性值<span class="number">2</span>; 属性<span class="number">3</span>:属性值<span class="number">3</span>; &#125;</span><br></pre></td></tr></table></figure><p>例如下面代码，使用通配符选择器定义CSS样式，清除所有HTML标记的默认边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;                    <span class="comment">/* 定义外边距*/</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;                   <span class="comment">/* 定义内边距*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>「5. 基础选择器总结」</strong></p><table><thead><tr><th style="text-align:left">选择器</th><th style="text-align:left">作用</th><th style="text-align:left">缺点</th><th style="text-align:left">使用情况</th><th style="text-align:left">用法</th></tr></thead><tbody><tr><td style="text-align:left">标签选择器</td><td style="text-align:left">可以选出所有相同的标签，比如p</td><td style="text-align:left">不能差异化选择</td><td style="text-align:left">较多</td><td style="text-align:left">p { color：red;}</td></tr><tr><td style="text-align:left">类选择器</td><td style="text-align:left">可以选出1个或者多个标签</td><td style="text-align:left">可以根据需求选择</td><td style="text-align:left">非常多</td><td style="text-align:left">.nav { color: red; }</td></tr><tr><td style="text-align:left">id选择器</td><td style="text-align:left">一次只能选择器1个标签</td><td style="text-align:left">只能使用一次</td><td style="text-align:left">不推荐使用</td><td style="text-align:left">#nav {color: red;}</td></tr><tr><td style="text-align:left">通配符选择器</td><td style="text-align:left">选择所有的标签</td><td style="text-align:left">选择的太多，有部分不需要</td><td style="text-align:left">不推荐使用</td><td style="text-align:left">* {color: red;}</td></tr></tbody></table><p><strong>「6. 团队约定-选择器」</strong></p><ol><li>尽量少用通配符选择器 <code>*</code>。</li><li>尽量少用ID选择器</li><li>不使用无具体语义定义的标签选择器。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/* 推荐 */</span><br><span class="line">.jdc &#123;&#125;</span><br><span class="line">li &#123;&#125;</span><br><span class="line">p&#123;&#125;</span><br><span class="line"></span><br><span class="line">/* 不推荐 */</span><br><span class="line">*&#123;&#125;</span><br><span class="line">#jdc &#123;&#125;</span><br><span class="line">div&#123;&#125;   因为div 没有语义，我们尽量少用</span><br></pre></td></tr></table></figure><h3 id="css复合选择器"><a class="markdownIt-Anchor" href="#css复合选择器"></a> CSS复合选择器</h3><p>复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的</p><p>**「1. 后代选择器」**又称为包含选择器</p><ul><li>用来选择元素或元素组的子孙后代</li><li>其写法就是把外层标签写在前面，内层标签写在后面，中间用**「空格」**分隔，先写父亲爷爷，再写儿子孙子。</li><li>子孙后代都可以这么选择。或者说，它能选择任何包含在内 的标签。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">父级 子级&#123;属性:属性值;属性:属性值;&#125;</span><br><span class="line"></span><br><span class="line">.class h3 &#123;color:red;font-size:16px;&#125;</span><br></pre></td></tr></table></figure><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bc5pD3YIogL5EiblDcricNvp6WyicAjicIpxYbofDTPe7T66Q4Em2ibpQ8Fg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><ul><li>当标签发生嵌套时，内层标签就成为外层标签的后代。</li><li>子孙后代都可以这么选择。或者说，它能选择任何包含在内的标签。</li></ul><p><strong>「2. 子元素选择器」</strong></p><ul><li>子元素选择器只能选择作为某元素子元素(亲儿子)的元素。</li><li>其写法就是把父级标签写在前面，子级标签写在后面，中间跟一个 <code>&gt;</code> 进行连接</li><li>这里的子,指的是亲儿子。不包含孙子 重孙子之类。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.class&gt;h3 &#123;color:red;font-size:14px;&#125;</span><br></pre></td></tr></table></figure><p><strong>「3. 交集选择器」</strong></p><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bmB0Isp6lqsECib7wFZAo47SADSs6OZCgnjwsvJUnPRMBS6s1iamibZKYw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><ul><li>其中第一个为标签选择器，第二个为class选择器，两个选择器之间<code>不能有空格</code>，如h3.special。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">交集选择器是并且的意思,即...又...的意思</span><br><span class="line">比如：   p.one   选择的是： 类名为 .one 的段落标签。 </span><br><span class="line">/*用的相对来说比较少，不建议使用。*/</span><br></pre></td></tr></table></figure><p>**「4. 并集选择器」**如果某些选择器定义的相同样式，就可以利用并集选择器，可以让代码更简洁。并集选择器（CSS选择器分组）是各个选择器通过<code>,</code>连接而成的，通常用于集体声明。</p><ul><li>任何形式的选择器（包括标签选择器、class类选择器 id选择器等），都可以作为并集选择器的一部分。</li><li>并集选择器通常用于集体声明 ，逗号隔开的，所有选择器都会执行后面样式，逗号可以理解为和的意思。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">比如  </span><br><span class="line">.one, </span><br><span class="line">p , </span><br><span class="line">#test &#123;color: #F00;&#125;  </span><br><span class="line">表示   .one 和 p  和 #test 这三个选择器都会执行颜色为红色。 </span><br><span class="line">通常用于集体声明。  </span><br></pre></td></tr></table></figure><p><strong>「5. 链接伪类选择器」</strong></p><p>用于向某些选择器添加特殊的效果。写的时候，他们的顺序尽量不要颠倒,按照lvha的顺序。否则可能引起错误。</p><p>链接伪类，是利用交集选择器.</p><ul><li><code>a:link</code> 未访问的链接</li><li><code>a:visited</code> 已访问的链接</li><li><code>a:hover</code> 鼠标移动到链接上</li><li><code>a:active</code> 选定的链接</li></ul><h5 id="实际工作中很少写全四个状态一般写法如下"><a class="markdownIt-Anchor" href="#实际工作中很少写全四个状态一般写法如下"></a> 实际工作中，很少写全四个状态，一般写法如下：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a &#123;   /* a是标签选择器  所有的链接 */</span><br><span class="line">   font-weight: 700;</span><br><span class="line">   font-size: 16px;</span><br><span class="line">   color: gray;</span><br><span class="line">      text-decoration: none; /* 清除链接默认的下划线*/</span><br><span class="line">&#125;</span><br><span class="line">a:hover &#123;   /* :hover 是链接伪类选择器 鼠标经过 */</span><br><span class="line">   color: red; /*  鼠标经过的时候，由原来的 灰色 变成了红色 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>「6. 复合选择器总结」</strong></p><table><thead><tr><th style="text-align:left">选择器</th><th style="text-align:left">作用</th><th style="text-align:left">特征</th><th style="text-align:left">使用情况</th><th style="text-align:left">隔开符号及用法</th></tr></thead><tbody><tr><td style="text-align:left">后代选择器</td><td style="text-align:left">用来选择元素后代</td><td style="text-align:left">是选择所有的子孙后代</td><td style="text-align:left">较多</td><td style="text-align:left">符号是<code>空格</code> .nav a</td></tr><tr><td style="text-align:left">子代选择器</td><td style="text-align:left">选择 最近一级元素</td><td style="text-align:left">只选亲儿子</td><td style="text-align:left">较少</td><td style="text-align:left">符号是<code>&gt;</code>  .nav&gt;p</td></tr><tr><td style="text-align:left">交集选择器</td><td style="text-align:left">选择两个标签交集的部分</td><td style="text-align:left">既是 又是</td><td style="text-align:left">较少</td><td style="text-align:left"><code>没有符号</code> p.one</td></tr><tr><td style="text-align:left">并集选择器</td><td style="text-align:left">选择某些相同样式的选择器</td><td style="text-align:left">可以用于集体声明</td><td style="text-align:left">较多</td><td style="text-align:left">符号是<code>逗号</code> .nav, .header</td></tr><tr><td style="text-align:left">链接伪类选择器</td><td style="text-align:left">给链接更改状态</td><td style="text-align:left"></td><td style="text-align:left">较多</td><td style="text-align:left">重点记住 a{} 和 a:hover  实际开发的写法</td></tr></tbody></table><hr /><h2 id="css字体样式"><a class="markdownIt-Anchor" href="#css字体样式"></a> CSS字体样式</h2><h3 id="font字体"><a class="markdownIt-Anchor" href="#font字体"></a> font字体</h3><p><strong>「1. font-size」</strong></p><ul><li>font-size属性用于设置字号(字体大小)</li><li><code>谷歌浏览器</code>默认的文字大小为16px</li><li>不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小。一般给body指定整个页面文字的大小。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p &#123; font-size:20px; &#125;</span><br></pre></td></tr></table></figure><h4 id="单位"><a class="markdownIt-Anchor" href="#单位"></a> 单位</h4><ul><li>相对长度单位、绝对长度单位</li></ul><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<strong>「2. font-family」</strong></p><ul><li>font-family属性用于设置哪一种字体。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p &#123; font-family:&quot;微软雅黑&quot;;&#125;</span><br></pre></td></tr></table></figure><ul><li>指定多个字体，如果浏览器不支持第一个字体就会尝试下一个直到找到合适的字体，如果都没有，以电脑默认字体为准。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p &#123;font-family: Arial,&quot;Microsoft Yahei&quot;, &quot;微软雅黑&quot;;&#125;</span><br></pre></td></tr></table></figure><ul><li><p>CSS Unicode字体</p></li><li><ul><li>在 CSS 中设置字体名称，直接写中文是可以的。但是在文件编码（GB2312、UTF-8 等）不匹配时会产生乱码的错误。</li><li>xp 系统不支持 类似微软雅黑的中文。</li><li>解决方案：英文来替代。比如<code>font-family:&quot;Microsoft Yahei&quot;</code>。在 CSS 直接使用 Unicode 编码来写字体名称可以避免这些错误。使用 Unicode 写中文字体名称，浏览器是可以正确的解析的。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-family: &quot;\5FAE\8F6F\96C5\9ED1&quot;;   表示设置字体为“微软雅黑”。</span><br></pre></td></tr></table></figure><p><strong>「3. font-weight」</strong></p><table><thead><tr><th style="text-align:left">属性值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">normal</td><td style="text-align:left">默认值（不加粗的）</td></tr><tr><td style="text-align:left">bold</td><td style="text-align:left">定义粗体（加粗的）</td></tr><tr><td style="text-align:left">100~900</td><td style="text-align:left">400 等同于 normal，而 700 等同于 bold  (数字表示粗细用的多)</td></tr></tbody></table><p><strong>「4. font-weight」</strong></p><p>font-style属性用于定义字体风格，如设置斜体、倾斜或正常字体，其可用属性值如下：</p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">normal</td><td style="text-align:left">默认值，浏览器会显示标准的字体样式  font-style: normal;</td></tr><tr><td style="text-align:left">italic</td><td style="text-align:left">浏览器会显示斜体的字体样式。</td></tr></tbody></table><p><strong>「5. font:综合设置字体样式」</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; font: font-style  font-weight  font-size/line-height  font-family;&#125;</span><br></pre></td></tr></table></figure><ul><li><p>注意：使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，各个属性以<code>空格</code>隔开</p></li><li><ul><li>其中不需要设置的属性可以省略(取默认值),但必须保留<code>font-size</code>和<code>font-family</code>属性，否则font属性将不起作用。</li></ul></li></ul><p><strong>「6. font总结」</strong></p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">表示</th><th style="text-align:left">注意点</th></tr></thead><tbody><tr><td style="text-align:left">font-size</td><td style="text-align:left">字号</td><td style="text-align:left">我们通常用的单位是px 像素，一定要跟上单位</td></tr><tr><td style="text-align:left">font-family</td><td style="text-align:left">字体</td><td style="text-align:left">实际工作中按照团队约定来写字体</td></tr><tr><td style="text-align:left">font-weight</td><td style="text-align:left">字体粗细</td><td style="text-align:left">记住加粗是 700 或者 bold  不加粗 是 normal 或者  400  记住数字不要跟单位</td></tr><tr><td style="text-align:left">font-style</td><td style="text-align:left">字体样式</td><td style="text-align:left">记住倾斜是 italic   不倾斜 是 normal  工作中我们最常用 normal</td></tr><tr><td style="text-align:left">font</td><td style="text-align:left">字体连写</td><td style="text-align:left">1. 字体连写是有顺序的  不能随意换位置 2. 其中字号 和 字体 必须同时出现</td></tr></tbody></table><h3 id="css外观属性"><a class="markdownIt-Anchor" href="#css外观属性"></a> CSS外观属性</h3><p><strong>「1. color」</strong></p><p>color属性用于定义文本的颜色<br />其取值方式有以下3种：</p><ul><li>实际工作中，用16进制的写法是最多的，且我们更喜欢简写方式比如#f0代表红色。</li></ul><table><thead><tr><th style="text-align:left">表示表示</th><th style="text-align:left">属性值</th></tr></thead><tbody><tr><td style="text-align:left">预定义的颜色值</td><td style="text-align:left">red，green，blue，pink</td></tr><tr><td style="text-align:left">十六进制</td><td style="text-align:left">#FF0000，#FF6600，#29D794</td></tr><tr><td style="text-align:left">RGB代码</td><td style="text-align:left">rgb(255,0,0)或rgb(100%,0%,0%)</td></tr></tbody></table><p><strong>「2.text-align」</strong></p><p>text-align属性用于设置文本内容的水平对齐方式，相当于html中的align对齐属性。</p><ul><li>注意：是让盒子里面的文本内容水平居中， 而不是让盒子居中对齐</li></ul><p>其可用属性值如下：</p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:left">left</td><td style="text-align:center">左对齐（默认值）</td></tr><tr><td style="text-align:left">right</td><td style="text-align:center">右对齐</td></tr><tr><td style="text-align:left">center</td><td style="text-align:center">居中对齐</td></tr></tbody></table><p>**「3. line-height」**line-height属性用于设置行间距，就是行与行之间的距离，即字符的垂直间距，一般称为行高。</p><ul><li>line-height常用的属性值单位有三种，分别为像素px，相对值em和百分比%，实际工作中使用最多的是像素px</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一般情况下，行距比字号大7--8像素左右就可以了。</span><br><span class="line">line-height: 24px;</span><br></pre></td></tr></table></figure><h4 id="行高测量"><a class="markdownIt-Anchor" href="#行高测量"></a> 行高测量</h4><p>行高测量方法：![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8by3wLntBYAKUH3BtI30w2gibNAia6Z8urlF5ibiarb5d8XwjsG7aFuF20TA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8b03vJ7gdfJaIXRQic9AWbA6fZDzfpHMiaxJLRn5zgFBMF34IbfaicVa8ew/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /><code>行高测量方法</code>行高我们利用最多的一个地方是：可以让单行文本在盒子中垂直居中对齐。</p><blockquote><p>**文字的行高等于盒子的高度。**行高  =  上距离 +  内容高度  + 下距离<br />上距离和下距离总是相等的，因此文字看上去是垂直居中的。</p></blockquote><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><h4 id="图片行高与高度的三种关系"><a class="markdownIt-Anchor" href="#图片行高与高度的三种关系"></a> <img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bbSzvLR65klr1DmvribcsxLj5nrxV8GettRKl6hethAHmZtO18nEULAw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" />行高与高度的三种关系</h4><ul><li>如果 行高 等 高度  文字会 垂直居中</li><li>如果行高 大于 高度  文字会 偏下</li><li>如果行高小于高度  文字会  偏上</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*line-height 要设置在font属性下面，否则无效，例如：*/</span><br><span class="line">height: 80px;</span><br><span class="line">text-align: center;</span><br><span class="line">font: normal bold 30px &quot;宋体&quot;;</span><br><span class="line">line-height: 80px;</span><br></pre></td></tr></table></figure><p>可以使用display:flex;布局方式让文字水平垂直居中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">display: flex;</span><br><span class="line">align-items: center;     /* 侧轴对齐方式*/</span><br><span class="line">justify-content: center; /* 主轴对齐方式 */</span><br></pre></td></tr></table></figure><p><strong>「4. text-indent」</strong></p><p>text-indent属性用于设置首行文本的缩进</p><ul><li>其属性值可为不同单位的数值、em字符宽度的倍数、或相对于浏览器窗口宽度的百分比%，允许使用负值。</li><li>建议使用em作为设置单位。</li><li>1em 就是一个字的宽度。如果是汉字的段落，1em 就是一个汉字的宽度</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">      /*行间距*/</span><br><span class="line">      line-height: 25px;</span><br><span class="line">      /*首行缩进2个字  em  1个em 就是1个字的大小*/</span><br><span class="line">      text-indent: 2em;  </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>**「5. text-decoration」**文本的装饰</p><p>text-decoration,通常我们用于给链接修改装饰效果</p><table><thead><tr><th style="text-align:left">值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">none</td><td style="text-align:left">默认。定义标准的文本。取消下划线（最常用）</td></tr><tr><td style="text-align:left">underline</td><td style="text-align:left">定义文本下的一条线。下划线 也是我们链接自带的（常用）</td></tr><tr><td style="text-align:left">overline</td><td style="text-align:left">定义文本上的一条线。（不用）</td></tr><tr><td style="text-align:left">line-through</td><td style="text-align:left">定义穿过文本下的一条线。（不常用）</td></tr></tbody></table><p><strong>「6. CSS外观属性总结」</strong></p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">表示</th><th style="text-align:left">注意点</th></tr></thead><tbody><tr><td style="text-align:left">color</td><td style="text-align:left">颜色</td><td style="text-align:left">我们通常用  十六进制  比如 而且是简写形式 #fff</td></tr><tr><td style="text-align:left">line-height</td><td style="text-align:left">行高</td><td style="text-align:left">控制行与行之间的距离</td></tr><tr><td style="text-align:left">text-align</td><td style="text-align:left">水平对齐</td><td style="text-align:left">可以设定文字水平的对齐方式</td></tr><tr><td style="text-align:left">text-indent</td><td style="text-align:left">首行缩进</td><td style="text-align:left">通常我们用于段落首行缩进2个字的距离  text-indent: 2em;</td></tr><tr><td style="text-align:left">text-decoration</td><td style="text-align:left">文本修饰</td><td style="text-align:left">记住 添加 下划线  underline  取消下划线  none</td></tr></tbody></table><hr /><h2 id="标签显示模式display"><a class="markdownIt-Anchor" href="#标签显示模式display"></a> 标签显示模式(display)</h2><p><code>标签显示模式</code>是标签以什么方式进行显示。HTML标签一般分为块标签和行内标签两种类型，它们也称为块元素和行内元素。</p><h4 id="标签显示模式转换-display"><a class="markdownIt-Anchor" href="#标签显示模式转换-display"></a> 标签显示模式转换 display</h4><ul><li>块转行内：display:inline;</li><li>行内转块：display:block;</li><li>块、行内元素转换为行内块：display: inline-block;</li></ul><p><strong>「1. 块级元素(block-level)」</strong></p><blockquote><p>常见的块元素有<h1>~<h6>、<p>、<div>、<ul>、<ol>、<li>等，其中<div>标签是最典型的块元素。</p></blockquote><ul><li><h5 id="块级元素的特点"><a class="markdownIt-Anchor" href="#块级元素的特点"></a> 块级元素的特点</h5></li><li><ul><li>独占一行</li><li>高度，宽度，外边距以及内边距都可以控制。</li><li>宽度默认是容器(父级宽度)的100%</li><li>是一个容器及盒子，里面可以放行内或者块级元素</li><li><strong>注意</strong>：只有文字才能组成段落，因此p标签里面不能放块级元素，特别是p不能放div。同理，还有h1~h6，dt,它们都是文字类块级标签，里面不能放其他块级元素。</li></ul></li></ul><p><strong>「2. 行内元素(inline-level)」</strong></p><blockquote><p>有的地方也称为<code>内联元素</code></p><p>常见的行内元素有<a>、<strong>、<b>、<em>、<i>、<del>、<s>、<ins>、<u>、<span>等，其中<span>标签最典型的行内元素。</p></blockquote><ul><li><h5 id="行内元素的特点"><a class="markdownIt-Anchor" href="#行内元素的特点"></a> 行内元素的特点</h5></li><li><ol><li>相邻行内元素在一行上，一行可以显示多个。</li><li>高度、宽度直接设置是无效的。</li><li>默认高度就是它本身内容的宽度。</li><li>行内元素只能容纳文本或其他行内元素。</li></ol></li></ul><h6 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h6><ul><li>链接里面不能再放链接</li><li>特殊情况a里面可以放块级元素，但是给a转换一下块级模式最安全。</li></ul><p><strong>「3. 行内块元素(inline-block)」</strong></p><blockquote><p>在行内元素中有几个特殊的标签——<img>、<input >、<td>，可以对它们设置宽高和对齐属性，有些资料可能会称它们为行内块元素。</p></blockquote><ul><li><p><strong>行内块元素的特点</strong></p></li><li><ol><li>和相邻行内元素(行内块)在一行上，但是之间会有空白风险。一行可以显示多个</li><li>默认宽度就是它本身内容的宽度。</li><li>高度，行高，外边距以及内边距都可以控制。</li></ol></li></ul><h4 id="三种模式总结"><a class="markdownIt-Anchor" href="#三种模式总结"></a> 三种模式总结</h4><table><thead><tr><th style="text-align:left">元素模式</th><th style="text-align:left">元素排列</th><th style="text-align:left">设置样式</th><th style="text-align:left">默认宽度</th><th style="text-align:left">包含</th></tr></thead><tbody><tr><td style="text-align:left">块级元素</td><td style="text-align:left">一行只能放一个块级元素</td><td style="text-align:left">可以设置宽度高度</td><td style="text-align:left">容器的100%</td><td style="text-align:left">容器级可以包含任何标签</td></tr><tr><td style="text-align:left">行内元素</td><td style="text-align:left">一行可以放多个行内元素</td><td style="text-align:left">不可以直接设置宽度高度</td><td style="text-align:left">它本身内容的宽度</td><td style="text-align:left">容纳文本或则其他行内元素</td></tr><tr><td style="text-align:left">行内块元素</td><td style="text-align:left">一行放多个行内块元素</td><td style="text-align:left">可以设置宽度和高度</td><td style="text-align:left">它本身内容的宽度</td><td style="text-align:left"></td></tr></tbody></table><hr /><h2 id="css背景background"><a class="markdownIt-Anchor" href="#css背景background"></a> CSS背景(background)</h2><p><strong>「1. 背景颜色」</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-color: 颜色值;   默认的值是 transparent  透明的</span><br></pre></td></tr></table></figure><p><strong>「2. 背景图片(image)」</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">background-image : none | url (url) ;</span><br><span class="line">例如:</span><br><span class="line">background-image: url(images/1.png);</span><br></pre></td></tr></table></figure><p><strong>「3. 背景平铺（repeat）」</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-repeat : repeat | no-repeat | repeat-x | repeat-y </span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:left">repeat</td><td style="text-align:center">背景图像在纵向和横向上平铺（默认的）</td></tr><tr><td style="text-align:left">no-repeat</td><td style="text-align:center">背景图像不平铺</td></tr><tr><td style="text-align:left">repeat-x</td><td style="text-align:center">背景图像在横向上平铺</td></tr><tr><td style="text-align:left">repeat-y</td><td style="text-align:center">背景图像在纵向平铺</td></tr></tbody></table><p><strong>「4. 背景位置(position)」</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">background-position : length || length</span><br><span class="line">background-position : position || position </span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:left">length</td><td style="text-align:center">百分数 | 由浮点数字和单位标识符组成的长度值</td></tr><tr><td style="text-align:left">position</td><td style="text-align:center">top | center | bottom | left | center | right  方位名词</td></tr></tbody></table><h4 id="注意-2"><a class="markdownIt-Anchor" href="#注意-2"></a> 注意：</h4><ul><li>必须先指定background-image属性</li><li>position 后面是x坐标和y坐标。可以使用方位名词或者 精确单位。</li><li>如果指定两个值，两个值都是方位名字，则两个值前后顺序无关，比如left  top和top  left效果一致</li><li>如果只指定了一个方位名词，另一个值默认居中对齐。</li><li>如果position 后面是精确坐标， 那么第一个，肯定是 x 第二个一定是y</li><li>如果只指定一个数值,那该数值一定是x坐标，另一个默认垂直居中</li><li>如果指定的两个值是 精确单位和方位名字混合使用，则第一个值是x坐标，第二个值是y坐标</li></ul><h4 id="背景简写"><a class="markdownIt-Anchor" href="#背景简写"></a> 背景简写：</h4><ul><li>background：属性的值的书写顺序官方没有强制的标准。为了可读性，建议如下写：</li><li>background: 背景颜色 背景图片地址 背景平铺 背景滚动 背景位置;</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/* 有背景图片背景颜色可以不用写*/</span><br><span class="line">background: transparent url(image.jpg) repeat-y  scroll center top ;</span><br></pre></td></tr></table></figure><p><strong>「5. 背景半透明(CSS3)」</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(0, 0, 0, 0.3);</span><br><span class="line">background: rgba(0, 0, 0, .3);</span><br></pre></td></tr></table></figure><ul><li>等同于background-color: rgba(0, 0, 0, .3)</li><li>最后一个参数是alpha 透明度 取值范围 0~1之间</li><li>我们习惯把0.3 的 0 省略掉 这样写 background: rgba(0, 0, 0, .3);</li><li>注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响</li><li>低于IE 9的版本不支持</li></ul><h5 id="盒子半透明-opacity"><a class="markdownIt-Anchor" href="#盒子半透明-opacity"></a> 盒子半透明 opacity</h5><ul><li>设置opacity元素的所有后代元素会随着一起具有透明性，一般用于调整图片或者模块的整体不透明度</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opacity: .2;</span><br></pre></td></tr></table></figure><p><strong>「6. 背景总结」</strong></p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">作用</th><th style="text-align:left">值</th></tr></thead><tbody><tr><td style="text-align:left">background-color</td><td style="text-align:left">背景颜色</td><td style="text-align:left">预定义的颜色值/十六进制/RGB代码</td></tr><tr><td style="text-align:left">background-image</td><td style="text-align:left">背景图片</td><td style="text-align:left">url(图片路径)</td></tr><tr><td style="text-align:left">background-repeat</td><td style="text-align:left">是否平铺</td><td style="text-align:left">repeat/no-repeat/repeat-x/repeat-y</td></tr><tr><td style="text-align:left">background-position</td><td style="text-align:left">背景位置</td><td style="text-align:left">length/position   分别是x  和 y坐标， 切记 如果有 精确数值单位，则必须按照先X 后Y 的写法</td></tr><tr><td style="text-align:left">background-attachment</td><td style="text-align:left">背景固定还是滚动</td><td style="text-align:left">scroll/fixed</td></tr><tr><td style="text-align:left">背景简写</td><td style="text-align:left">更简单</td><td style="text-align:left">背景颜色 背景图片地址 背景平铺 背景滚动 背景位置;  他们没有顺序</td></tr><tr><td style="text-align:left">背景透明</td><td style="text-align:left">让盒子半透明</td><td style="text-align:left">background: rgba(0,0,0,0.3);  后面必须是 4个值</td></tr></tbody></table><hr /><h2 id="css三大特性"><a class="markdownIt-Anchor" href="#css三大特性"></a> CSS三大特性</h2><p><strong>「1. CSS 层叠性」</strong></p><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bMdc6UDuvyOoic6olvqFUm4ug4lWznfZfhN6vVtE9LUtKr5zQk5EgtYw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><p>-<code>概念</code>：</p><ul><li>所谓层叠性是指多种CSS样式的叠加</li><li>是浏览器处理冲突的一个能力,如果一个属性通过两个相同选择器设置到同一个元素上，那么这个时候一个属性就会将另一个属性层叠掉</li></ul><p>-<code>原则</code>：</p><ul><li>样式冲突，遵循的原则是就近原则。 那个样式离着结构近，就执行那个样式。</li><li>样式不冲突，不会层叠。</li></ul><p><strong>「2. CSS 继承性」<img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bQ0WCHTI80JbCGUSnPJQvvvFvaUjGLIY7phiacwicpcPiaBunJewuXOdIg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></strong></p><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)-<code>概念</code>：</p><ul><li>子标签会继承父标签的某些样式，如文本颜色和字号。</li><li>想要设置一个可继承的属性，只需将它应用于父元素即可。</li></ul><p>-<code>注意</code>：</p><ul><li>恰当地使用继承可以简化代码，降低CSS样式的复杂性。比如有很多子级孩子都需要某个样式，可以给父级指定一个，这些孩子继承过来就好了。</li><li>子元素可以继承父元素的样式（<strong>text-，font-，line-这些元素开头的可以继承，以及color属性</strong>）</li></ul><p><strong>「3. CSS 优先级(CSS特殊性)」<img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bYhyc8Ticia3dGdKSsOkKbQRmkpsy6rS4nZmJG2ibvK6yfGcqeBbZYGyibw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></strong></p><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)-<code>概念</code>：定义CSS样式时，经常出现两个或更多规则应用在同一元素上，此时，</p><ul><li>选择器相同，则执行层叠性</li><li>选择器不同，就会出现优先级的问题。</li></ul><p>-<code>权重计算公式</code>：</p><table><thead><tr><th style="text-align:left">标签选择器</th><th style="text-align:left">计算权重公式</th></tr></thead><tbody><tr><td style="text-align:left">继承或者 *</td><td style="text-align:left">0,0,0,0</td></tr><tr><td style="text-align:left">每个元素（标签选择器）</td><td style="text-align:left">0,0,0,1</td></tr><tr><td style="text-align:left">每个类，伪类</td><td style="text-align:left">0,0,1,0</td></tr><tr><td style="text-align:left">每个ID</td><td style="text-align:left">0,1,0,0</td></tr><tr><td style="text-align:left">每个行内样式 style=&quot;&quot;</td><td style="text-align:left">1,0,0,0</td></tr><tr><td style="text-align:left">每个!important  最重要的</td><td style="text-align:left">∞ 无穷大</td></tr></tbody></table><ul><li>值从左到右，左面的最大，一级大于一级，数位之间没有进制，级别之间不可超越。</li><li>关于CSS权重，我们需要一套计算公式来去计算，这个就是 CSS Specificity（特殊性）</li><li>div { color: pink !important; }</li></ul><p>-<code>权重叠加</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">div ul  li   ------&gt;      0,0,0,3</span><br><span class="line">.nav ul li   ------&gt;      0,0,1,2</span><br><span class="line">a:hover      -----—&gt;      0,0,1,1</span><br><span class="line">.nav a       ------&gt;      0,0,1,1</span><br></pre></td></tr></table></figure><p>-<code>继承的权重是0</code>：</p><ul><li>我们修改样式，一定要看该标签有没有被选中</li><li>如果选中了，那么以上面的公式来计权重。谁大听谁的。</li><li>如果没有选中，那么权重是0，因为继承的权重为0.</li></ul><hr /><h2 id="盒子模型"><a class="markdownIt-Anchor" href="#盒子模型"></a> 盒子模型</h2><p>css学习三大重点： css 盒子模型 、 浮动 、 定位</p><p><strong>网页布局的本质</strong></p><ul><li>首先利用CSS设置好盒子的大小，然后摆放盒子的位置。</li><li>最后把网页元素比如文字图片等等，放入盒子里面。</li></ul><h3 id="1-盒子模型box-model"><a class="markdownIt-Anchor" href="#1-盒子模型box-model"></a> 1. 盒子模型(Box Model)</h3><ul><li>盒子模型就是把HTML页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</li><li>盒子模型由元素的内容、边框（border）、内边距（padding）、和外边距（margin）组成。</li><li>盒子里面的文字和图片等元素是 内容区域</li><li>盒子的厚度 我们称为为盒子的边框</li><li>盒子内容与边框的距离是内边距</li><li>盒子与盒子之间的距离是外边距</li></ul><p><strong>W3c标准盒子模型</strong></p><p>标准 w3c 盒子模型的范围包括 margin、border、padding、content</p><p>当设置为box-sizing: content-box;时，将采用标准模式解析计算，也是默认模式；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内盒尺寸计算(元素实际大小)</span><br></pre></td></tr></table></figure><ul><li><p>宽度：Element Height = content height + padding + border （Height为内容高度）</p></li><li><p>高度：Element  Width = content width + padding + border （Width为内容宽度）</p></li><li><p>盒子的实际大小：<strong>内容的宽度和高度 +  内边距  +  边框</strong>  ![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<strong>IE盒子模型</strong></p><p><strong><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8b3UoX2rImDIa63t2y9NfoobMuKib4I0Dhn0szXElibTw9YsdBDbPsavPA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></strong></p></li></ul><p>IE 盒子模型的 content 部分包含了 border 和 pading</p><p>当设置为box-sizing: border-box时，将采用怪异模式解析计算；</p><h3 id="2-盒子边框border"><a class="markdownIt-Anchor" href="#2-盒子边框border"></a> 2. 盒子边框(border)</h3><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:left">border-width</td><td style="text-align:center">定义边框粗细，单位是px</td></tr><tr><td style="text-align:left">border-style</td><td style="text-align:center">边框的样式</td></tr><tr><td style="text-align:left">border-color</td><td style="text-align:center">边框颜色</td></tr></tbody></table><p><strong>边框的样式：</strong></p><ul><li>none：没有边框即忽略所有边框的宽度（默认值）</li><li>solid：边框为单实线(最为常用的)</li><li>dashed：边框为虚线</li><li>dotted：边框为点线</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">边框综合设置</span><br><span class="line">border : border-width || border-style || border-color </span><br><span class="line"></span><br><span class="line">border: 1px solid red;  没有顺序要求  </span><br></pre></td></tr></table></figure><p><strong>盒子边框写法总结表：</strong></p><p>很多情况下，我们不需要指定4个边框，我们是可以单独给4个边框分别指定的。</p><table><thead><tr><th style="text-align:left">上边框</th><th style="text-align:left">下边框</th><th style="text-align:left">左边框</th><th style="text-align:left">右边框</th></tr></thead><tbody><tr><td style="text-align:left">border-top-style:样式;</td><td style="text-align:left">border-bottom-style:样式;</td><td style="text-align:left">border-left-style:样式;</td><td style="text-align:left">border-right-style:样式;</td></tr><tr><td style="text-align:left">border-top-width:宽度;</td><td style="text-align:left">border- bottom-width:宽度;</td><td style="text-align:left">border-left-width:宽度;</td><td style="text-align:left">border-right-width:宽度;</td></tr><tr><td style="text-align:left">border-top-color:颜色;</td><td style="text-align:left">border- bottom-color:颜色;</td><td style="text-align:left">border-left-color:颜色;</td><td style="text-align:left">border-right-color:颜色;</td></tr><tr><td style="text-align:left">border-top:宽度 样式 颜色;</td><td style="text-align:left">border-bottom:宽度 样式 颜色;</td><td style="text-align:left">border-left:宽度 样式 颜色;</td><td style="text-align:left">border-right:宽度 样式 颜色;</td></tr></tbody></table><p><strong>表格的细线边框：</strong></p><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bjM8eDXUbtfG62HugJaC84WZTjk08dNWiasE1nvCdX7OgnCoovIaKovg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><ul><li><p>通过表格的<code>cellspacing=&quot;0&quot;</code>,将单元格与单元格之间的距离设置为0，</p></li><li><p>但是两个单元格之间的边框会出现重叠，从而使边框变粗</p></li><li><p>通过css属性：table{ border-collapse:collapse; }</p></li><li><ul><li><code>collapse</code> 单词是合并的意思,<code>border-collapse: collapse;</code>表示相邻边框合并在一起。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"> table &#123;</span><br><span class="line">  width: 500px;</span><br><span class="line">  height: 300px;</span><br><span class="line">  border: 1px solid red;</span><br><span class="line"> &#125;</span><br><span class="line"> td &#123;</span><br><span class="line">  border: 1px solid red;</span><br><span class="line">  text-align: center;</span><br><span class="line"> &#125;</span><br><span class="line"> table, td &#123;</span><br><span class="line">  border-collapse: collapse;  /*合并相邻边框*/</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="2-内边距padding"><a class="markdownIt-Anchor" href="#2-内边距padding"></a> 2. 内边距(padding)</h3><p>padding属性用于设置内边距。是指边框与内容之间的距离。</p><p><strong>设置</strong></p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">padding-left</td><td style="text-align:left">左内边距</td></tr><tr><td style="text-align:left">padding-right</td><td style="text-align:left">右内边距</td></tr><tr><td style="text-align:left">padding-top</td><td style="text-align:left">上内边距</td></tr><tr><td style="text-align:left">padding-bottom</td><td style="text-align:left">下内边距</td></tr></tbody></table><p><strong>padding简写</strong></p><table><thead><tr><th style="text-align:left">值的个数</th><th style="text-align:left">表达意思</th></tr></thead><tbody><tr><td style="text-align:left">1个值</td><td style="text-align:left">padding：上下左右内边距;</td></tr><tr><td style="text-align:left">2个值</td><td style="text-align:left">padding: 上下内边距   左右内边距 ；</td></tr><tr><td style="text-align:left">3个值</td><td style="text-align:left">padding：上内边距  左右内边距  下内边距；</td></tr><tr><td style="text-align:left">4个值</td><td style="text-align:left">padding: 上内边距 右内边距 下内边距 左内边距 ；</td></tr></tbody></table><p>当我们给盒子指定padding值之后， 发生了2件事情：</p><ol><li>内容和边框 有了距离，添加了内边距。</li><li>盒子会变大</li></ol><p>**解决措施：**通过给设置了宽高的盒子，减去相应的内边距的值，维持盒子原有的大小。</p><p><strong>padding不影响盒子大小情况：👉</strong>如果没有给一个盒子指定宽度， 此时，如果给这个盒子指定padding， 则不会撑开盒子。</p><h3 id="3-外边距margin"><a class="markdownIt-Anchor" href="#3-外边距margin"></a> 3. 外边距（margin）</h3><p>margin属性用于设置外边距。margin就是控制<code>盒子和盒子之间的距离</code></p><p><strong>设置</strong></p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">margin-left</td><td style="text-align:left">左外边距</td></tr><tr><td style="text-align:left">margin-right</td><td style="text-align:left">右外边距</td></tr><tr><td style="text-align:left">margin-top</td><td style="text-align:left">上外边距</td></tr><tr><td style="text-align:left">margin-bottom</td><td style="text-align:left">下外边距</td></tr></tbody></table><p>margin值的简写 （复合写法）代表意思  跟 padding 完全相同。</p><p><strong>块级盒子水平居中</strong></p><ul><li>盒子必须指定宽度（width）</li><li>然后就给左右的外边距都设置为auto</li></ul><p>实际工作中常用这种方式进行网页布局，示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header  &#123; width: 960px; margin: 0 auto;&#125;</span><br></pre></td></tr></table></figure><p>常见的写法，以下下三种都可以👇👇。</p><ul><li>margin-left: auto;  margin-right: auto;</li><li>margin: auto;</li><li>margin: 0 auto;</li></ul><p><strong>文字居中和盒子居中区别👇👇</strong></p><ol><li>盒子内的文字水平居中是 text-align: center; 而且还可以让 行内元素和行内块居中对齐</li><li>块级盒子水平居中  左右margin 改为 auto</li></ol><p><strong>插入图片和背景图片区别👇👇</strong></p><ol><li><code>插入图片</code>我们用的最多 比如产品展示类  移动位置只能靠盒模型 padding margin</li><li><code>背景图片</code>我们一般用于小图标背景或者超大背景图片、背景图片，移动位置只能通过  background-position</li></ol><p><strong>清除元素的默认内外边距👇👇</strong></p><ul><li>行内元素为了照顾兼容性,尽量只设置左右内外边距，不要设置上下内外边距。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">   padding:0;         /* 清除内边距 */</span><br><span class="line">   margin:0;          /* 清除外边距 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4外边距合并"><a class="markdownIt-Anchor" href="#4外边距合并"></a> 4.外边距合并</h3><p>使用margin定义块元素的**「垂直外边距」**时，可能会出现外边距的合并。</p><h6 id="1-相邻块元素垂直外边距的合并"><a class="markdownIt-Anchor" href="#1-相邻块元素垂直外边距的合并"></a> (1). 相邻块元素垂直外边距的合并</h6><ul><li>当上下相邻的两个块元素相遇时，如果上面的元素有下外边距margin-bottom</li><li>下面的元素有上外边距margin-top，则他们之间的垂直间距不是margin-bottom与margin-top之和</li><li>**「取两个值中的较大者」**这种现象被称为相邻块元素垂直外边距的合并（也称外边距塌陷）。</li></ul><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<strong><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8b15wO9U7G1QHGZRB5OIsdJaCdPeg7MzVYtTsbhfGPusK7OCOwWtvs4A/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></strong></p><p><strong>「解决方案：尽量给只给一个盒子添加margin值」</strong>。</p><h4 id="2-嵌套块元素垂直外边距的合并塌陷"><a class="markdownIt-Anchor" href="#2-嵌套块元素垂直外边距的合并塌陷"></a> (2). 嵌套块元素垂直外边距的合并（塌陷）</h4><ul><li>对于两个嵌套关系的块元素，如果父元素没有上内边距及边框</li><li>父元素的上外边距会与子元素的上外边距发生合并</li><li>合并后的外边距为两者中的较大者</li><li><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8by8DvQuDYlXKtzlIWtltPGPW0HtWAqoaWKr6cy6jYzc4hrVmR6CFlDA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></li></ul><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<strong>「解决方案：」</strong></p><ol><li>可以为父元素定义上边框。</li><li>可以为父元素定义上内边距</li><li>可以为父元素添加overflow: hidden。</li></ol><p>还有其他方法，比如浮动、固定、绝对定位的盒子不会有问题，后面咱们再总结。。。</p><h4 id="盒子模型布局稳定性"><a class="markdownIt-Anchor" href="#盒子模型布局稳定性"></a> 盒子模型布局稳定性</h4><p>优先使用  宽度 （width）  其次 使用内边距（padding）   再次  外边距（margin）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">width &gt;  padding  &gt;   margin   </span><br></pre></td></tr></table></figure><p><strong>原因：</strong></p><ul><li>margin 会有外边距合并 还有 ie6下面margin 加倍的bug（讨厌）所以最后使用。</li><li>padding  会影响盒子大小， 需要进行加减计算（麻烦） 其次使用。</li><li>width  没有问题（嗨皮）我们经常使用宽度剩余法 高度剩余法来做。</li></ul><h3 id="5-css3-新增"><a class="markdownIt-Anchor" href="#5-css3-新增"></a> 5. CSS3 新增</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">圆角边框：</span><br><span class="line">border-radius:length;</span><br><span class="line"></span><br><span class="line">border-top-left-radius   定义了左上角的弧度</span><br><span class="line">border-top-right-radius   定义了右上角的弧度</span><br><span class="line">border-bottom-right-radius   定义了右下角的弧度</span><br><span class="line">border-bottom-left-radius   定义了左下角的弧度</span><br></pre></td></tr></table></figure><ul><li><p>其中每一个值可以为 数值或百分比的形式。</p></li><li><p>技巧：让一个正方形 变成圆圈</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8beaL3cUZXibAoj8ibW8c2cTVhXndJ1ELNMvttZxzRdTD15uqN0G72mM5g/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 50%;</span><br></pre></td></tr></table></figure><p>![图片](data:image/svg+xml,%3C%3Fxml version=‘1.0’ encoding=‘UTF-8’%3F%3E%3Csvg width=‘1px’ height=‘1px’ viewBox=‘0 0 1 1’ version=‘1.1’ xmlns=‘<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>’ xmlns:xlink=‘<a href="http://www.w3.org/1999/xlink">http://www.w3.org/1999/xlink</a>’%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=‘none’ stroke-width=‘1’ fill=‘none’ fill-rule=‘evenodd’ fill-opacity=‘0’%3E%3Cg transform=‘translate(-249.000000, -126.000000)’ fill=’%23FFFFFF’%3E%3Crect x=‘249’ y=‘126’ width=‘1’ height=‘1’%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)如果要在四个角上一一指定，可以使用以下规则👇👇：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 左上角 右上角  右下角  左下角;</span><br></pre></td></tr></table></figure><ol><li>四个值: 第一个值为左上角，第二个值为右上角，第三个值为右下角，第四个值为左下角。</li><li>三个值: 第一个值为左上角, 第二个值为右上角和左下角，第三个值为右下角</li><li>两个值: 第一个值为左上角与右下角，第二个值为右上角与左下角</li><li>一个值：四个圆角值相同</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">盒子阴影(box-shadow)：</span><br><span class="line">box-shadow: offset-x offset-y [blur [spread]] [color] [inset]</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">offset-x</td><td style="text-align:left">阴影的水平偏移量。正数向右偏移，负数向左偏移。</td></tr><tr><td style="text-align:left">offset-y</td><td style="text-align:left">阴影的垂直偏移量。正数向下偏移，负数向上偏移。</td></tr><tr><td style="text-align:left">blur</td><td style="text-align:left">可选。阴影模糊距离，不能取负数。</td></tr><tr><td style="text-align:left">spread</td><td style="text-align:left">可选。阴影大小</td></tr><tr><td style="text-align:left">color</td><td style="text-align:left">可选。阴影的颜色</td></tr><tr><td style="text-align:left">inset</td><td style="text-align:left">可选。表示添加内阴影，默认为外阴影</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">   width: 200px;</span><br><span class="line">   height: 200px;</span><br><span class="line">   border: 10px solid red;</span><br><span class="line">   /* box-shadow: 5px 5px 3px 4px rgba(0, 0, 0, .4);  */</span><br><span class="line">   /* box-shadow:水平位置 垂直位置 模糊距离 阴影尺寸（影子大小） 阴影颜色  内/外阴影； */</span><br><span class="line">   box-shadow: 0 15px 30px  rgba(0, 0, 0, .4);   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="浮动"><a class="markdownIt-Anchor" href="#浮动"></a> 浮动</h2><h3 id="浮动-2"><a class="markdownIt-Anchor" href="#浮动-2"></a> 浮动</h3><p><strong>「1. CSS布局的三种机制」</strong></p><blockquote><p>网页布局的核心——就是<strong>用CSS来摆放盒子</strong>。</p></blockquote><p>CSS 提供了3种机制来设置盒子的摆放位置，分别是普通流（标准流）、浮动和定位，其中：</p><p><strong>A. 普通流（标准流）</strong></p><ul><li><p>块级元素会独占一行，从上向下顺序排列；</p></li><li><ul><li>常用元素：div、hr、p、h1~h6、ul、ol、dl、form、table</li></ul></li><li><p>行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行；</p></li><li><ul><li>常用元素：span、a、i、em等</li></ul></li></ul><p><strong>B. 浮动</strong></p><ul><li>让盒子从普通流中浮起来,主要作用让多个块级盒子一行显示。</li></ul><p><strong>C. 定位</strong></p><ul><li>将盒子定在浏览器的某一个位置——CSS 离不开定位，特别是后面的 js 特效。</li></ul><p>**「2. 什么是浮动」**元素的浮动是指设置了浮动属性的元素会</p><ul><li>脱离标准普通流的控制,不占位置，脱标</li><li>移动到指定位置。</li></ul><h5 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h5><ol><li>让多个盒子(div)水平排列成一行，使得浮动称为布局的重要手段。</li><li>可以实现盒子的左右对齐等等。</li><li>浮动最早是用来控制图片，实现文字环绕图片效果。</li><li>float属性会改变元素的display属性，任何元素都可以浮动。浮动元素会生成一个块级框，而不论它本身是何种元素。生成的块级框和我们前面的行内块极其相似。</li></ol><h5 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; float: 属性值; &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">属性值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">none</td><td style="text-align:left">元素不浮动（默认值）</td></tr><tr><td style="text-align:left">left</td><td style="text-align:left">元素向左浮动</td></tr><tr><td style="text-align:left">right</td><td style="text-align:left">元素向右浮动</td></tr></tbody></table><blockquote><p>浮动只会影响当前的或者是后面的标准流盒子，不会影响前面的标准流。<br />**建议:**如果一个盒子里面有多个子盒子，如果其中一个盒子浮动了，其他兄弟也应该浮动。防止引起问题</p></blockquote><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bnahuic1SXtFcVOiaDrcDGb8S21rrKf46W1p6ibqmFSqW6mlTzGodxBwyA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><p><strong>浮动(float)小结</strong></p><table><thead><tr><th style="text-align:left">特点</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">浮</td><td style="text-align:left">加了浮动的盒子**「是浮起来」**的，漂浮在其他标准流盒子的上面。</td></tr><tr><td style="text-align:left">漏</td><td style="text-align:left">加了浮动的盒子**「是不占位置的」<strong>，它原来的位置</strong>「漏给了标准流的盒子」**。</td></tr><tr><td style="text-align:left">特</td><td style="text-align:left"><strong>「特别注意」</strong>：浮动元素会改变display属性， 类似转换为了行内块，但是元素之间没有空白缝隙</td></tr></tbody></table><h3 id="清除浮动"><a class="markdownIt-Anchor" href="#清除浮动"></a> 清除浮动</h3><p>因为父级盒子很多情况下，不方便给高度，但是子盒子浮动就不占有位置，最后父级盒子高度为0，就影响了下面的标准流盒子。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bMdS71HhXE4ZoSlJzhd7YhgiczkM9JgE3NeVkgs1V15CzQXdSKMCf81Q/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /><img src="https://mmbiz.qpic.cn/mmbiz_jpg/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8baoekQGiaPwbIKRHticXfUA2rEM8grBmN1u6NcEvvb3tY44EQ9SiaZledA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><p><strong>总结：</strong></p><ul><li>由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响</li><li>准确地说，并不是清除浮动，而是清除浮动后造成的影响</li></ul><p><strong>清除浮动本质</strong>清除浮动主要为了解决父级元素因为子级浮动引起内部高度为0 的问题。清除浮动之后， 父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了</p><h4 id="清除浮动的方法"><a class="markdownIt-Anchor" href="#清除浮动的方法"></a> 清除浮动的方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; clear: 属性值; &#125;   clear 清除  </span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">属性值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">left</td><td style="text-align:left">不允许左侧有浮动元素（清除左侧浮动的影响）</td></tr><tr><td style="text-align:left">right</td><td style="text-align:left">不允许右侧有浮动元素（清除右侧浮动的影响）</td></tr><tr><td style="text-align:left">both</td><td style="text-align:left">同时清除左右两侧浮动的影响</td></tr></tbody></table><p>实际工作中,几乎只用clear: both</p><p><strong>1).额外标签法(隔墙法)</strong></p><p>是W3C推荐的做法是通过在浮动元素末尾添加一个空的标签例如 <div style=”clear:both”></div>，或则其他标签br等亦可。</p><ul><li>优点：通俗易懂，书写方便</li><li>缺点：添加许多无意义的标签，结构化较差。</li></ul><p><strong>2).父级添加overflow属性方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以给父级添加： overflow为 hidden| auto| scroll  都可以实现。</span><br></pre></td></tr></table></figure><ul><li>优点： 代码简洁</li><li>缺点： 内容增多时候容易造成不会自动换行导致内容被隐藏掉，无法显示需要溢出的元素。</li></ul><p><strong>3).使用after伪元素清除浮动</strong>:after 方式为空元素额外标签法的升级版，好处是不用单独加标签了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.clearfix:after &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    display: block;</span><br><span class="line">    height: 0;</span><br><span class="line">    clear: both;</span><br><span class="line">    visibility: hidden;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">/* IE6、7 专有 */</span><br><span class="line">.clearfix &#123;</span><br><span class="line">    *zoom: 1;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><ul><li>优点：符合闭合浮动思想  结构语义化正确</li><li>缺点：由于IE6-7不支持:after，使用 zoom:1触发 hasLayout。</li></ul><p><strong>4).使用双伪元素清除浮动</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.clearfix:before,</span><br><span class="line">.clearfix:after &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    display: table;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.clearfix:after &#123;</span><br><span class="line">    clear: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.clearfix &#123;</span><br><span class="line">   *zoom: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>优点： 代码更简洁</li><li>缺点： 由于IE6-7不支持:after，使用 zoom:1触发 hasLayout。</li></ul><h4 id="清除浮动总结"><a class="markdownIt-Anchor" href="#清除浮动总结"></a> 清除浮动总结</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">什么时候用清除浮动呢？</span><br></pre></td></tr></table></figure><ol><li>父级没高度</li><li>子盒子浮动了</li><li>影响下面布局了，我们就应该清除浮动了。</li></ol><table><thead><tr><th style="text-align:left">清除浮动的方式</th><th style="text-align:left">优点</th><th style="text-align:left">缺点</th></tr></thead><tbody><tr><td style="text-align:left">额外标签法（隔墙法）</td><td style="text-align:left">通俗易懂，书写方便</td><td style="text-align:left">添加许多无意义的标签，结构化较差。</td></tr><tr><td style="text-align:left">父级overflow:hidden;</td><td style="text-align:left">书写简单</td><td style="text-align:left">溢出隐藏</td></tr><tr><td style="text-align:left">父级after伪元素</td><td style="text-align:left">结构语义化正确</td><td style="text-align:left">由于IE6-7不支持:after，兼容性问题</td></tr><tr><td style="text-align:left">父级双伪元素</td><td style="text-align:left">结构语义化正确</td><td style="text-align:left">由于IE6-7不支持:after，兼容性问题</td></tr></tbody></table><h3 id="css属性书写顺序"><a class="markdownIt-Anchor" href="#css属性书写顺序"></a> CSS属性书写顺序</h3><p>建议遵循以下顺序：</p><ol><li>布局定位属性：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式）</li><li>自身属性：width / height / margin / padding / border / background</li><li>文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word</li><li>其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    position: relative;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    margin: 0 10px;</span><br><span class="line">    padding: 20px 0;</span><br><span class="line">    font-family: Arial, &#x27;Helvetica Neue&#x27;, Helvetica, sans-serif;</span><br><span class="line">    color: #333;</span><br><span class="line">    background: rgba(0,0,0,.5);</span><br><span class="line">    -webkit-border-radius: 10px;</span><br><span class="line">    -moz-border-radius: 10px;</span><br><span class="line">    -o-border-radius: 10px;</span><br><span class="line">    -ms-border-radius: 10px;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="定位position"><a class="markdownIt-Anchor" href="#定位position"></a> 定位(position)</h2><p><strong>「1. 定位详解」</strong></p><p>将盒子**「定」<strong>在某一个</strong>「位」**置  自由的漂浮在其他盒子(包括标准流和浮动)的上面。</p><p>所以，我们脑海应该有三种布局机制的上下顺序👇👇<br />标准流在最底层 (海底)  -------   浮动 的盒子 在 中间层  (海面)  -------  定位的盒子 在 最上层  （天空）</p><p><strong>定位</strong>是用来布局的，它有两部分组成：定位 = 定位模式 + 边偏移在 CSS 中，通过 <code>top</code>、<code>bottom</code>、<code>left</code> 和 <code>right</code> 属性定义元素的**「边偏移」**：（方位名词）</p><table><thead><tr><th style="text-align:left">边偏移属性</th><th style="text-align:left">示例</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>top</code></td><td style="text-align:left"><code>top: 80px</code></td><td style="text-align:left"><strong>「顶端」<strong>偏移量，定义元素相对于其父元素</strong>「上边线的距离」</strong>。</td></tr><tr><td style="text-align:left"><code>bottom</code></td><td style="text-align:left"><code>bottom: 80px</code></td><td style="text-align:left"><strong>「底部」<strong>偏移量，定义元素相对于其父元素</strong>「下边线的距离」</strong>。</td></tr><tr><td style="text-align:left"><code>left</code></td><td style="text-align:left"><code>left: 80px</code></td><td style="text-align:left"><strong>「左侧」<strong>偏移量，定义元素相对于其父元素</strong>「左边线的距离」</strong>。</td></tr><tr><td style="text-align:left"><code>right</code></td><td style="text-align:left"><code>right: 80px</code></td><td style="text-align:left"><strong>「右侧」<strong>偏移量，定义元素相对于其父元素</strong>「右边线的距离」</strong></td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8b1MmIfz1wBVX3PXMGUVrAqRxdibY8EYy1q4xPibScXf5xQpicMYLJe71DQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><p><strong>「2. 定位模式(position)」<strong>在 CSS 中，通过 <code>position</code> 属性定义元素的</strong>「定位模式」</strong>，语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; position: 属性值; &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">值</th><th style="text-align:center">语义</th></tr></thead><tbody><tr><td style="text-align:left"><code>static</code></td><td style="text-align:center">**「静态」**定位</td></tr><tr><td style="text-align:left"><code>relative</code></td><td style="text-align:center">**「相对」**定位</td></tr><tr><td style="text-align:left"><code>absolute</code></td><td style="text-align:center">**「绝对」**定位</td></tr><tr><td style="text-align:left"><code>fixed</code></td><td style="text-align:center">**「固定」**定位</td></tr></tbody></table><p><strong>「3. 静态定位(static)」</strong></p><ul><li>静态定位是元素的默认定位方式，无定位的意思。它相当于border里面的none，不要定位的时候用。</li><li>静态定位 按照标准流特性摆放位置。它没有边偏移。</li><li>静态定位在布局时几乎不用</li></ul><p><strong>「4. 相对定位(relative)」</strong></p><ul><li>相对定位是元素相对于它原来在标准流中的位置来说的。<br /><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bVfXeeVIdicb4akm3WYFGbwMqbs1ObZiaiauiaFkxSPX2NDmDkEH2BlY1uA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></li><li>相对于自己原来在标准流中位置来移动的</li><li>原来在标准流的区域继续占有，后面的盒子仍然以标准流的方式对待它。</li></ul><p><strong>「5. 绝对定位(absolute)」</strong></p><p>绝对定位是元素以带有定位的父级元素来移动位置</p><ul><li>完全脱表–完全不占位置；</li><li>父元素没有定位，则以浏览器为准定位(Document文档)。</li><li><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8b3kQIJPlKcMTgGicm7Hia18o1O538GDL2liaZBAnVXyhh1B142qx1zHO9A/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></li></ul><h4 id="父元素有定位"><a class="markdownIt-Anchor" href="#父元素有定位"></a> 父元素有定位</h4><h4 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> <img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bqCrQxW1Sb43kqPZ9BUyXoBYljAM6kFSAsC9sPGWIZWo904f6iaib3kPA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></h4><h5 id="定位口诀子绝父相"><a class="markdownIt-Anchor" href="#定位口诀子绝父相"></a> 定位口诀–子绝父相</h5><p><strong>「6. 固定定位(fixed)」</strong></p><p>固定定位是绝对定位的一种特殊形式;</p><ul><li><p>完全脱标–完全不占位置；</p></li><li><p>只认<strong>浏览器的可视窗口</strong>–浏览器可视窗口+边偏移属性来设置元素的位置</p></li><li><ul><li>跟父元素没有任何关系；单独使用</li><li>不随滚动条滚动</li></ul></li></ul><h3 id="定位position的扩展"><a class="markdownIt-Anchor" href="#定位position的扩展"></a> 定位(position)的扩展</h3><h4 id="绝对定位的盒子居中"><a class="markdownIt-Anchor" href="#绝对定位的盒子居中"></a> 绝对定位的盒子居中</h4><blockquote><p>绝对定位/固定定位的盒子不能通过设置margin: auto设置水平居中 在使用绝对定位时要向实现水平居中，可以按照下面的方法：</p></blockquote><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bN6SCtF5tG61rscl5xZ0icicUDB8jtFtq5xibEqiba1WfUXOzkiadNjnX4nQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><ol><li>left : 50%:让盒子的左侧移动到父级元素的水平中心位置；</li><li>margin-left: -100px;让盒子向左移动自身宽度的一半。</li><li>同理垂直居中。</li></ol><h4 id="堆叠顺序z-index"><a class="markdownIt-Anchor" href="#堆叠顺序z-index"></a> 堆叠顺序（z-index）</h4><p>在使用**「定位」<strong>布局时，可能会</strong>「出现盒子重叠的情况」**。</p><p>加了定位的盒子，默认**「后来者居上」**， 后面的盒子会压住前面的盒子。</p><p>应用 <code>z-index</code> 层叠等级属性可以**「调整盒子的堆叠顺序」**。如下图所示：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8beCsHfDxy5VBkWU3ET4s4qtBpHm9iajaajxo2GeWWb81a04PfG5rmH0A/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /><br />z-index的特性如下:</p><ol><li><strong>属性值</strong>：正整数、负整数或 0，默认值是 0，数值越大，盒子越靠上；</li><li>如果属性值相同，则按照书写顺序，后来居上；</li><li>数字后面不能加单位</li><li>z-index只能用于相对定位、绝对定位和固定定位的元素，其他标准流、浮动和静态定位无效。</li></ol><h4 id="定位改变display属性"><a class="markdownIt-Anchor" href="#定位改变display属性"></a> 定位改变display属性</h4><p>前面提过， display 是 显示模式， 可以通过以下方式改变显示模式:</p><ul><li>可以用inline-block  转换为行内块</li><li>可以用浮动 float 默认转换为行内块（类似，并不完全一样，因为浮动是脱标的）</li><li>绝对定位和固定定位也和浮动类似， 默认转换的特性 转换为行内块。</li></ul><p>所以说， 一个行内的盒子，如果加了**「浮动」<strong>、</strong>「固定定位」<strong>和</strong>「绝对定位」**，不用转换，就可以给这个盒子直接设置宽度和高度等。</p><h4 id="定位小结"><a class="markdownIt-Anchor" href="#定位小结"></a> 定位小结</h4><table><thead><tr><th style="text-align:left">定位模式</th><th style="text-align:left">是否脱标占有位置</th><th style="text-align:left">移动位置基准</th><th style="text-align:left">模式转换（行内块）</th><th style="text-align:left">使用情况</th></tr></thead><tbody><tr><td style="text-align:left">静态static</td><td style="text-align:left">不脱标，正常模式</td><td style="text-align:left">正常模式</td><td style="text-align:left">不能</td><td style="text-align:left">几乎不用</td></tr><tr><td style="text-align:left">相对定位relative</td><td style="text-align:left">不脱标，占有位置</td><td style="text-align:left">相对自身位置移动</td><td style="text-align:left">不能</td><td style="text-align:left">基本单独使用</td></tr><tr><td style="text-align:left">绝对定位absolute</td><td style="text-align:left">完全脱标，不占有位置</td><td style="text-align:left">相对于定位父级移动位置</td><td style="text-align:left">能</td><td style="text-align:left">要和定位父级元素搭配使用</td></tr><tr><td style="text-align:left">固定定位fixed</td><td style="text-align:left">完全脱标，不占有位置</td><td style="text-align:left">相对于浏览器移动位置</td><td style="text-align:left">能</td><td style="text-align:left">单独使用，不需要父级</td></tr></tbody></table><p><strong>注意：</strong></p><ol><li><code>边偏移</code> 需要和 <code>定位模式</code> 联合使用，<code>单独使用无效</code>；</li><li><code>top</code> 和 <code>bottom</code> 不要同时使用；</li><li><code>left</code> 和 <code>right</code> 不要同时使用。</li></ol><hr /><h2 id="css高级技巧"><a class="markdownIt-Anchor" href="#css高级技巧"></a> CSS高级技巧</h2><h3 id="元素的显示与隐藏"><a class="markdownIt-Anchor" href="#元素的显示与隐藏"></a> 元素的显示与隐藏</h3><ul><li>**目的:**让一个元素在页面中消失或者显示出来</li><li>**场景:**类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现！</li></ul><h4 id="11-display-显示重点"><a class="markdownIt-Anchor" href="#11-display-显示重点"></a> 1.1 display 显示（重点）</h4><p>display设置或检索对象是否显示或如何显示。</p><ul><li><p>display: none 隐藏对象</p></li><li><ul><li>特点：隐藏之后，不再保留位置。</li></ul></li><li><p>display: block 除了转换为块级元素之外，同时还有显示元素的意思。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bIsqWiaIk6NLYYVTLwCWLThczx6srresNQxzaqanNPia06CDlCoibib4JiaQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /><br />实际开发场景：配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛</p></li></ul><h4 id="12-visibility-可见性"><a class="markdownIt-Anchor" href="#12-visibility-可见性"></a> 1.2 visibility 可见性</h4><p>设置或检索是否显示对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">visibility：visible ;  对象可视</span><br><span class="line"></span><br><span class="line">visibility：hidden;    对象隐藏</span><br></pre></td></tr></table></figure><ul><li>特点：隐藏之后，继续保留原有位置。</li></ul><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bWR8zicEo3L5npkKeSd74ibl4D2ZseBNAH4PviaAQmbdq9XRL0ef7ee3aA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><h4 id="13-overflow-溢出"><a class="markdownIt-Anchor" href="#13-overflow-溢出"></a> 1.3 overflow 溢出</h4><p>检索或设置当对象的内容超过其指定高度及宽度时如何管理内容。</p><table><thead><tr><th style="text-align:left">属性值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">visible</td><td style="text-align:left">不剪切内容也不添加滚动条</td></tr><tr><td style="text-align:left">hidden</td><td style="text-align:left">不显示超过对象尺寸的内容，超出的部分隐藏掉</td></tr><tr><td style="text-align:left">scroll</td><td style="text-align:left">不管超出内容否，总是显示滚动条</td></tr><tr><td style="text-align:left">auto</td><td style="text-align:left">超出自动显示滚动条，不超出不显示滚动条</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bEFUTYKtKQ3Dm0dDAGKsSAw5QaSqPLgETx84IuU20677gOjya8BAR7A/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /><br /><code>实际开发场景</code>：</p><ol><li>清除浮动</li><li>隐藏超出内容，隐藏掉,  不允许内容超过父盒子。</li></ol><h4 id="14-显示与隐藏总结"><a class="markdownIt-Anchor" href="#14-显示与隐藏总结"></a> 1.4 显示与隐藏总结</h4><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">区别</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left">display</td><td style="text-align:left">隐藏对象，不保留位置</td><td style="text-align:left">配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛</td></tr><tr><td style="text-align:left">visibility</td><td style="text-align:left">隐藏对象，保留位置</td><td style="text-align:left">使用较少</td></tr><tr><td style="text-align:left">overflow</td><td style="text-align:left">只是隐藏超出大小的部分</td><td style="text-align:left">1. 可以清除浮动 2. 保证盒子里面的内容不会超出该盒子范围</td></tr></tbody></table><h3 id="css用户界面样式"><a class="markdownIt-Anchor" href="#css用户界面样式"></a> CSS用户界面样式</h3><p>所谓的界面样式， 就是更改一些用户操作样式，以便提高更好的用户体验。</p><ul><li>更改用户的鼠标样式</li><li>表单轮廓等。</li><li>防止表单域拖拽</li></ul><h4 id="21-鼠标样式"><a class="markdownIt-Anchor" href="#21-鼠标样式"></a> 2.1 鼠标样式</h4><p>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p><table><thead><tr><th style="text-align:left">属性值</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">default</td><td style="text-align:left">小白  默认</td></tr><tr><td style="text-align:left">pointer</td><td style="text-align:left">小手</td></tr><tr><td style="text-align:left">move</td><td style="text-align:left">移动</td></tr><tr><td style="text-align:left">text</td><td style="text-align:left">文本</td></tr><tr><td style="text-align:left">not-allowed</td><td style="text-align:left">禁止</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li style=&quot;cursor:default&quot;&gt;我是小白&lt;/li&gt;</span><br><span class="line">  &lt;li style=&quot;cursor:pointer&quot;&gt;我是小手&lt;/li&gt;</span><br><span class="line">  &lt;li style=&quot;cursor:move&quot;&gt;我是移动&lt;/li&gt;</span><br><span class="line">  &lt;li style=&quot;cursor:text&quot;&gt;我是文本&lt;/li&gt;</span><br><span class="line">  &lt;li style=&quot;cursor:not-allowed&quot;&gt;我是文本&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><h4 id="22-轮廓线-outline"><a class="markdownIt-Anchor" href="#22-轮廓线-outline"></a> 2.2 轮廓线 outline</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bdicbvJ2vdWvVm9PuHt5WLFn7XqYAx60k0El53qx9JfgLB734At4Ru9w/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /><br />是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outline : outline-color ||outline-style || outline-width </span><br></pre></td></tr></table></figure><p>但是我们都不关心可以设置多少，我们平时都是去掉的。<br />最直接的写法是 ： outline: 0;  或者  outline: none;</p><h4 id="23-防止拖拽文本域resize"><a class="markdownIt-Anchor" href="#23-防止拖拽文本域resize"></a> 2.3 防止拖拽文本域resize</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bHX3RwpjHtdppaZKxrEhq5QjZB339Zn5b7xMvy2XsrPblC9V7Z478JQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea  style=&quot;resize: none;&quot;&gt;&lt;/textarea&gt;</span><br></pre></td></tr></table></figure><h4 id="24-用户界面样式总结"><a class="markdownIt-Anchor" href="#24-用户界面样式总结"></a> 2.4 用户界面样式总结</h4><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">用途</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left">鼠标样式</td><td style="text-align:left">更改鼠标样式cursor</td><td style="text-align:left">样式很多，重点记住 pointer</td></tr><tr><td style="text-align:left">轮廓线</td><td style="text-align:left">表单默认outline</td><td style="text-align:left">outline 轮廓线，我们一般直接去掉，border是边框，我们会经常用</td></tr><tr><td style="text-align:left">防止拖拽</td><td style="text-align:left">主要针对文本域resize</td><td style="text-align:left">防止用户随意拖拽文本域，造成页面布局混乱，我们resize:none</td></tr></tbody></table><h3 id="vertical-align-垂直对齐"><a class="markdownIt-Anchor" href="#vertical-align-垂直对齐"></a> vertical-align 垂直对齐</h3><ul><li>有宽度的块级元素居中对齐，是margin: 0 auto;</li><li>让文字居中对齐，是 text-align: center;</li></ul><p>vertical-align 垂直对齐，它只针对于**「行内元素」<strong>或者</strong>「行内块元素」**<br /><img src="https://mmbiz.qpic.cn/mmbiz_jpg/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bdibQ1oDm9HIxTxiclw7Fq54j5nmKRK04kmDMrPsg6VZiaL6kDcKsBdibSw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置或检索对象内容的垂直对其方式。</span><br><span class="line">vertical-align : baseline |top |middle |bottom </span><br></pre></td></tr></table></figure><p>注意：</p><p>vertical-align 不影响块级元素中的内容对齐，它只针对于**「行内元素」<strong>或者</strong>「行内块元素」**，</p><p>特别是行内块元素， 通常用来控制图片/表单与文字的对齐。</p><h4 id="31-图片-表单和文字对齐"><a class="markdownIt-Anchor" href="#31-图片-表单和文字对齐"></a> 3.1 图片、表单和文字对齐</h4><p>我们可以通过<code>vertical-align</code> 控制图片和文字的垂直关系了。默认的图片会和文字基线对齐。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bfWPgKVgBq5JoRLkTdcjQxPG1eUAL8g1N9iaxOUHfD7ZN6otR5Kh4NAw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bX32nStNY16aY9odqroA3Mpia6nia2fuh9DYmYCszG7V1to2VsNwibY8Sg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><h4 id="32-去除图片底侧空白缝隙"><a class="markdownIt-Anchor" href="#32-去除图片底侧空白缝隙"></a> 3.2 去除图片底侧空白缝隙</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8boGWdjhQUvkicibGiaRYd0KDL2Y1kmqWLl75piaeMlRTMVh4go056Pj1OLA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /><br />**原因：**图片或者表单等行内块元素，他的底线会和父级盒子的基线对齐。</p><p>就是图片底侧会有一个空白缝隙。</p><p><strong>解决方法：</strong></p><ul><li>给img vertical-align:middle | top| bottom等等。 让图片不要和基线对齐。</li></ul><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bNO8sogwyKtqHT6Bg0iaDeAkWqlbbSWqKJIGqtt8As1oFz17wBkQYb4g/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><ul><li>给img 添加 display：block; 转换为块级元素就不会存在问题了。</li></ul><h3 id="溢出的文字省略号显示"><a class="markdownIt-Anchor" href="#溢出的文字省略号显示"></a> 溢出的文字省略号显示</h3><h4 id="41-white-space"><a class="markdownIt-Anchor" href="#41-white-space"></a> 4.1 white-space</h4><ul><li>white-space设置或检索对象内文本显示方式。通常我们使用于强制一行显示内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">white-space:normal ；默认处理方式</span><br><span class="line"></span><br><span class="line">white-space:nowrap ； 强制在同一行内显示所有文本，直到文本结束或者遭遇br标签对象才换行。</span><br></pre></td></tr></table></figure><h4 id="42-text-overflow-文字溢出"><a class="markdownIt-Anchor" href="#42-text-overflow-文字溢出"></a> 4.2 text-overflow 文字溢出</h4><ul><li>设置或检索是否使用一个省略标记（…）标示对象内文本的溢出</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text-overflow : clip ；不显示省略标记（...），而是简单的裁切 </span><br><span class="line"></span><br><span class="line">text-overflow：ellipsis ； 当对象内文本溢出时显示省略标记（...）</span><br></pre></td></tr></table></figure><p><strong>「注意」</strong>：</p><p>一定要首先强制一行内显示，再次和overflow属性  搭配使用</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bJMSFBl0zS6bbLaYbicsptgr6KC0uTOEBhZViaFYNY96FibxUF3Xp3fReQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><h4 id="43-总结三步曲"><a class="markdownIt-Anchor" href="#43-总结三步曲"></a> 4.3 总结三步曲</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/*1. 先强制一行内显示文本*/</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">/*2. 超出的部分隐藏*/</span><br><span class="line">    overflow: hidden;</span><br><span class="line">/*3. 文字用省略号替代超出的部分*/</span><br><span class="line">    text-overflow: ellipsis;</span><br></pre></td></tr></table></figure><h3 id="css精灵技术sprite"><a class="markdownIt-Anchor" href="#css精灵技术sprite"></a> CSS精灵技术（sprite)</h3><p>CSS精灵技术（也称CSS Sprites、CSS雪碧）。<br /><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bRib7fONvzIh0zt2skNON8Fvj2NF43KNDc7BwY7vcItRGHiapGiczcg85Q/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><ul><li>图所示为网页的请求原理图，当用户访问一个网站时，需要向服务器发送请求，网页上的每张图像都要经过一次请求才能展现给用户。</li><li>然而，一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接受和发送请求，这将大大降低页面的加载速度。</li></ul><p><strong>为什么需要精灵技术</strong>：为了有效地减少服务器接受和发送请求的次数，提高页面的加载速度。</p><h4 id="51-精灵技术讲解"><a class="markdownIt-Anchor" href="#51-精灵技术讲解"></a> 5.1 精灵技术讲解</h4><p>CSS 精灵其实是将网页中的一些背景图像整合到一张大图中（精灵图），然而，各个网页元素通常只需要精灵图中不同位置的某个小图，要想精确定位到精灵图中的某个小图。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8blELib9Dme0DKEby545viabCfDcwxcytyxMquZINDK5VjqQibmTFKXobRA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><p>这样，当用户访问该页面时，只需向服务发送一次请求，网页中的背景图像即可全部展示出来。</p><p>我们需要使用CSS的:</p><ul><li>background-image、</li><li>background-repeat</li><li>background-position属性进行背景定位，</li><li>其中最关键的是使用<code>background-position</code> 属性精确地定位。</li></ul><h4 id="52-精灵技术使用的核心总结"><a class="markdownIt-Anchor" href="#52-精灵技术使用的核心总结"></a> 5.2 精灵技术使用的核心总结</h4><p>首先我们知道，css精灵技术主要针对于背景图片，插入的图片img 是不需要这个技术的。</p><ol><li>精确测量，每个小背景图片的大小和 位置。</li><li>给盒子指定小背景图片时， 背景定位基本都是 负值。</li></ol><h3 id="滑动门"><a class="markdownIt-Anchor" href="#滑动门"></a> 滑动门</h3><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bqoVDG5FKf7XNSxwXQhjYYGQgrWSZVfkOcialL3ticPnDy25pCpL4bNCg/640?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1" alt="图片" /></p><h4 id="61-滑动门出现的背景"><a class="markdownIt-Anchor" href="#61-滑动门出现的背景"></a> 6.1 滑动门出现的背景</h4><p>制作网页时，为了美观，常常需要为网页元素设置特殊形状的背景，比如微信导航栏，有凸起和凹下去的感觉，最大的问题是里面的字数不一样多，咋办？</p><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bIKmUvSuib6aFic4Seia4jaorfGmEib2sf2V0eibBmF4r3yichjQzVMBOeibbA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /><br />为了使各种特殊形状的背景能够自适应元素中文本内容的多少，出现了CSS滑动门技术。它从新的角度构建页面，使各种特殊形状的背景能够自由拉伸滑动，以适应元素内部的文本内容，可用性更强。最常见于各种导航栏的滑动门。</p><h4 id="62-核心技术"><a class="markdownIt-Anchor" href="#62-核心技术"></a> 6.2 核心技术</h4><p>核心技术就是利用<code>CSS精灵</code>（主要是背景位置）和 <code>盒子padding</code>撑开宽度, 以便能适应不同字数的导航栏。</p><p>一般的经典布局都是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">    &lt;span&gt;导航栏内容&lt;/span&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">* &#123;</span><br><span class="line">    padding:0;</span><br><span class="line">    margin:0;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    body&#123;</span><br><span class="line">      background: url(images/wx.jpg) repeat-x;</span><br><span class="line">    &#125;</span><br><span class="line">    .father &#123;</span><br><span class="line">      padding-top:20px;</span><br><span class="line">    &#125;</span><br><span class="line">    li &#123;</span><br><span class="line">      padding-left: 16px;</span><br><span class="line">      height: 33px;</span><br><span class="line">      float: left;</span><br><span class="line">      line-height: 33px;</span><br><span class="line">      margin:0  10px;</span><br><span class="line">      background: url(./images/to.png) no-repeat left ;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">      padding-right: 16px;</span><br><span class="line">      height: 33px;</span><br><span class="line">      display: inline-block;</span><br><span class="line">      color:#fff;</span><br><span class="line">      background: url(./images/to.png) no-repeat right ;</span><br><span class="line">      text-decoration: none;</span><br><span class="line">    &#125;</span><br><span class="line">    li:hover,</span><br><span class="line">    li:hover a &#123;</span><br><span class="line">      background-image:url(./images/ao.png);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>总结：</p><ol><li>a 设置 背景左侧，padding撑开合适宽度。</li><li>span 设置背景右侧， padding撑开合适宽度 剩下由文字继续撑开宽度。</li><li>之所以a包含span就是因为 整个导航都是可以点击的。</li></ol><h3 id="css-三角形"><a class="markdownIt-Anchor" href="#css-三角形"></a> CSS 三角形</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line"></span><br><span class="line">    width: 0; </span><br><span class="line"></span><br><span class="line">    height: 0;</span><br><span class="line">    line-height:0；</span><br><span class="line">    font-size: 0;</span><br><span class="line">   border-top: 10px solid red;</span><br><span class="line"></span><br><span class="line">   border-right: 10px solid green;</span><br><span class="line"></span><br><span class="line">   border-bottom: 10px solid blue;</span><br><span class="line"></span><br><span class="line">   border-left: 10px solid #000; </span><br><span class="line"></span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p><img src="https://mmbiz.qpic.cn/mmbiz_png/y7EkeCWAzmqtcdL7HZYccBic0jicaWzR8bMZvtNQGxxYDG6SvNX35cbQ6TaDfdMYoBxHVLwNHujC7dg4WzBD5TVQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" /></p><ol><li>我们用css 边框可以模拟三角效果</li><li>宽度高度为0</li><li>我们4个边框都要写， 只保留需要的边框颜色，其余的不能省略，都改为 transparent 透明就好了</li><li>为了照顾兼容性 低版本的浏览器，加上 font-size: 0;  line-height: 0;</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小记录</title>
      <link href="/posts/53499.html"/>
      <url>/posts/53499.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>救命 awsl<br /><a href="https://www.coolapk.com/feed/44000662?shareKey=MzA5NWIwMjM1MmM3NjQwOTlmY2U~&amp;shareUid=3633462&amp;shareFrom=com.coolapk.market_10.5">查看链接</a><br />居然有人夸我温柔呜呜呜🥹<br /><img src="/images/23030901.png" alt="萌系黑客会遇到物理panic吗" /></p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于VisualStudio中‘scanf’返回值被忽略的解决方法</title>
      <link href="/posts/16445.html"/>
      <url>/posts/16445.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h3><p>在用VisualStudio初学c语言中，使用‘scanf’遇到了返回值被忽略的问题，上网摸索了一下找到了一下解决方法。</p><h3 id="原因"><a class="markdownIt-Anchor" href="#原因"></a> 原因</h3><p>在ANSI C中只有scanf()，没有scanf_s()，但是scanf()在读取时不检查边界，所以可能会造成内存泄漏。于是Microsoft公司在VS编译器中提供了scanf_s()，如果想继续使用scanf这个不安全的函数，可以通过以下方法解决。</p><h3 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h3><h4 id="方法1"><a class="markdownIt-Anchor" href="#方法1"></a> 方法①</h4><p><mark> 把<code>scanf</code> 改为 <code>scanf_s</code> </mark><br />在vs编译器中，scanf的值被重新定义了把<code>scanf</code> 改为 <code>scanf_s</code>即可决绝。但这种方法从在着一个问题，只能在vs中运行，其他编译器无法运行。</p><h4 id="方法2"><a class="markdownIt-Anchor" href="#方法2"></a> 方法②</h4><p><mark> 关闭安全检查 </mark><br />打开一个项目，在（项目—属性—C/C++—常规—SDL检查——选择否）或（项目—属性—C/C++—代码生成—安全检查——选择禁用安全检查）。</p><h4 id="方法3"><a class="markdownIt-Anchor" href="#方法3"></a> 方法③</h4><p><mark> 在C语言程序开头添加代码：<code>#pragma warning(disable:4996)</code> </mark><br />关闭<br /><mark> 在C语言程序开头添加代码：<code>#pragma warning(once:4996)</code> </mark><br />仅显示一个<br /><mark> 在C语言程序开头添加代码：<code>#define _CRT_SECURE_NO_WARNINGS</code> </mark><br />关闭安全检查</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML学习笔记（三）</title>
      <link href="/posts/21700.html"/>
      <url>/posts/21700.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="表单"><a class="markdownIt-Anchor" href="#表单"></a> 表单：</h3><ul><li>在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。表单目的是为了收集用户信息。</li></ul><ol><li><p>表单域</p><ul><li>&lt;form&gt;&lt;/form&gt;表单域标签，它相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span>&gt;</span></span><br><span class="line">    各种表单控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>action</th><th>url地址</th><th>用于指定接收并处理表单数据的服务器程序的url地址。</th></tr></thead><tbody><tr><td>method</td><td>get/post</td><td>用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td>name</td><td>名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单。</td></tr></tbody></table></li><li><p>表单控件</p><ul><li>包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</li></ul><ol><li><p>&lt;input&gt;&lt;/input&gt;表单控件，在&lt;form&gt;&lt;/form&gt;标签内。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span> <span class="attr">value</span>=<span class="string">&quot;你好&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input 输入的意思</li><li>&lt;input /&gt;标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型</li><li>除了type属性还有别的属性</li></ul><p>type 属性值</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>text</td><td>单行文本输入框</td></tr><tr><td>password</td><td>密码输入框</td></tr><tr><td>radio</td><td>单选按钮  可多选</td></tr><tr><td>checkbox</td><td>复选框  多选框</td></tr><tr><td>button</td><td>普通按钮</td></tr><tr><td>submit</td><td>提交按钮  提交数据</td></tr><tr><td>reset</td><td>重置按钮  清除数据</td></tr><tr><td>image</td><td>图像形式的提交按钮</td></tr><tr><td>file</td><td>文件域</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别：男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> 女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：一<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;一&quot;</span>&gt;</span> 二<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;二&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取验证码&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="comment">&lt;!--普通按钮--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="comment">&lt;!--提交表单数据--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="comment">&lt;!--清除表单数据--&gt;</span></span><br><span class="line">    上传图片<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="comment">&lt;!--文件域，上传文件使用--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>value 默认的文本值。有些表单想刚打开页面就默认显示几个文字，就可以通过这个value 来设置。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure><ul><li>name表单的名字， 这样，后台可以通过这个name属性找到这个表单。 页面中的表单很多，name主要作用就是用于区别不同的表单。</li><li>name属性后面的值，是我们自己定义的。</li><li>radio  如果是一组，我们必须给他们命名相同的名字 name   这样就可以多个选其中的一个啦。</li><li>name属性，我们现在用的较少，但是，当我们学ajax 和后台的时候，是必须的。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><ul><li>checked属性，表示默认选中状态。 较常见于 单选按钮和复选按钮。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性    别:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> /&gt;</span>女 </span><br></pre></td></tr></table></figure><ul><li>maxlength属性，正整数，控件允许输入的最多字符数。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input 属性小结</li></ul><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">说明</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">type</td><td style="text-align:left">表单类型</td><td style="text-align:left">用来指定不同的控件类型</td></tr><tr><td style="text-align:left">value</td><td style="text-align:left">表单值</td><td style="text-align:left">表单里面默认显示的文本</td></tr><tr><td style="text-align:left">name</td><td style="text-align:left">表单名字</td><td style="text-align:left">页面中的表单很多，name主要作用就是用于区别不同的表单。</td></tr><tr><td style="text-align:left">checked</td><td style="text-align:left">默认选中</td><td style="text-align:left">表示那个单选或者复选按钮一开始就被选中了</td></tr><tr><td style="text-align:left">maxlength</td><td style="text-align:left">允许输入的字符数</td><td style="text-align:left">用来控制密码等控件允许输入的最多字符数</td></tr></tbody></table><p>label标签</p><ul><li>label 标签为 input 元素定义标注（标签）用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点。</li><li>第一种用法就是用label标签直接包含input表单， 适合单个表单选择。</li><li>第二种用法 for 属性规定 label 与哪个表单元素绑定(通过id)。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">第一种</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span> 用户名： </span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">第二种</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>select下拉列表</p><ul><li><p>如果有多个选项让用户选择，为了节约空间，我们可以使用select控件定义下拉列表。</p></li><li><p>在option 中定义selected =&quot; selected &quot;时，当前项即为默认选中项。</p></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">选项：</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span> =<span class="string">&quot;selected&quot;</span>&gt;</span>答案一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span>&gt;</span>答案二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span>&gt;</span>答案三<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>label标签<ul><li>通过textarea控件可以轻松地创建多行文本输入框。</li><li>cols=“每行中的字符数” rows=“显示的行数”  我们实际开发不用。</li><li>默认内容直接写在标签中间。</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cows</span>=<span class="string">&quot;50&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line"> 文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记：</h3><blockquote><p>该笔记是看哔哩哔哩<a href="https://www.bilibili.com/video/av80149248?p=1">pink老师</a>HTML入门视频所写，请经过<a href="https://nisekana.github.io/">Nisekana</a>允许后转裁，禁止用于商业用途。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML学习笔记（二）</title>
      <link href="/posts/22717.html"/>
      <url>/posts/22717.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="html表格标签"><a class="markdownIt-Anchor" href="#html表格标签"></a> HTML表格标签：</h2><h4 id="表格标签"><a class="markdownIt-Anchor" href="#表格标签"></a> 表格标签：</h4><ol><li><p>表格的基本语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>第一列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    ···</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&lt;table&gt;&lt;/table&gt;：定义表格的标签。</p><p>&lt;caption&gt;：表格标题。caption 标签必须紧随 table 标签之后，通常这个标题会被居中且显示于表格之上。</p><p>&lt;tr&gt;&lt;/tr&gt;：用于定义表格的行，必须嵌套在&lt;table&gt;&lt;/table&gt;标签中。</p><p>&lt;th&gt;&lt;/th&gt;：表头单元格，会加粗居中显示，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中。</p><p>&lt;tb&gt;&lt;/tb&gt;：用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中。</p><p>&lt;td&gt;&lt;/td&gt;：指表格数据（table data），即数据单元格的内容。</p></li><li><p>表格属性</p><ul><li>写在表格标签&lt;table&gt;&lt;/table&gt;中。</li><li>可以省略，在css中设置。</li></ul><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">属性值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">align</td><td style="text-align:center">align=“left，center，right”</td><td style="text-align:center">表格在网页中的对齐方式</td></tr><tr><td style="text-align:center">border</td><td style="text-align:center">border=“0”(无边框)</td><td style="text-align:center">设置表格的边框</td></tr><tr><td style="text-align:center">width</td><td style="text-align:center">width=“500”</td><td style="text-align:center">设置表格的宽度</td></tr><tr><td style="text-align:center">height</td><td style="text-align:center">height=“500”</td><td style="text-align:center">设置表格的高度</td></tr><tr><td style="text-align:center">cellspacing</td><td style="text-align:center">cellspacing=“0”</td><td style="text-align:center">设置单元格与单元格之间的间距</td></tr><tr><td style="text-align:center">cellpadding</td><td style="text-align:center">cellpadding=“0”</td><td style="text-align:center">设置单元格内容与单元格边框之间的间距</td></tr></tbody></table></li><li><p>表格划分结构</p><ul><li><p>写在表格标签&lt;table&gt;&lt;/table&gt;中。</p></li><li><p>将表格分割成三个部分：题头、正文和脚注。而这三部分分别用:thead,tbody,tfoot来标注， 这样更好的分清表格结构。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span> <span class="comment">&lt;!--用于定义表格的头部,用来放标题之类的东西,内部必须拥有&lt;tr&gt; 标签！--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>第一列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span> <span class="comment">&lt;!--用于定义表格的主体。放数据本体--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span>这是表格的脚注<span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&lt;thead&gt;&lt;/thead&gt;：用于定义表格的头部。用来放标题之类的东西。&lt;thead&gt; 内部必须拥有&lt;tr&gt; 标签！</p><p>&lt;tbody&gt;&lt;/tbody&gt;：用于定义表格的主体。放数据本体 。</p><p>&lt;tfoot&gt;&lt;/tfoot&gt;：放表格的脚注之类。</p></li><li><p>合并单元格</p><ul><li><p>合并的顺序我们按照  先上 后下，先左  后右 的顺序 。</p></li><li><p>合并完之后需要删除多余的单元格。</p></li><li><p>跨行合并：rowspan=“合并单元格的个数”</p></li><li><p>跨列合并：colspan=“合并单元格的个数”</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>第一列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>第二跨列表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第一格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>第二行的第一跨行格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第二格<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三行的第三格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span>这是表格的脚注<span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="列表标签"><a class="markdownIt-Anchor" href="#列表标签"></a> 列表标签：</h4><ul><li>容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表。</li></ul><ol><li><p>无序列表</p><ul><li>&lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字的做法是不被允许的。</li><li>&lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    ···</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>有序列表</p><ul><li><p>&lt;ol&gt;标签中的type属性值为排序的序列号，不添加type属性时，有序列表默认从数字1开始排序。</p></li><li><p>常用的type属性值分别为是1，a，A，i，I</p></li><li><p>&lt;ol reversed=“reversed”&gt;中的reversed属性能够让有序列表中的序列倒序排列。</p></li><li><p>&lt;ol start=“3”&gt;中的start属性值为3，有序列表中的第一个序列号将从3开始排列。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>自定义列表</p><ul><li><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。</p></li><li><p>&lt;dl&gt;为自定义列表标签。且&lt;dl&gt;&lt;/dl&gt;中只能嵌套&lt;dt&gt;&lt;/dt&gt;和&lt;dd&gt;&lt;/dd&gt;。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">...   </span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记：</h2><blockquote><p>该笔记是看哔哩哔哩<a href="https://www.bilibili.com/video/av80149248?p=1">pink老师</a>HTML入门视频所写，请经过<a href="https://nisekana.github.io">Nisekana</a>允许后转裁，禁止用于商业用途。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML学习笔记（一）</title>
      <link href="/posts/51399.html"/>
      <url>/posts/51399.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="什么是html"><a class="markdownIt-Anchor" href="#什么是html"></a> 什么是HTML：</h2><ul><li><p>HTML：(Hyper Text Markup Language) 超文本标记语言。</p></li><li><p>可以加入图片、声音、动画、多媒体、链接等内容（超越文本限制 ）。</p></li></ul><h2 id="html基本架构"><a class="markdownIt-Anchor" href="#html基本架构"></a> HTML基本架构：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> <span class="comment">&lt;!--文档类型声明--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> <span class="comment">&lt;!--根标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span> <span class="comment">&lt;!--语言--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> <span class="comment">&lt;!--头部标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> <span class="comment">&lt;!--utf-8编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>这是一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span> <span class="comment">&lt;!--网页标题--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> <span class="comment">&lt;!--文本主题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第二个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="html常用标签"><a class="markdownIt-Anchor" href="#html常用标签"></a> HTML常用标签：</h2><h4 id="标题标签"><a class="markdownIt-Anchor" href="#标题标签"></a> 标题标签:</h4><p>&lt;h1&gt; - &lt;h6&gt; 共六级。每个标题独占一行。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">、···</span><br></pre></td></tr></table></figure><h4 id="段落和换行标签"><a class="markdownIt-Anchor" href="#段落和换行标签"></a> 段落和换行标签：</h4><p>&lt;p&gt; - &lt;/p&gt;，&lt;br /&gt;。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">段落标签：</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">换行标签：</span><br><span class="line">这是一个换行标签<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="文本格式标签"><a class="markdownIt-Anchor" href="#文本格式标签"></a> 文本格式标签：</h4><p>突出强调文字。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="分区布局标签"><a class="markdownIt-Anchor" href="#分区布局标签"></a> 分区布局标签：</h4><p>&lt;div&gt;和&lt;span&gt;</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>布局标签，一行只能放一个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>布局标签，一行可以放多个<span class="tag">&lt;/<span class="name">sapn</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="图像标签和路径"><a class="markdownIt-Anchor" href="#图像标签和路径"></a> 图像标签和路径：</h4><ol><li>图像标签</li></ol>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片标题&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片标题&quot;</span> <span class="attr">widt</span>=<span class="string">&quot;22&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片标题&quot;</span> <span class="attr">height</span>=<span class="string">&quot;33&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是替换文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片标题&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>src：图像路径，图像的相对路径，必须写。</p><p>alt：替换文本 ，当图像显示不出来时显示文本替换。</p><p>title：图像标题，当光标移动在图像上时显示图像标题。</p><p>widt：图像宽度。</p><p>height：图像高度。</p><p>border:图像边框。</p><p>图像标签注意事项：</p><ul><li><p>图像标签可以使用多个属性，必须写在标签名的后面。</p></li><li><p>属性之间不分顺序，之间要用空格分开。</p></li><li><p>属性采取键值对的格式，key= &quot;value&quot;格式。</p></li></ul><ol start="2"><li>路径</li></ol><p>同级路径：图像和html文件在同一目录。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>相对路径：图像相对于html文件的位置。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/img.jpg&quot;</span>/&gt;</span> <span class="comment">&lt;!--下一级路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../img.jpg&quot;</span>/&gt;</span> <span class="comment">&lt;!--上级路径--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="超链接标签"><a class="markdownIt-Anchor" href="#超链接标签"></a> 超链接标签：</h4><ol><li>语法格式</li></ol>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接地址&quot;</span> <span class="attr">target</span>=<span class="string">&quot;打开方式&quot;</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>href：链接地址，必须有。</p><p>target：打开页面方式。_self：默认值  在当前页面打开，_blank ：在新窗口打开。</p><ol start="2"><li>链接分类</li></ol><ul><li>外部链接：网站外的链接。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://nisekana.github.io&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>NiseKanaの巣<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>内部链接：网站内部页面之间的相互链接。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;nisekana.github.io.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>NiseKanaの巣<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--nisekana.github.io.html与当前页面在同级路径--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>空链接：#</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>NiseKanaの巣<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>下载链接：地址链接是zip等压缩包形式。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img.zip&quot;</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>元素链接：网页中的各种元素。如文本，图像，表格，音频，视频等添加超链接。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://nisekana.github.io&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;NiseKanaの巣.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>锚点链接：点击链接时快速定位到页面中锚点的位置。</li></ul>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#233&quot;</span>&gt;</span>点击快速定位<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--href的值加#号，#号后加id属性--&gt;</span></span><br><span class="line">&lt;id=&quot;233&quot;&gt;这是一个锚点<span class="tag">&lt;/<span class="name">id</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span>  //单独添加</span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;233&quot;</span>&gt;</span>这是一个描点<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>  //在标题中添加</span><br></pre></td></tr></table></figure><h4 id="注释标签"><a class="markdownIt-Anchor" href="#注释标签"></a> 注释标签：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--这是一个注释标签--&gt;</span>，快捷键：CTRL+/。</span><br></pre></td></tr></table></figure><h2 id="特殊字符"><a class="markdownIt-Anchor" href="#特殊字符"></a> 特殊字符：</h2><table><thead><tr><th style="text-align:center">特殊字符</th><th style="text-align:center">描述</th><th style="text-align:center">代码</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">空格</td><td style="text-align:center">&amp;nbsp;</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td><td style="text-align:center">&amp;lt;</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">大于</td><td style="text-align:center">&amp;gt;</td></tr><tr><td style="text-align:center">&amp;</td><td style="text-align:center">和号</td><td style="text-align:center">&amp;amp;</td></tr><tr><td style="text-align:center">￥</td><td style="text-align:center">人民币</td><td style="text-align:center">&amp;yen;</td></tr><tr><td style="text-align:center">©</td><td style="text-align:center">版权</td><td style="text-align:center">&amp;copy;</td></tr><tr><td style="text-align:center">®</td><td style="text-align:center">商标</td><td style="text-align:center">&amp;reg;</td></tr><tr><td style="text-align:center">°</td><td style="text-align:center">摄氏度</td><td style="text-align:center">&amp;deg;</td></tr><tr><td style="text-align:center">²</td><td style="text-align:center">上标号</td><td style="text-align:center">&amp;sup2;</td></tr></tbody></table><h2 id="写html代码时应注意什么"><a class="markdownIt-Anchor" href="#写html代码时应注意什么"></a> 写HTML代码时应注意什么：</h2><ul><li><p>尽可能少的使用无语义的标签div和span。</p></li><li><p>在语义不明显时，既可以使用div或者p时，尽量用p, 因为p在默认情况下有上下间距，对兼容特殊终端有利。</p></li><li><p>不要使用纯样式标签，如：b、font、u等，改用css设置。</p></li><li><p>需要强调的文本，可以包含在strong或者em标签中（浏览器预设样式，能用CSS指定就不用他们），strong默认样式是加粗（不要用b），em是斜体（不用i）。</p></li><li><p>使用表格时，标题要用caption，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td。</p></li><li><p>表单域要用fieldset标签包起来，并用legend标签说明表单的用途。</p></li><li><p>每个input标签对应的说明文本都需要使用label标签，并且通过为input设置id属性，在lable标签中设置for来让说明文本和相对应的input关联起来。</p></li></ul><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记：</h2><blockquote><p>该笔记是看哔哩哔哩<a href="https://www.bilibili.com/video/av80149248?p=1">pink老师</a>HTML入门视频所写，请经过<a href="https://nisekana.github.io">Nisekana</a>允许后转裁，禁止用于商业用途。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多邻国连胜365天记录</title>
      <link href="/posts/32408.html"/>
      <url>/posts/32408.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>多邻国连胜365天了，就在这里偷偷记录一下吧ヾ(≧▽≦*)o（好耶ヽ(✿ﾟ▽ﾟ)ノ！<br /><img src="/images/23021401.png" alt="多邻国连胜365天" /></p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
